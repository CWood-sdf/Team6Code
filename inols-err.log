






Started logging.
16:49:26.231160 Language server launched with arguments:
16:49:26.231160   arg[0] = C:\Users\woodc\AppData\Local\nvim-data\mason\packages\arduino-language-server\arduino-language-server.exe
16:49:26.231160   arg[1] = -clangd
16:49:26.231160   arg[2] = C:\Users\woodc\AppData\Local\nvim-data\mason\bin\clangd.cmd
16:49:26.231160   arg[3] = -cli-config
16:49:26.231160   arg[4] = C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml
16:49:26.231160   arg[5] = -fqbn
16:49:26.231160   arg[6] = arduino:avr:pro
16:49:26.231160   arg[7] = -log
16:49:26.231160   arg[8] = true
16:49:26.234310 arduino-cli found at C:\ProgramData\chocolatey\bin\arduino-cli.exe
16:49:26.234817 logging to C:\Users\woodc\TrshProto\inols.log
16:49:26.235866 [97mLS: : Initial board configuration: arduino:avr:pro[0m
16:49:26.236021 [97mLS: : arduino-language-server.exe Version: 0.7.5 Commit: 4752595 Date: 2023-08-17T12:59:44Z[0m
16:49:26.236021 [97mLS: : Language server temp directory: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128[0m
16:49:26.236021 [97mLS: : Language server build path: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build[0m
16:49:26.236021 [97mLS: : Language server build sketch root: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build\sketch[0m
16:49:26.236021 [97mLS: : Language server FULL build path: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild[0m
16:49:26.236021 IN Elapsed: 0s
16:49:26.236021 [92mIDE --> LS REQU initialize 1[0m
16:49:26.237111 [92m                initialize 1: [93mwrite-locked[0m[0m
16:49:26.237111 [92m                initialize 1: [93mwrite-unlocked[0m[0m
16:49:26.237111 [96mINIT --- : initializing workbench: file:///C:/Users/woodc/TrshProto[0m
16:49:26.237111 [96mINIT --- : [93mread-locked[0m[0m
16:49:26.237111 [96mINIT --- : [93mread-unlocked[0m[0m
16:49:26.237687 [92m                initialize 1: initialization parameters: {"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.5"}}[0m
16:49:26.237687 [32mIDE <-- LS RESP initialize 1[0m
16:49:26.237687 OUT Elapsed: 0s
16:49:26.237687 [96mINIT --- : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\67000425 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild --format json C:\Users\woodc\TrshProto[0m
16:49:26.844138 IN Elapsed: 606.4514ms
16:49:26.844138 [92mIDE --> LS NOTIF initialized[0m
16:49:26.844138 [92m                 initialized: Notification is not propagated to clangd[0m
16:49:26.844138 IN Elapsed: 0s
16:49:26.852159 [92mIDE --> LS NOTIF textDocument/didOpen[0m
16:49:26.852159 [92m                 textDocument/didOpen: [93mwrite-locked[0m[0m
16:49:26.852159 [92m                 textDocument/didOpen: (throttled: waiting for clangd)[0m
16:49:26.852159 [92m                 textDocument/didOpen: [93munlocked (waiting clangd)[0m[0m
16:49:32.396875 [96mINIT --- : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild",
    "used_libraries": [
      {
        "name": "Adafruit ADXL345",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Unified driver for the ADXL345 Accelerometer",
        "paragraph": "Unified driver for the ADXL345 Accelerometer",
        "website": "https://github.com/adafruit/Adafruit_ADXL345",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "version": "1.3.4",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_ADXL345_U.h"
        ]
      },
      {
        "name": "Adafruit BusIO",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "This is a library for abstracting away I2C and SPI interfacing",
        "paragraph": "This is a library for abstracting away I2C and SPI interfacing",
        "website": "https://github.com/adafruit/Adafruit_BusIO",
        "category": "Signal Input/Output",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "version": "1.14.5",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_address_detect",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_registers",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2corspi_register",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_modetest",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_register_bits",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_registers"
        ],
        "provides_includes": [
          "Adafruit_BusIO_Register.h",
          "Adafruit_I2CDevice.h",
          "Adafruit_I2CRegister.h",
          "Adafruit_SPIDevice.h"
        ]
      },
      {
        "name": "Wire",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "This library allows you to communicate with I2C and Two Wire Interface devices.",
        "paragraph": "It allows the communication with I2C devices like temperature sensors, realtime clocks and many others using SDA (Data Line) and SCL (Clock Line).",
        "website": "http://www.arduino.cc/en/Reference/Wire",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\SFRRanger_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\digital_potentiometer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\i2c_scanner",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_writer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_receiver",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_sender"
        ],
        "provides_includes": [
          "Wire.h"
        ]
      },
      {
        "name": "SPI",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus.",
        "paragraph": "SPI is a synchronous serial data protocol used by microcontrollers for communicating with one or more peripheral devices quickly over short distances. It uses three lines common to all devices (MISO, MOSI and SCK) and one specific for each device.",
        "website": "http://www.arduino.cc/en/Reference/SPI",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\BarometricPressureSensor",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\DigitalPotControl"
        ],
        "provides_includes": [
          "SPI.h"
        ]
      },
      {
        "name": "Adafruit Unified Sensor",
        "author": "Adafruit \u003cinfo@adafruit.com\u003e",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Required for all Adafruit Unified Sensor based libraries.",
        "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
        "website": "https://github.com/adafruit/Adafruit_Sensor",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "version": "1.1.14",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_Sensor.h"
        ]
      },
      {
        "name": "Arduino-MPU6050-dev",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "is_legacy": true,
        "location": 1,
        "provides_includes": [
          "MPU6050.h"
        ]
      },
      {
        "name": "SoftwareSerial",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables serial communication on any digital pin.",
        "paragraph": "The SoftwareSerial library has been developed to allow serial communication on any digital pin of the board, using software to replicate the functionality of the hardware UART. It is possible to have multiple software serial ports with speeds up to 115200 bps.",
        "website": "http://www.arduino.cc/en/Reference/SoftwareSerial",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\SoftwareSerialExample",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\TwoPortReceive"
        ],
        "provides_includes": [
          "SoftwareSerial.h"
        ]
      }
    ],
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701881370",
      "extra.time.utc=1701899370",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
16:49:32.398563 [96mINIT --- : Updated 'libraries.cache'. Copied: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild\libraries.cache to C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build\libraries.cache[0m
16:49:32.398563 [96mINIT --- : [93mread-locked[0m[0m
16:49:32.398563 [96mINIT --- : [93mread-unlocked[0m[0m
16:49:32.399075 [96mINIT --- : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\3796773088 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build --format json --skip-libraries-discovery C:\Users\woodc\TrshProto[0m
16:49:33.999895 [96mINIT --- : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build",
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701881373",
      "extra.time.utc=1701899373",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
16:49:34.009072 [96mINIT --- : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml config dump --format json[0m
16:49:34.103811 [96mINIT --- : Arduino Data Dir -> C:\Users\woodc\AppData\Local\Arduino15[0m
16:49:34.105125 [96mINIT --- :     Starting clangd: C:\Users\woodc\AppData\Local\nvim-data\mason\bin\clangd.cmd -log=verbose --compile-commands-dir=C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build -query-driver=C:\Users\woodc\AppData\Local\Arduino15\packages\**[0m
16:49:34.128878 logging to C:\Users\woodc\TrshProto\inols-clangd.log
16:49:34.130240 logging to C:\Users\woodc\TrshProto\inols-clangd-err.log
16:49:34.130240 [91mIDE     LS --> Clangd REQU initialize 1[0m
16:49:34.133381 OUT Elapsed: 3.1411ms
16:49:34.291460 IN Elapsed: 159.3745ms
16:49:34.291460 [31mIDE     LS <-- Clangd RESP initialize 1[0m
16:49:34.291460 [96mINIT --- : clangd successfully started: {"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/","*"]},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","\u003c","\u003e",","]},"declarationProvider":{},"definitionProvider":{},"typeDefinitionProvider":{},"implementationProvider":{},"referencesProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentLinkProvider":{},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{"prepareProvider":true},"foldingRangeProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"selectionRangeProvider":{},"callHierarchyProvider":{},"semanticTokensProvider":{"legend":{"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","modifier","operator","comment"],"tokenModifiers":["declaration","definition","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","usedAsMutablePointer","constructorOrDestructor","userDefined","functionScope","classScope","fileScope","globalScope"]},"range":false,"full":{"delta":true}},"workspaceSymbolProvider":{}},"serverInfo":{"name":"clangd","version":"clangd version 16.0.2 (https://github.com/llvm/llvm-project 18ddebe1a1a9bde349441631365f0472e9693520) windows+grpc x86_64-pc-windows-msvc"}}[0m
16:49:34.291460 [91mIDE     LS --> Clangd NOTIF initialized[0m
16:49:34.291460 OUT Elapsed: 0s
16:49:34.291460 [96mINIT --- : Done initializing workbench[0m
16:49:34.291972 [92m                 textDocument/didOpen: [93mlocked (waiting clangd)[0m[0m
16:49:34.291972 [92m                 textDocument/didOpen: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:34.292656 [92m                 textDocument/didOpen: Increasing .ino tracked files count to 1[0m
16:49:34.293199 [91mIDE     LS --> Clangd NOTIF textDocument/didOpen[0m
16:49:34.293799 OUT Elapsed: 61.4µs
16:49:34.293799 [92m                 textDocument/didOpen: [93mwrite-unlocked[0m[0m
16:49:34.293799 IN Elapsed: 0s
16:49:34.293799 [92mIDE --> LS NOTIF textDocument/didChange[0m
16:49:34.293799 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
16:49:34.293799 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@3)[0m
16:49:34.293799 [92m                 textDocument/didChange:   > 67:4-75:3 (len=437) -> "// mySerial.println(\"AT\"); // Once the handshake test is successful, it will back to OK\n    // delay(2000);\n    // updateSerial();\n    // mySerial.println(\"AT+CSQ\"); // Signal quality test, value range is 0-31 , 31 is the best\n    // updateSerial();\n    // mySerial.println(\"AT+CCID\"); // Read SIM information to confirm whether the SIM is plugged\n    // updateSerial();\n    // mySerial.println(\"AT+CREG?\"); // Check whether it has registered in the network\n    //"[0m
16:49:34.294310 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    if (time % 10000 == 0) {
        updateSerial();
        Serial.println("update bro");
    }
    if (time == 30000) {
        Serial.println("sdfaksd");
        etPhoneHome("01", "7038250271", "Hello World");
    }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
16:49:34.294310 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:34.296741 Ino Range: 67:4-75:3 -> Cpp Range:80:4-88:3
16:49:34.296741   > Current sketchmapper content:
16:49:34.296741   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:34.296741   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:34.296741   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:34.297400   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:34.297400   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:34.297400   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:34.297400   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:34.297400   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:34.297400   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:34.297400   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:34.297400  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:34.297400  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:34.297400  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:34.297400  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:34.297400  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:34.297400  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:34.297400  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:34.297400  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:34.297400  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:34.297400  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.297400  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:34.297400  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.297400  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:34.297400  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.297400  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:34.297400  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.297400  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:34.297400  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:34.297400  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:34.297400  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:34.297400  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:34.297400  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:34.297400  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:34.297400  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:34.297400  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:34.297400  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:34.297400  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:34.297400  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:34.297400  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:34.297400  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:34.297400  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:34.297400  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:34.297400  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:34.297400  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:34.297400  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:34.297400  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:34.297400  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:34.297400  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:34.297400  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:34.297400  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:34.297400  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:34.297400  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:34.297400  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:34.297400  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:34.297400  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:34.297400  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:34.297400  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:34.297400  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:34.297400  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:34.297400  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:34.297400  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:34.297400  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:34.297400  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:34.297400  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:34.297400  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:34.297400  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:34.297400  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:34.297400  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:34.297400  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:34.297400  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:34.297400  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:34.297400  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:34.297400  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:34.297400  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:34.297400  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:34.297400  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:34.297400  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:34.297400  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:34.297400  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:34.297400  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:34.297400  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:34.297400  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:34.297400  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:34.297400  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:34.297400  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:34.297400  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:34.297400  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:34.297400  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:34.297400  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:34.297400  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:34.297400  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:34.297400  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:34.297400  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:34.297400  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:34.297400  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:34.297910  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:34.297910  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:34.297910  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:34.297910  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:34.297910  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:34.297910 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:34.297910 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:34.297910 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:34.297910 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:34.297910 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:34.297910 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:34.297910 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:34.297910 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:34.297910 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:34.297910 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:34.297910 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:34.297910 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:34.297910 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:34.297910 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:34.297910 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:34.297910 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:34.297910 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:34.297910 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:34.297910 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:34.297910 119:     if (time % 10000 == 0) {                                 | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:34.297910 120:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:34.297910 121:         Serial.println("update bro");                        | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:34.297910 122:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:34.297910 123:     if (time == 30000) {                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:34.297910 124:         Serial.println("sdfaksd");                           | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:34.297910 125:         etPhoneHome("01", "7038250271", "Hello World");      | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:34.297910 126:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:34.297910 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:34.297910 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:34.297910 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:34.297910 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:34.297910 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:34.297910 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:34.297910 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:34.297910 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:34.297910 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:34.297910 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:34.297910 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:34.297910 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:34.297910 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:34.297910 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:34.297910 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:34.297910 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:34.297910 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:34.297910 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:34.297910 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:34.297910 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:34.297910 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:34.297910 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:34.297910 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:34.297910 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:34.297910 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:34.297910 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:34.297910 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:34.297910 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:34.297910 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:34.297910 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:34.297910 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:34.297910 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:34.297910 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:34.297910 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:34.297910 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:34.297910 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:34.297910 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:34.297910 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:34.297910 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@2)[0m
16:49:34.297910 [92m                 textDocument/didChange:             > 80:4-88:3 -> "// mySerial.println(\"AT\"); // Once the handshake test is successful, it will back to OK\n    // delay(2000);\n    // updateSerial();\n    // mySerial.println(\"AT+CSQ\"); // Signal quality test, value range is 0-31 , 31 is the best\n    // updateSerial();\n    // mySerial.println(\"AT+CCID\"); // Read SIM information to confirm whether the SIM is plugged\n    // updateSerial();\n    // mySerial.println(\"AT+CREG?\"); // Check whether it has registered in the network\n    //"[0m
16:49:34.297910 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:34.297910 OUT Elapsed: 0s
16:49:34.297910 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
16:49:34.304372 IN Elapsed: 12.9113ms
16:49:34.304372 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
16:49:34.304372 IN Elapsed: 0s
16:49:34.304372 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
16:49:34.304372 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
16:49:34.304372 [91m                            textDocument/publishDiagnostics: file:///C:/Users/woodc/AppData/Local/clangd/config.yaml (0 diagnostics):[0m
16:49:34.304372 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
16:49:34.304372 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/.clangd (0 diagnostics):[0m
16:49:34.306384 [91m                            textDocument/publishDiagnostics: file:///C:/Users/woodc/AppData/Local/clangd/config.yaml -> file:///C:/Users/woodc/AppData/Local/clangd/config.yaml[0m
16:49:34.306384 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/.clangd -> file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/.clangd[0m
16:49:34.306384 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
16:49:34.306384 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/AppData/Local/clangd/config.yaml (0 diagnostics):[0m
16:49:34.306384 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
16:49:34.306384 [91m                            textDocument/publishDiagnostics:   - file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/.clangd (0 diagnostics):[0m
16:49:34.306384 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
16:49:34.306384 OUT Elapsed: 0s
16:49:34.306384 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
16:49:34.307771 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
16:49:34.307771 OUT Elapsed: 0s
16:49:34.307771 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
16:49:34.307771 IN Elapsed: 3.3991ms
16:49:34.307771 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
16:49:34.307771 IN Elapsed: 0s
16:49:34.307771 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 0[0m
16:49:34.307771 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 0[0m
16:49:34.307771 OUT Elapsed: 0s
16:49:34.307771 IN Elapsed: 0s
16:49:34.307771 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.307771 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
16:49:34.307771 IN Elapsed: 0s
16:49:34.307771 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.307771 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
16:49:34.307771 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
16:49:34.307771 [91m                            textDocument/publishDiagnostics: file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/.clangd (0 diagnostics):[0m
16:49:34.307771 [92mIDE <-- LS REQU window/workDoneProgress/create 1[0m
16:49:34.307771 OUT Elapsed: 0s
16:49:34.307771 IN Elapsed: 9.8605ms
16:49:34.307771 [32mIDE --> LS RESP window/workDoneProgress/create 1[0m
16:49:34.307771 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.307771 OUT Elapsed: 0s
16:49:34.307771 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.307771 OUT Elapsed: 0s
16:49:34.307771 [91m                            textDocument/publishDiagnostics: file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/.clangd -> file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/.clangd[0m
16:49:34.310958 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
16:49:34.310958 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/.clangd (0 diagnostics):[0m
16:49:34.310958 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
16:49:34.310958 OUT Elapsed: 0s
16:49:34.310958 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
16:49:34.469012 IN Elapsed: 161.2415ms
16:49:34.469012 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
16:49:34.469012 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
16:49:34.469012 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
16:49:34.469559 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
16:49:34.469559 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
16:49:34.469559 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
16:49:34.469559 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
16:49:34.469559 OUT Elapsed: 0s
16:49:34.469559 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
16:49:34.483069 IN Elapsed: 14.0564ms
16:49:34.483069 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
16:49:34.483069 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
16:49:34.483069 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
16:49:34.487863 IN Elapsed: 180.0924ms
16:49:34.487863 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
16:49:34.487863 [92mIDE --> LS REQU textDocument/formatting 2[0m
16:49:34.488475 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
16:49:34.488475 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
16:49:34.488475 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
16:49:34.488475 OUT Elapsed: 0s
16:49:34.488475 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
16:49:34.488475 [92m                textDocument/formatting 2: [93mwrite-locked[0m[0m
16:49:34.488475 [92m                textDocument/formatting 2: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:34.488987 [92m                textDocument/formatting 2:     using custom formatter config file C:\Users\woodc\TrshProto\.clang-format[0m
16:49:34.489063 [92m                textDocument/formatting 2:     writing formatter config in: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build\sketch\.clang-format[0m
16:49:34.489629 IN Elapsed: 6.5598ms
16:49:34.489629 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.490141 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
16:49:34.490141 IN Elapsed: 0s
16:49:34.490141 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.490141 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
16:49:34.490141 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.490141 OUT Elapsed: 0s
16:49:34.490141 IN Elapsed: 0s
16:49:34.490141 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.490141 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
16:49:34.490141 IN Elapsed: 0s
16:49:34.490141 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.490141 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
16:49:34.490141 [91mIDE     LS --> Clangd REQU textDocument/formatting 2[0m
16:49:34.490141 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.490141 OUT Elapsed: 0s
16:49:34.491318 OUT Elapsed: 0s
16:49:34.491318 IN Elapsed: 0s
16:49:34.491318 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491318 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
16:49:34.491318 IN Elapsed: 0s
16:49:34.491318 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491318 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
16:49:34.491318 IN Elapsed: 0s
16:49:34.491318 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491318 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
16:49:34.491318 IN Elapsed: 0s
16:49:34.491318 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491318 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491318 IN Elapsed: 0s
16:49:34.491318 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491318 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491856 IN Elapsed: 538µs
16:49:34.491856 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491856 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491856 IN Elapsed: 0s
16:49:34.491856 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491856 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491856 IN Elapsed: 0s
16:49:34.491856 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491856 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491856 IN Elapsed: 0s
16:49:34.491856 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491856 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491856 IN Elapsed: 0s
16:49:34.491856 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491856 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491856 IN Elapsed: 0s
16:49:34.491856 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491856 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491856 IN Elapsed: 0s
16:49:34.491856 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491856 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491856 IN Elapsed: 0s
16:49:34.491856 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491856 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491856 IN Elapsed: 0s
16:49:34.491856 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491856 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.491856 IN Elapsed: 0s
16:49:34.491856 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.491856 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.492400 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.492400 OUT Elapsed: 0s
16:49:34.492400 IN Elapsed: 543.8µs
16:49:34.492400 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.492400 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.492400 IN Elapsed: 0s
16:49:34.492400 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.492400 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.492400 IN Elapsed: 0s
16:49:34.492400 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.492400 OUT Elapsed: 0s
16:49:34.492927 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.492927 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
16:49:34.493480 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.493480 OUT Elapsed: 0s
16:49:34.510098 IN Elapsed: 17.1708ms
16:49:34.510098 [31mIDE     LS <-- Clangd RESP textDocument/formatting 2[0m
16:49:34.510098 [92m                textDocument/formatting 2: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
16:49:34.510627 [92m                textDocument/formatting 2: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp:162:1-164:0 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:149:1-151:0 (.ino)[0m
16:49:34.510627 [92m                textDocument/formatting 2:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp:162:1-164:0 -> "\n"[0m
16:49:34.510627 [92m                textDocument/formatting 2: converted to:[0m
16:49:34.510627 [92m                textDocument/formatting 2:   file:///C:/Users/woodc/TrshProto/TrshProto.ino ino/textEdit (1 elements)[0m
16:49:34.510627 [92m                textDocument/formatting 2:     > file:///C:/Users/woodc/TrshProto/TrshProto.ino:149:1-151:0 -> "\n"[0m
16:49:34.510627 [92m                textDocument/formatting 2:     formatter config cleaned[0m
16:49:34.510627 [92m                textDocument/formatting 2: [93mwrite-unlocked[0m[0m
16:49:34.510627 [32mIDE <-- LS RESP textDocument/formatting 2[0m
16:49:34.510627 OUT Elapsed: 0s
16:49:34.510627 IN Elapsed: 0s
16:49:34.510627 [92mIDE --> LS NOTIF textDocument/didChange[0m
16:49:34.510627 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
16:49:34.510627 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@4)[0m
16:49:34.510627 [92m                 textDocument/didChange:   > 149:1-149:1 (len=0) -> "\n"[0m
16:49:34.510627 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    if (time % 10000 == 0) {
        updateSerial();
        Serial.println("update bro");
    }
    if (time == 30000) {
        Serial.println("sdfaksd");
        etPhoneHome("01", "7038250271", "Hello World");
    }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}


-----------------------------[0m
16:49:34.510627 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:34.514256 Ino Range: 149:1-149:1 -> Cpp Range:162:1-162:1
16:49:34.514307   > Current sketchmapper content:
16:49:34.514307   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:34.514307   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:34.514307   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:34.514307   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:34.514307   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:34.514307   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:34.514307   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:34.514307   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:34.514307   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:34.514307   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:34.514307  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:34.514307  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:34.514307  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:34.514307  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:34.514307  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:34.514307  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:34.514307  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:34.514307  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:34.514307  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:34.514307  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.514307  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:34.514307  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.514307  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:34.514307  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.514307  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:34.514307  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.514307  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:34.514307  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:34.514307  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:34.514307  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:34.514307  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:34.514307  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:34.514307  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:34.514307  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:34.514307  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:34.514307  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:34.514307  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:34.514307  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:34.514307  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:34.514307  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:34.514307  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:34.514307  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:34.514307  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:34.514307  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:34.514307  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:34.514307  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:34.514307  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:34.514307  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:34.514307  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:34.514307  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:34.514307  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:34.514307  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:34.514307  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:34.514307  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:34.514307  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:34.514307  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:34.514307  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:34.514307  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:34.514307  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:34.514307  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:34.514307  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:34.514307  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:34.514307  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:34.514307  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:34.514307  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:34.514307  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:34.514307  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:34.514307  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:34.514307  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:34.514307  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:34.514307  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:34.514307  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:34.514307  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:34.514307  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:34.514307  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:34.514307  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:34.514816  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:34.514816  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:34.514816  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:34.514816  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:34.514816  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:34.514816  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:34.514816  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:34.514816  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:34.514816  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:34.514816  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:34.514816  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:34.514816  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:34.514816  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:34.514816  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:34.514816  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:34.514816  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:34.514816  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:34.514816  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:34.514816  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:34.514816  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:34.514816  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:34.514816  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:34.514816  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:34.514816  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:34.514816 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:34.514816 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:34.514816 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:34.514816 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:34.514816 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:34.514816 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:34.514816 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:34.514816 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:34.514816 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:34.514816 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:34.514816 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:34.514816 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:34.514816 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:34.514816 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:34.514816 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:34.514816 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:34.514816 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:34.514816 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:34.514816 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:34.514816 119:     if (time % 10000 == 0) {                                 | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:34.514816 120:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:34.514816 121:         Serial.println("update bro");                        | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:34.514816 122:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:34.514816 123:     if (time == 30000) {                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:34.514816 124:         Serial.println("sdfaksd");                           | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:34.514816 125:         etPhoneHome("01", "7038250271", "Hello World");      | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:34.514816 126:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:34.514816 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:34.514816 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:34.514816 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:34.514816 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:34.514816 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:34.514816 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:34.514816 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:34.514816 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:34.514816 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:34.514816 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:34.514816 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:34.514816 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:34.514816 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:34.514816 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:34.514816 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:34.514816 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:34.514816 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:34.514816 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:34.514816 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:34.514816 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:34.514816 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:34.514816 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:34.514816 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:34.514816 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:34.514816 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:34.514816 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:34.514816 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:34.514816 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:34.514816 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:34.514816 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:34.514816 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:34.514816 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:34.514816 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:34.514816 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:34.514816 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:34.514816 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:34.514816 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:34.515355 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:34.515355 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
16:49:34.515355 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@3)[0m
16:49:34.515355 [92m                 textDocument/didChange:             > 162:1-162:1 -> "\n"[0m
16:49:34.515355 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:34.515355 OUT Elapsed: 0s
16:49:34.515355 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
16:49:34.518620 IN Elapsed: 3.2652ms
16:49:34.518620 [92mIDE --> LS NOTIF textDocument/didChange[0m
16:49:34.518620 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
16:49:34.518620 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@5)[0m
16:49:34.518620 [92m                 textDocument/didChange:   > 150:0-151:0 (len=1) -> ""[0m
16:49:34.520945 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    if (time % 10000 == 0) {
        updateSerial();
        Serial.println("update bro");
    }
    if (time == 30000) {
        Serial.println("sdfaksd");
        etPhoneHome("01", "7038250271", "Hello World");
    }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
16:49:34.520945 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:34.522466 Ino Range: 150:0-151:0 -> Cpp Range:163:0-164:0
16:49:34.522466   > Current sketchmapper content:
16:49:34.522466   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:34.522466   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:34.522466   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:34.522466   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:34.522466   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:34.522466   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:34.522466   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:34.522466   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:34.522466   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:34.522466   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:34.522466  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:34.522466  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:34.522466  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:34.522466  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:34.522466  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:34.522466  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:34.522466  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:34.522466  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:34.522466  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:34.522466  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.522466  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:34.522466  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.522466  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:34.522466  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.522466  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:34.522466  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:34.522466  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:34.522466  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:34.522466  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:34.522466  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:34.522466  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:34.522466  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:34.522466  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:34.522466  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:34.522466  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:34.522466  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:34.522466  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:34.522466  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:34.522466  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:34.522466  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:34.522466  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:34.522466  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:34.522466  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:34.522466  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:34.522466  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:34.522466  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:34.522466  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:34.522466  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:34.522466  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:34.522466  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:34.522466  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:34.522466  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:34.522466  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:34.522466  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:34.522466  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:34.522466  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:34.522466  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:34.522466  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:34.522466  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:34.522466  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:34.522466  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:34.522466  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:34.522466  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:34.522466  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:34.522466  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:34.522466  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:34.522466  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:34.522466  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:34.522466  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:34.522466  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:34.522466  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:34.522466  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:34.522466  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:34.522466  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:34.522466  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:34.522466  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:34.522466  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:34.522466  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:34.522466  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:34.522466  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:34.522466  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:34.522466  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:34.522466  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:34.522466  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:34.522466  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:34.522466  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:34.522466  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:34.522466  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:34.522466  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:34.522466  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:34.522466  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:34.522466  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:34.522466  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:34.522466  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:34.522466  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:34.522466  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:34.522466  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:34.522466  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:34.522466  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:34.522466  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:34.522466 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:34.522466 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:34.522466 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:34.522466 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:34.522466 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:34.522466 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:34.522466 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:34.522466 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:34.522466 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:34.522466 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:34.522466 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:34.522466 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:34.522466 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:34.522466 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:34.522466 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:34.522466 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:34.522466 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:34.522466 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:34.522466 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:34.522466 119:     if (time % 10000 == 0) {                                 | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:34.522466 120:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:34.522466 121:         Serial.println("update bro");                        | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:34.522466 122:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:34.522466 123:     if (time == 30000) {                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:34.522466 124:         Serial.println("sdfaksd");                           | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:34.522466 125:         etPhoneHome("01", "7038250271", "Hello World");      | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:34.522466 126:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:34.522466 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:34.522466 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:34.522466 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:34.522466 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:34.522466 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:34.522466 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:34.522466 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:34.522466 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:34.522466 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:34.522466 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:34.522466 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:34.522466 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:34.522466 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:34.522466 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:34.522466 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:34.522466 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:34.522466 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:34.522466 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:34.522466 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:34.522466 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:34.522466 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:34.522466 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:34.522466 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:34.522466 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:34.522466 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:34.522466 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:34.522466 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:34.522466 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:34.522466 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:34.522466 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:34.522466 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:34.522466 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:34.522466 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:34.522466 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:34.522466 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:34.522466 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:34.522466 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:34.522466 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:34.522466 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@4)[0m
16:49:34.522466 [92m                 textDocument/didChange:             > 163:0-164:0 -> ""[0m
16:49:34.522466 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:34.523511 OUT Elapsed: 0s
16:49:34.523511 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
16:49:34.524186 IN Elapsed: 674.6µs
16:49:34.524186 [92mIDE --> LS NOTIF textDocument/didSave[0m
16:49:34.524695 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
16:49:34.524695 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
16:49:34.524695 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
16:49:34.722141 IN Elapsed: 212.0434ms
16:49:34.722141 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.722141 [91m                            $/progress: backgroundIndexProgress REPORT, 2/27, 7.0%[0m
16:49:34.722141 IN Elapsed: 0s
16:49:34.722141 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.722141 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.722141 [91m                            $/progress: backgroundIndexProgress REPORT, 2/27, 7.0%[0m
16:49:34.722141 OUT Elapsed: 0s
16:49:34.722141 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.722141 OUT Elapsed: 0s
16:49:34.747604 IN Elapsed: 24.4514ms
16:49:34.747604 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.747604 [91m                            $/progress: backgroundIndexProgress REPORT, 3/27, 11.0%[0m
16:49:34.747604 IN Elapsed: 0s
16:49:34.747604 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.747604 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.747604 [91m                            $/progress: backgroundIndexProgress REPORT, 3/27, 11.0%[0m
16:49:34.747604 OUT Elapsed: 0s
16:49:34.747604 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.747604 OUT Elapsed: 0s
16:49:34.766436 IN Elapsed: 18.8318ms
16:49:34.766436 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.766436 [91m                            $/progress: backgroundIndexProgress REPORT, 4/27, 14.0%[0m
16:49:34.766436 IN Elapsed: 0s
16:49:34.766436 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.766436 [91m                            $/progress: backgroundIndexProgress REPORT, 4/27, 14.0%[0m
16:49:34.766436 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.766436 OUT Elapsed: 0s
16:49:34.815545 IN Elapsed: 49.1097ms
16:49:34.815545 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.815545 [91m                            $/progress: backgroundIndexProgress REPORT, 5/27, 18.0%[0m
16:49:34.815545 IN Elapsed: 0s
16:49:34.815545 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.815545 [91m                            $/progress: backgroundIndexProgress REPORT, 5/27, 18.0%[0m
16:49:34.815545 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.815545 OUT Elapsed: 0s
16:49:34.815545 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.815545 OUT Elapsed: 0s
16:49:34.952985 IN Elapsed: 137.44ms
16:49:34.952985 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.952985 [91m                            $/progress: backgroundIndexProgress REPORT, 6/27, 22.0%[0m
16:49:34.952985 IN Elapsed: 0s
16:49:34.952985 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:34.952985 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.952985 [91m                            $/progress: backgroundIndexProgress REPORT, 6/27, 22.0%[0m
16:49:34.952985 OUT Elapsed: 0s
16:49:34.952985 [92mIDE <-- LS NOTIF $/progress[0m
16:49:34.952985 OUT Elapsed: 0s
16:49:35.257930 IN Elapsed: 304.9448ms
16:49:35.257930 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.257930 [91m                            $/progress: backgroundIndexProgress REPORT, 7/27, 25.0%[0m
16:49:35.257930 IN Elapsed: 0s
16:49:35.257930 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.257930 [91m                            $/progress: backgroundIndexProgress REPORT, 7/27, 25.0%[0m
16:49:35.257930 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.257930 OUT Elapsed: 0s
16:49:35.257930 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.257930 OUT Elapsed: 0s
16:49:35.362160 IN Elapsed: 104.2301ms
16:49:35.362160 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.362160 [91m                            $/progress: backgroundIndexProgress REPORT, 8/27, 29.0%[0m
16:49:35.362160 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.362160 OUT Elapsed: 0s
16:49:35.502264 IN Elapsed: 140.0325ms
16:49:35.502264 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.502264 [91m                            $/progress: backgroundIndexProgress REPORT, 9/27, 33.0%[0m
16:49:35.502264 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.502264 OUT Elapsed: 0s
16:49:35.537284 [95mSKETCH REBUILD: : Sketch rebuild started[0m
16:49:35.537284 [92mIDE <-- LS REQU window/workDoneProgress/create 2[0m
16:49:35.537284 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
16:49:35.537284 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
16:49:35.537284 OUT Elapsed: 0s
16:49:35.537284 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    if (time % 10000 == 0) {
        updateSerial();
        Serial.println("update bro");
    }
    if (time == 30000) {
        Serial.println("sdfaksd");
        etPhoneHome("01", "7038250271", "Hello World");
    }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
16:49:35.538084 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\1257047682 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild --format json C:\Users\woodc\TrshProto[0m
16:49:35.539167 IN Elapsed: 1.0144712s
16:49:35.539167 [32mIDE --> LS RESP window/workDoneProgress/create 2[0m
16:49:35.539167 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.539167 OUT Elapsed: 0s
16:49:35.638246 IN Elapsed: 135.9817ms
16:49:35.638246 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.638246 [91m                            $/progress: backgroundIndexProgress REPORT, 10/27, 37.0%[0m
16:49:35.638246 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.638246 OUT Elapsed: 0s
16:49:35.653198 IN Elapsed: 14.9516ms
16:49:35.653198 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.653198 [91m                            $/progress: backgroundIndexProgress REPORT, 11/27, 40.0%[0m
16:49:35.653198 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.653198 OUT Elapsed: 0s
16:49:35.666748 IN Elapsed: 13.5501ms
16:49:35.666748 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.666748 [91m                            $/progress: backgroundIndexProgress REPORT, 12/27, 44.0%[0m
16:49:35.666748 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.666748 OUT Elapsed: 0s
16:49:35.669570 IN Elapsed: 2.8222ms
16:49:35.669570 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.669570 [91m                            $/progress: backgroundIndexProgress REPORT, 13/27, 48.0%[0m
16:49:35.669570 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.669570 OUT Elapsed: 0s
16:49:35.696183 IN Elapsed: 26.6129ms
16:49:35.702689 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.702689 [91m                            $/progress: backgroundIndexProgress REPORT, 14/27, 51.0%[0m
16:49:35.702689 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.702689 OUT Elapsed: 0s
16:49:35.708618 IN Elapsed: 5.9294ms
16:49:35.708618 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.708618 [91m                            $/progress: backgroundIndexProgress REPORT, 15/27, 55.0%[0m
16:49:35.708618 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.709157 OUT Elapsed: 538.7µs
16:49:35.716309 IN Elapsed: 7.6905ms
16:49:35.716855 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.716855 [91m                            $/progress: backgroundIndexProgress REPORT, 16/27, 59.0%[0m
16:49:35.716855 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.716855 OUT Elapsed: 0s
16:49:35.717954 IN Elapsed: 1.0991ms
16:49:35.717954 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.717954 [91m                            $/progress: backgroundIndexProgress REPORT, 17/27, 62.0%[0m
16:49:35.717954 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.717954 OUT Elapsed: 0s
16:49:35.721778 IN Elapsed: 3.8233ms
16:49:35.721778 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.721778 [91m                            $/progress: backgroundIndexProgress REPORT, 18/27, 66.0%[0m
16:49:35.721778 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.721778 OUT Elapsed: 0s
16:49:35.725070 IN Elapsed: 3.2924ms
16:49:35.725070 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.725070 [91m                            $/progress: backgroundIndexProgress REPORT, 19/27, 70.0%[0m
16:49:35.725070 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.725070 OUT Elapsed: 0s
16:49:35.734281 IN Elapsed: 9.2112ms
16:49:35.734281 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.734281 [91m                            $/progress: backgroundIndexProgress REPORT, 20/27, 74.0%[0m
16:49:35.734281 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.734281 OUT Elapsed: 0s
16:49:35.752719 IN Elapsed: 18.4372ms
16:49:35.753201 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.753201 [91m                            $/progress: backgroundIndexProgress REPORT, 21/27, 77.0%[0m
16:49:35.753201 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.753201 OUT Elapsed: 0s
16:49:35.755413 IN Elapsed: 2.2116ms
16:49:35.755965 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.755965 [91m                            $/progress: backgroundIndexProgress REPORT, 22/27, 81.0%[0m
16:49:35.755965 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.755965 OUT Elapsed: 0s
16:49:35.759782 IN Elapsed: 3.8172ms
16:49:35.759782 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.759782 [91m                            $/progress: backgroundIndexProgress REPORT, 23/27, 85.0%[0m
16:49:35.759782 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.759782 OUT Elapsed: 0s
16:49:35.762744 IN Elapsed: 2.9612ms
16:49:35.762744 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.762744 [91m                            $/progress: backgroundIndexProgress REPORT, 24/27, 88.0%[0m
16:49:35.762744 IN Elapsed: 0s
16:49:35.762744 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.762744 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.762744 OUT Elapsed: 0s
16:49:35.762744 [91m                            $/progress: backgroundIndexProgress REPORT, 25/27, 92.0%[0m
16:49:35.762744 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.762744 OUT Elapsed: 0s
16:49:35.765996 IN Elapsed: 3.2519ms
16:49:35.765996 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.765996 [91m                            $/progress: backgroundIndexProgress REPORT, 26/27, 96.0%[0m
16:49:35.765996 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.766540 OUT Elapsed: 544.5µs
16:49:35.808216 IN Elapsed: 42.2207ms
16:49:35.808216 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:35.808216 [91m                            $/progress: backgroundIndexProgress END [0m
16:49:35.808216 [92mIDE <-- LS NOTIF $/progress[0m
16:49:35.808216 OUT Elapsed: 0s
16:49:38.605692 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild",
    "used_libraries": [
      {
        "name": "Adafruit ADXL345",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Unified driver for the ADXL345 Accelerometer",
        "paragraph": "Unified driver for the ADXL345 Accelerometer",
        "website": "https://github.com/adafruit/Adafruit_ADXL345",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "version": "1.3.4",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_ADXL345_U.h"
        ]
      },
      {
        "name": "Adafruit BusIO",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "This is a library for abstracting away I2C and SPI interfacing",
        "paragraph": "This is a library for abstracting away I2C and SPI interfacing",
        "website": "https://github.com/adafruit/Adafruit_BusIO",
        "category": "Signal Input/Output",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "version": "1.14.5",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_address_detect",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_registers",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2corspi_register",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_modetest",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_register_bits",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_registers"
        ],
        "provides_includes": [
          "Adafruit_BusIO_Register.h",
          "Adafruit_I2CDevice.h",
          "Adafruit_I2CRegister.h",
          "Adafruit_SPIDevice.h"
        ]
      },
      {
        "name": "Wire",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "This library allows you to communicate with I2C and Two Wire Interface devices.",
        "paragraph": "It allows the communication with I2C devices like temperature sensors, realtime clocks and many others using SDA (Data Line) and SCL (Clock Line).",
        "website": "http://www.arduino.cc/en/Reference/Wire",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\SFRRanger_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\digital_potentiometer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\i2c_scanner",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_writer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_receiver",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_sender"
        ],
        "provides_includes": [
          "Wire.h"
        ]
      },
      {
        "name": "SPI",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus.",
        "paragraph": "SPI is a synchronous serial data protocol used by microcontrollers for communicating with one or more peripheral devices quickly over short distances. It uses three lines common to all devices (MISO, MOSI and SCK) and one specific for each device.",
        "website": "http://www.arduino.cc/en/Reference/SPI",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\BarometricPressureSensor",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\DigitalPotControl"
        ],
        "provides_includes": [
          "SPI.h"
        ]
      },
      {
        "name": "Adafruit Unified Sensor",
        "author": "Adafruit \u003cinfo@adafruit.com\u003e",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Required for all Adafruit Unified Sensor based libraries.",
        "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
        "website": "https://github.com/adafruit/Adafruit_Sensor",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "version": "1.1.14",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_Sensor.h"
        ]
      },
      {
        "name": "Arduino-MPU6050-dev",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "is_legacy": true,
        "location": 1,
        "provides_includes": [
          "MPU6050.h"
        ]
      },
      {
        "name": "SoftwareSerial",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables serial communication on any digital pin.",
        "paragraph": "The SoftwareSerial library has been developed to allow serial communication on any digital pin of the board, using software to replicate the functionality of the hardware UART. It is possible to have multiple software serial ports with speeds up to 115200 bps.",
        "website": "http://www.arduino.cc/en/Reference/SoftwareSerial",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\SoftwareSerialExample",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\TwoPortReceive"
        ],
        "provides_includes": [
          "SoftwareSerial.h"
        ]
      }
    ],
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701881377",
      "extra.time.utc=1701899377",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
16:49:38.607607 [95mSKETCH REBUILD: : Updated 'libraries.cache'. Copied: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild\libraries.cache to C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build\libraries.cache[0m
16:49:38.607607 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
16:49:38.607607 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
16:49:38.607607 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    if (time % 10000 == 0) {
        updateSerial();
        Serial.println("update bro");
    }
    if (time == 30000) {
        Serial.println("sdfaksd");
        etPhoneHome("01", "7038250271", "Hello World");
    }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
16:49:38.608179 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\2620489318 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build --format json --skip-libraries-discovery C:\Users\woodc\TrshProto[0m
16:49:40.204169 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build",
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701881379",
      "extra.time.utc=1701899379",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
16:49:40.212913 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
16:49:40.213450   > Current sketchmapper content:
16:49:40.213450   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:40.213450   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:40.213450   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:40.213450   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:40.213450   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:40.213450   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:40.213450   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:40.213450   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:40.213450   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:40.213450   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:40.213450  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:40.213450  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:40.213450  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:40.213450  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:40.213450  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:40.213450  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:40.213450  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:40.213450  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:40.213450  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:40.213450  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:40.213450  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:40.213450  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:40.213450  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:40.213450  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:40.213450  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:40.213450  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:40.213450  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:40.213450  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:40.213450  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:40.213450  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:40.213450  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
16:49:40.213450  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
16:49:40.213450  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
16:49:40.213450  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
16:49:40.213450  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
16:49:40.213450  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
16:49:40.213450  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
16:49:40.213450  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:40.213450  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:40.213450  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:40.213450  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:40.213450  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:40.213450  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:40.213450  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:40.213450  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:40.213450  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:40.213450  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:40.213450  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:40.213450  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:40.213450  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:40.213450  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:40.213450  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:40.213450  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:40.213450  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:40.213450  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:40.213450  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:40.213450  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:40.213450  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:40.213450  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:40.213450  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:40.213450  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:40.213450  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:40.213450  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:40.213450  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:40.213450  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:40.213450  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:40.213450  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:40.213450  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:40.213450  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:40.213450  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:40.213450  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:40.213450  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:40.213450  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:40.213450  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:40.213450  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:40.213450  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:40.213450  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:40.213450  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:40.213450  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:40.213450  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:40.213450  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:40.213450  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:40.213450  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:40.213450  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:40.213450  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:40.213450  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:40.213450  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:40.213450  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:40.213450  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:40.213450  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:40.213450  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:40.213450  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:40.213450  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:40.213450  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:40.213450  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:40.213450  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:40.213450  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:40.213450  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:40.213450  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:40.213450  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:40.213450 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:40.213450 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:40.213450 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:40.213450 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:40.213450 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:40.213450 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:40.213450 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:40.213450 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:40.213450 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:40.213450 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:40.213450 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:40.213450 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:40.213450 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:40.213450 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:40.213450 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:40.213450 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:40.213450 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:40.213450 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:40.213450 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:40.213450 119:     if (time % 10000 == 0) {                                 | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:40.213450 120:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:40.213450 121:         Serial.println("update bro");                        | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:40.213450 122:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:40.213450 123:     if (time == 30000) {                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:40.213450 124:         Serial.println("sdfaksd");                           | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:40.213450 125:         etPhoneHome("01", "7038250271", "Hello World");      | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:40.213450 126:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:40.213450 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:40.213450 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:40.213450 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:40.213450 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:40.213450 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:40.213450 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:40.213450 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:40.213450 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:40.213450 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:40.213450 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:40.213450 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:40.213450 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:40.213450 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:40.213450 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:40.213450 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:40.213450 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:40.213450 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:40.213450 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:40.213450 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:40.213450 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:40.213450 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:40.213450 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:40.213450 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:40.213450 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:40.213450 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:40.213450 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:40.213450 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:40.213450 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:40.213450 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:40.213450 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:40.213450 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:40.213450 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:40.213450 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:40.213450 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:40.213450 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:40.213450 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:40.213450 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:40.213450 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:40.213450 [95mSKETCH REBUILD: : Sending 'didSave' notification to Clangd[0m
16:49:40.213450 [91mIDE     LS --> Clangd NOTIF textDocument/didSave[0m
16:49:40.213450 OUT Elapsed: 0s
16:49:40.213450 [95mSKETCH REBUILD: : Sending full-text 'didChange' notification to Clangd[0m
16:49:40.213450 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:40.213450 OUT Elapsed: 0s
16:49:40.213450 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
16:49:40.213450 [92mIDE <-- LS NOTIF $/progress[0m
16:49:40.213450 OUT Elapsed: 0s
16:49:40.273037 IN Elapsed: 4.4648211s
16:49:40.273037 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 1[0m
16:49:40.273037 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 1[0m
16:49:40.273037 OUT Elapsed: 0s
16:49:40.273037 [92mIDE <-- LS REQU window/workDoneProgress/create 3[0m
16:49:40.273037 IN Elapsed: 0s
16:49:40.273037 OUT Elapsed: 0s
16:49:40.273548 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:40.273548 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
16:49:40.273548 IN Elapsed: 0s
16:49:40.273548 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:40.273548 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
16:49:40.274307 IN Elapsed: 4.7351408s
16:49:40.274307 [32mIDE --> LS RESP window/workDoneProgress/create 3[0m
16:49:40.274307 [92mIDE <-- LS NOTIF $/progress[0m
16:49:40.274307 OUT Elapsed: 0s
16:49:40.274307 [92mIDE <-- LS NOTIF $/progress[0m
16:49:40.274307 OUT Elapsed: 0s
16:49:40.307917 IN Elapsed: 34.3682ms
16:49:40.307917 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:40.307917 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
16:49:40.307917 IN Elapsed: 0s
16:49:40.307917 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:40.307917 [91m                            $/progress: backgroundIndexProgress END [0m
16:49:40.312033 [92mIDE <-- LS NOTIF $/progress[0m
16:49:40.312033 OUT Elapsed: 0s
16:49:41.679417 IN Elapsed: 1.4051093s
16:49:41.687167 [92mIDE --> LS NOTIF textDocument/didChange[0m
16:49:41.687254 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
16:49:41.687254 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@7)[0m
16:49:41.687254 [92m                 textDocument/didChange:   > 106:4-113:3 (len=212) -> "// if (time % 10000 == 0) {\n    //     updateSerial();\n    //     Serial.println(\"update bro\");\n    // }\n    // if (time == 30000) {\n    //     Serial.println(\"sdfaksd\");\n    //     etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    //"[0m
16:49:41.687766 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
16:49:41.688567 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:41.690244 Ino Range: 106:4-113:3 -> Cpp Range:119:4-126:3
16:49:41.690244   > Current sketchmapper content:
16:49:41.690244   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:41.690244   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:41.690244   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:41.690244   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:41.690244   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:41.690244   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:41.690244   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:41.690244   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:41.690244   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:41.690244   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:41.690244  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:41.690244  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:41.690244  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:41.690244  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:41.690244  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:41.690244  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:41.690244  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:41.690244  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:41.690244  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:41.690244  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:41.690244  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:41.690244  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:41.690244  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:41.690244  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:41.690244  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:41.690244  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:41.690244  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:41.690244  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:41.690244  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:41.690244  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:41.690244  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
16:49:41.690244  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
16:49:41.690244  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
16:49:41.690244  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
16:49:41.690244  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
16:49:41.690244  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
16:49:41.690244  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
16:49:41.690244  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:41.690244  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:41.690244  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:41.690244  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:41.690244  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:41.690244  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:41.690244  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:41.690244  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:41.690244  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:41.690244  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:41.690244  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:41.690244  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:41.690244  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:41.690244  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:41.690244  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:41.690244  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:41.690244  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:41.690244  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:41.690244  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:41.690244  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:41.690244  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:41.690244  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:41.690244  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:41.690244  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:41.690244  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:41.690244  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:41.690244  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:41.690244  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:41.690244  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:41.690244  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:41.690244  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:41.690244  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:41.690244  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:41.690244  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:41.690244  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:41.690244  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:41.690244  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:41.690244  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:41.690244  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:41.690244  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:41.690244  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:41.690244  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:41.690244  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:41.690244  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:41.690244  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:41.690244  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:41.690244  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:41.690244  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:41.690244  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:41.690244  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:41.690244  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:41.690244  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:41.690244  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:41.690244  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:41.690244  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:41.690244  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:41.690244  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:41.690244  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:41.690244  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:41.690244  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:41.690244  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:41.690244  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:41.690244  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:41.690244 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:41.690244 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:41.690244 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:41.690244 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:41.690244 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:41.690244 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:41.690244 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:41.690244 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:41.690244 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:41.690244 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:41.690244 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:41.690244 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:41.690244 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:41.690244 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:41.690244 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:41.690244 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:41.690244 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:41.690244 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:41.690244 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:41.690244 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:41.690244 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:41.690244 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:41.690244 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:41.690244 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:41.690244 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:41.690244 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:41.690244 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:41.690244 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:41.690244 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:41.690244 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:41.690244 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:41.690244 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:41.690244 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:41.690244 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:41.690244 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:41.690244 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:41.690244 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:41.690244 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:41.690244 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:41.690244 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:41.690244 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:41.690244 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:41.690244 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:41.690244 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:41.690244 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:41.690244 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:41.690244 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:41.690244 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:41.690244 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:41.690244 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:41.690244 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:41.690244 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:41.690244 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:41.690244 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:41.690244 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:41.690244 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:41.690244 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:41.690244 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:41.690244 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:41.690244 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:41.690244 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:41.690244 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:41.690244 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:41.690244 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:41.690244 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:41.690244 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@6)[0m
16:49:41.690244 [92m                 textDocument/didChange:             > 119:4-126:3 -> "// if (time % 10000 == 0) {\n    //     updateSerial();\n    //     Serial.println(\"update bro\");\n    // }\n    // if (time == 30000) {\n    //     Serial.println(\"sdfaksd\");\n    //     etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    //"[0m
16:49:41.690244 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:41.690244 OUT Elapsed: 0s
16:49:41.690244 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
16:49:41.765849 IN Elapsed: 1.4579323s
16:49:41.765849 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
16:49:41.765849 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
16:49:41.765849 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
16:49:41.766358 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
16:49:41.766965 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
16:49:41.766965 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
16:49:41.766965 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
16:49:41.766965 OUT Elapsed: 0s
16:49:41.766965 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
16:49:42.048563 IN Elapsed: 357.7826ms
16:49:42.048563 [92mIDE --> LS REQU textDocument/formatting 3[0m
16:49:42.048563 [92m                textDocument/formatting 3: [93mwrite-locked[0m[0m
16:49:42.049227 [92m                textDocument/formatting 3: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:42.049227 [92m                textDocument/formatting 3:     using custom formatter config file C:\Users\woodc\TrshProto\.clang-format[0m
16:49:42.050038 [92m                textDocument/formatting 3:     writing formatter config in: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build\sketch\.clang-format[0m
16:49:42.050630 [91mIDE     LS --> Clangd REQU textDocument/formatting 3[0m
16:49:42.050630 OUT Elapsed: 0s
16:49:42.056105 IN Elapsed: 290.2562ms
16:49:42.058972 [31mIDE     LS <-- Clangd RESP textDocument/formatting 3[0m
16:49:42.058972 [92m                textDocument/formatting 3: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
16:49:42.059487 [92m                textDocument/formatting 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp:162:1-164:0 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:149:1-151:0 (.ino)[0m
16:49:42.060015 [92m                textDocument/formatting 3:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp:162:1-164:0 -> "\n"[0m
16:49:42.060015 [92m                textDocument/formatting 3: converted to:[0m
16:49:42.060015 [92m                textDocument/formatting 3:   file:///C:/Users/woodc/TrshProto/TrshProto.ino ino/textEdit (1 elements)[0m
16:49:42.060015 [92m                textDocument/formatting 3:     > file:///C:/Users/woodc/TrshProto/TrshProto.ino:149:1-151:0 -> "\n"[0m
16:49:42.060015 [92m                textDocument/formatting 3:     formatter config cleaned[0m
16:49:42.060015 [92m                textDocument/formatting 3: [93mwrite-unlocked[0m[0m
16:49:42.060015 [32mIDE <-- LS RESP textDocument/formatting 3[0m
16:49:42.061337 OUT Elapsed: 1.3217ms
16:49:42.061337 IN Elapsed: 0s
16:49:42.061337 [92mIDE --> LS NOTIF textDocument/didChange[0m
16:49:42.061337 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
16:49:42.061337 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@8)[0m
16:49:42.061337 [92m                 textDocument/didChange:   > 149:1-149:1 (len=0) -> "\n"[0m
16:49:42.061337 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}


-----------------------------[0m
16:49:42.061848 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:42.071823 Ino Range: 149:1-149:1 -> Cpp Range:162:1-162:1
16:49:42.071823   > Current sketchmapper content:
16:49:42.071823   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:42.071823   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:42.071823   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:42.071823   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:42.071823   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:42.071823   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:42.071823   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:42.071823   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:42.071823   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:42.071823   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:42.071823  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:42.071823  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:42.071823  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:42.071823  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:42.071823  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:42.071823  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:42.071823  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:42.071823  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:42.071823  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:42.071823  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:42.071823  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:42.071823  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:42.071823  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:42.071823  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:42.071823  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:42.071823  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:42.071823  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:42.071823  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:42.071823  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:42.071823  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:42.071823  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
16:49:42.071823  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
16:49:42.071823  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
16:49:42.071823  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
16:49:42.071823  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
16:49:42.071823  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
16:49:42.071823  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
16:49:42.071823  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:42.071823  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:42.071823  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:42.071823  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:42.071823  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:42.071823  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:42.071823  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:42.071823  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:42.071823  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:42.071823  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:42.071823  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:42.071823  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:42.071823  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:42.071823  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:42.071823  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:42.072852  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:42.072852  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:42.072852  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:42.072852  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:42.072852  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:42.072852  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:42.072852  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:42.072852  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:42.072852  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:42.072852  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:42.072852  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:42.072852  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:42.072852  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:42.072852  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:42.072852  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:42.072852  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:42.072852  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:42.072852  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:42.072852  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:42.072852  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:42.072852  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:42.072852  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:42.072852  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:42.072852  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:42.072852  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:42.072852  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:42.072852  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:42.072852  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:42.072852  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:42.072852  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:42.072852  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:42.072852  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:42.072852  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:42.072852  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:42.072852  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:42.072852  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:42.072852  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:42.072852  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:42.072852  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:42.072852  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:42.072852  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:42.072852  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:42.072852  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:42.072852  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:42.072852  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:42.072852  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:42.072852  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:42.072852  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:42.072852 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:42.072852 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:42.072852 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:42.072852 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:42.072852 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:42.079876 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:42.079876 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:42.079876 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:42.079876 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:42.079876 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:42.079876 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:42.079876 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:42.079876 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:42.079876 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:42.079876 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:42.079876 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:42.079876 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:42.079876 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:42.079876 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:42.079876 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:42.079876 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:42.079876 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:42.079876 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:42.079876 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:42.079876 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:42.079876 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:42.079876 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:42.079876 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:42.079876 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:42.079876 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:42.079876 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:42.079876 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:42.079876 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:42.079876 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:42.079876 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:42.079876 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:42.079876 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:42.079876 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:42.079876 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:42.079876 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:42.079876 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:42.079876 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:42.079876 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:42.079876 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:42.079876 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:42.079876 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:42.079876 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:42.079876 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:42.079876 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:42.079876 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:42.079876 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:42.079876 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:42.079876 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:42.079876 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:42.079876 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:42.079876 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:42.079876 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:42.079876 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:42.079876 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:42.079876 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:42.079876 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:42.079876 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:42.079876 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:42.079876 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:42.079876 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:42.079876 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
16:49:42.079876 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@7)[0m
16:49:42.079876 [92m                 textDocument/didChange:             > 162:1-162:1 -> "\n"[0m
16:49:42.079876 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:42.079876 OUT Elapsed: 0s
16:49:42.079876 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
16:49:42.079876 IN Elapsed: 0s
16:49:42.079876 [92mIDE --> LS NOTIF textDocument/didChange[0m
16:49:42.079876 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
16:49:42.079876 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@9)[0m
16:49:42.079876 [92m                 textDocument/didChange:   > 150:0-151:0 (len=1) -> ""[0m
16:49:42.079876 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
16:49:42.079876 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:42.079876 Ino Range: 150:0-151:0 -> Cpp Range:163:0-164:0
16:49:42.079876   > Current sketchmapper content:
16:49:42.079876   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:42.079876   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:42.079876   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:42.079876   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:42.079876   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:42.079876   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:42.079876   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:42.079876   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:42.079876   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:42.079876   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:42.079876  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:42.079876  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:42.079876  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:42.079876  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:42.079876  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:42.079876  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:42.079876  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:42.079876  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:42.079876  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:42.079876  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:42.079876  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:42.079876  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:42.079876  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:42.079876  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:42.079876  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:42.079876  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:42.079876  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:42.079876  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:42.079876  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:42.079876  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:42.079876  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
16:49:42.079876  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
16:49:42.079876  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
16:49:42.079876  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
16:49:42.079876  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
16:49:42.079876  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
16:49:42.079876  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
16:49:42.079876  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:42.079876  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:42.079876  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:42.079876  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:42.079876  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:42.079876  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:42.079876  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:42.079876  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:42.079876  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:42.079876  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:42.079876  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:42.079876  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:42.079876  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:42.079876  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:42.079876  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:42.079876  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:42.079876  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:42.079876  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:42.079876  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:42.079876  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:42.079876  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:42.079876  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:42.079876  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:42.079876  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:42.079876  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:42.079876  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:42.079876  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:42.079876  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:42.079876  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:42.079876  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:42.079876  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:42.079876  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:42.079876  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:42.079876  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:42.079876  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:42.079876  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:42.079876  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:42.079876  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:42.079876  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:42.079876  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:42.079876  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:42.079876  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:42.079876  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:42.079876  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:42.079876  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:42.079876  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:42.079876  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:42.079876  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:42.079876  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:42.079876  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:42.079876  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:42.079876  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:42.079876  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:42.079876  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:42.079876  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:42.079876  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:42.079876  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:42.079876  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:42.079876  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:42.079876  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:42.079876  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:42.079876  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:42.079876  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:42.079876 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:42.079876 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:42.079876 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:42.079876 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:42.079876 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:42.079876 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:42.079876 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:42.079876 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:42.079876 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:42.079876 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:42.079876 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:42.079876 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:42.079876 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:42.079876 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:42.079876 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:42.079876 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:42.079876 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:42.079876 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:42.079876 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:42.079876 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:42.079876 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:42.079876 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:42.079876 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:42.079876 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:42.079876 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:42.079876 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:42.079876 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:42.079876 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:42.079876 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:42.079876 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:42.079876 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:42.079876 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:42.079876 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:42.079876 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:42.079876 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:42.079876 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:42.079876 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:42.079876 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:42.079876 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:42.079876 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:42.079876 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:42.079876 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:42.079876 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:42.079876 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:42.079876 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:42.079876 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:42.079876 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:42.079876 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:42.079876 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:42.079876 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:42.079876 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:42.079876 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:42.079876 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:42.079876 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:42.079876 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:42.079876 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:42.079876 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:42.079876 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:42.079876 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:42.079876 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:42.079876 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:42.079876 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:42.079876 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:42.079876 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:42.079876 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:42.079876 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@8)[0m
16:49:42.079876 [92m                 textDocument/didChange:             > 163:0-164:0 -> ""[0m
16:49:42.079876 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:42.079876 OUT Elapsed: 0s
16:49:42.079876 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
16:49:42.079876 IN Elapsed: 0s
16:49:42.079876 [92mIDE --> LS NOTIF textDocument/didSave[0m
16:49:42.079876 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
16:49:42.079876 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
16:49:42.079876 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
16:49:43.092038 [95mSKETCH REBUILD: : Sketch rebuild started[0m
16:49:43.092038 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
16:49:43.092038 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
16:49:43.092038 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
16:49:43.092038 [92mIDE <-- LS REQU window/workDoneProgress/create 4[0m
16:49:43.092038 OUT Elapsed: 0s
16:49:43.092553 IN Elapsed: 1.0126768s
16:49:43.093668 [32mIDE --> LS RESP window/workDoneProgress/create 4[0m
16:49:43.093668 [92mIDE <-- LS NOTIF $/progress[0m
16:49:43.093668 OUT Elapsed: 0s
16:49:43.093668 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\2603014160 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild --format json C:\Users\woodc\TrshProto[0m
16:49:46.136942 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild",
    "used_libraries": [
      {
        "name": "Adafruit ADXL345",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Unified driver for the ADXL345 Accelerometer",
        "paragraph": "Unified driver for the ADXL345 Accelerometer",
        "website": "https://github.com/adafruit/Adafruit_ADXL345",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "version": "1.3.4",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_ADXL345_U.h"
        ]
      },
      {
        "name": "Adafruit BusIO",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "This is a library for abstracting away I2C and SPI interfacing",
        "paragraph": "This is a library for abstracting away I2C and SPI interfacing",
        "website": "https://github.com/adafruit/Adafruit_BusIO",
        "category": "Signal Input/Output",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "version": "1.14.5",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_address_detect",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_registers",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2corspi_register",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_modetest",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_register_bits",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_registers"
        ],
        "provides_includes": [
          "Adafruit_BusIO_Register.h",
          "Adafruit_I2CDevice.h",
          "Adafruit_I2CRegister.h",
          "Adafruit_SPIDevice.h"
        ]
      },
      {
        "name": "Wire",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "This library allows you to communicate with I2C and Two Wire Interface devices.",
        "paragraph": "It allows the communication with I2C devices like temperature sensors, realtime clocks and many others using SDA (Data Line) and SCL (Clock Line).",
        "website": "http://www.arduino.cc/en/Reference/Wire",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\SFRRanger_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\digital_potentiometer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\i2c_scanner",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_writer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_receiver",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_sender"
        ],
        "provides_includes": [
          "Wire.h"
        ]
      },
      {
        "name": "SPI",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus.",
        "paragraph": "SPI is a synchronous serial data protocol used by microcontrollers for communicating with one or more peripheral devices quickly over short distances. It uses three lines common to all devices (MISO, MOSI and SCK) and one specific for each device.",
        "website": "http://www.arduino.cc/en/Reference/SPI",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\BarometricPressureSensor",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\DigitalPotControl"
        ],
        "provides_includes": [
          "SPI.h"
        ]
      },
      {
        "name": "Adafruit Unified Sensor",
        "author": "Adafruit \u003cinfo@adafruit.com\u003e",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Required for all Adafruit Unified Sensor based libraries.",
        "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
        "website": "https://github.com/adafruit/Adafruit_Sensor",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "version": "1.1.14",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_Sensor.h"
        ]
      },
      {
        "name": "Arduino-MPU6050-dev",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "is_legacy": true,
        "location": 1,
        "provides_includes": [
          "MPU6050.h"
        ]
      },
      {
        "name": "SoftwareSerial",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables serial communication on any digital pin.",
        "paragraph": "The SoftwareSerial library has been developed to allow serial communication on any digital pin of the board, using software to replicate the functionality of the hardware UART. It is possible to have multiple software serial ports with speeds up to 115200 bps.",
        "website": "http://www.arduino.cc/en/Reference/SoftwareSerial",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\SoftwareSerialExample",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\TwoPortReceive"
        ],
        "provides_includes": [
          "SoftwareSerial.h"
        ]
      }
    ],
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701881384",
      "extra.time.utc=1701899384",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
16:49:46.138703 [95mSKETCH REBUILD: : Updated 'libraries.cache'. Copied: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild\libraries.cache to C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build\libraries.cache[0m
16:49:46.138703 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
16:49:46.138703 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
16:49:46.138703 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
16:49:46.139230 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\299912311 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build --format json --skip-libraries-discovery C:\Users\woodc\TrshProto[0m
16:49:47.835114 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build",
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701881387",
      "extra.time.utc=1701899387",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
16:49:47.842724 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
16:49:47.845018   > Current sketchmapper content:
16:49:47.845018   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:47.845018   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:47.845018   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:47.845018   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:47.845018   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:47.845018   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:47.845018   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:47.845018   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:47.845018   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:47.845018   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:47.845018  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:47.845018  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:47.845018  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:47.845018  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:47.845018  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:47.845018  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:47.845018  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:47.845018  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:47.845018  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:47.845018  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:47.845018  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:47.845018  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:47.845018  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:47.845018  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:47.845018  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:47.845018  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:47.845018  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:47.845018  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:47.845018  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:47.845018  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:47.845018  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
16:49:47.845018  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
16:49:47.845018  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
16:49:47.845368  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
16:49:47.845368  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
16:49:47.845368  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
16:49:47.845368  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
16:49:47.845368  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:47.845368  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:47.845368  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:47.845368  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:47.845368  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:47.845368  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:47.845368  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:47.845368  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:47.845368  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:47.845368  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:47.845368  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:47.845368  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:47.845368  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:47.845368  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:47.845368  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:47.845368  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:47.845368  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:47.845368  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:47.845368  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:47.845368  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:47.845368  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:47.845368  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:47.845368  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:47.845368  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:47.845368  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:47.845368  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:47.845368  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:47.845368  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:47.845368  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:47.845368  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:47.845368  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:47.845368  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:47.845368  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:47.845368  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:47.845368  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:47.845368  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:47.845368  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:47.845368  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:47.845368  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:47.845368  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:47.845368  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:47.845368  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:47.845368  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:47.845368  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:47.845368  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:47.845368  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:47.845368  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:47.845368  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:47.845368  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:47.845368  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:47.845368  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:47.845368  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:47.845368  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:47.845368  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:47.845368  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:47.845368  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:47.845368  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:47.845368  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:47.845368  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:47.845368  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:47.845368  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:47.845368  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:47.845368  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:47.845368 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:47.845368 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:47.845368 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:47.845368 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:47.845368 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:47.845368 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:47.845368 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:47.845368 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:47.845368 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:47.845368 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:47.845368 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:47.845368 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:47.845368 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:47.845368 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:47.845368 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:47.845368 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:47.845368 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:47.845368 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:47.845368 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:47.845368 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:47.845368 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:47.845368 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:47.845368 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:47.845368 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:47.845368 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:47.845368 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:47.845368 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:47.845368 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:47.845368 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:47.845368 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:47.845368 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:47.845368 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:47.845368 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:47.845368 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:47.845368 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:47.845368 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:47.845368 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:47.845368 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:47.845368 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:47.845368 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:47.845368 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:47.845368 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:47.845368 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:47.845368 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:47.845368 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:47.845368 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:47.845368 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:47.845368 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:47.845368 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:47.845368 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:47.845368 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:47.845368 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:47.845899 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:47.845899 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:47.845899 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:47.845899 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:47.845899 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:47.845899 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:47.845899 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:47.845899 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:47.845899 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:47.845899 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:47.845899 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:47.845899 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:47.845899 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:47.845899 [95mSKETCH REBUILD: : Sending 'didSave' notification to Clangd[0m
16:49:47.845899 [91mIDE     LS --> Clangd NOTIF textDocument/didSave[0m
16:49:47.845899 OUT Elapsed: 0s
16:49:47.845899 [95mSKETCH REBUILD: : Sending full-text 'didChange' notification to Clangd[0m
16:49:47.845899 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:47.845899 OUT Elapsed: 0s
16:49:47.845899 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
16:49:47.845899 [92mIDE <-- LS NOTIF $/progress[0m
16:49:47.845899 OUT Elapsed: 0s
16:49:47.905396 IN Elapsed: 5.8464236s
16:49:47.905658 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 2[0m
16:49:47.905658 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 2[0m
16:49:47.905658 OUT Elapsed: 0s
16:49:47.906170 [92mIDE <-- LS REQU window/workDoneProgress/create 5[0m
16:49:47.906170 OUT Elapsed: 0s
16:49:47.908550 IN Elapsed: 2.8918ms
16:49:47.908550 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:47.908550 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
16:49:47.908550 IN Elapsed: 0s
16:49:47.908550 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:47.908550 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
16:49:47.909059 IN Elapsed: 4.8153908s
16:49:47.909295 [32mIDE --> LS RESP window/workDoneProgress/create 5[0m
16:49:47.909295 [92mIDE <-- LS NOTIF $/progress[0m
16:49:47.909295 OUT Elapsed: 0s
16:49:47.909295 [92mIDE <-- LS NOTIF $/progress[0m
16:49:47.909295 OUT Elapsed: 0s
16:49:47.937364 IN Elapsed: 23.9167ms
16:49:47.937364 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:47.937364 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
16:49:47.937364 IN Elapsed: 0s
16:49:47.937364 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:47.937364 [91m                            $/progress: backgroundIndexProgress END [0m
16:49:47.937364 [92mIDE <-- LS NOTIF $/progress[0m
16:49:47.937364 OUT Elapsed: 0s
16:49:47.937364 [92mIDE <-- LS NOTIF $/progress[0m
16:49:47.937364 OUT Elapsed: 0s
16:49:49.684994 IN Elapsed: 1.7756986s
16:49:49.685283 [92mIDE --> LS REQU textDocument/formatting 4[0m
16:49:49.685283 [92m                textDocument/formatting 4: [93mwrite-locked[0m[0m
16:49:49.686020 [92m                textDocument/formatting 4: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:49.686020 [92m                textDocument/formatting 4:     using custom formatter config file C:\Users\woodc\TrshProto\.clang-format[0m
16:49:49.686751 [92m                textDocument/formatting 4:     writing formatter config in: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build\sketch\.clang-format[0m
16:49:49.687480 [91mIDE     LS --> Clangd REQU textDocument/formatting 4[0m
16:49:49.687480 OUT Elapsed: 0s
16:49:49.696485 IN Elapsed: 1.7591214s
16:49:49.696485 [31mIDE     LS <-- Clangd RESP textDocument/formatting 4[0m
16:49:49.696485 [92m                textDocument/formatting 4: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
16:49:49.697378 [92m                textDocument/formatting 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp:162:1-164:0 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:149:1-151:0 (.ino)[0m
16:49:49.697378 [92m                textDocument/formatting 4:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp:162:1-164:0 -> "\n"[0m
16:49:49.697378 [92m                textDocument/formatting 4: converted to:[0m
16:49:49.698033 [92m                textDocument/formatting 4:   file:///C:/Users/woodc/TrshProto/TrshProto.ino ino/textEdit (1 elements)[0m
16:49:49.698033 [92m                textDocument/formatting 4:     > file:///C:/Users/woodc/TrshProto/TrshProto.ino:149:1-151:0 -> "\n"[0m
16:49:49.698103 [92m                textDocument/formatting 4:     formatter config cleaned[0m
16:49:49.698103 [92m                textDocument/formatting 4: [93mwrite-unlocked[0m[0m
16:49:49.698103 [32mIDE <-- LS RESP textDocument/formatting 4[0m
16:49:49.698103 OUT Elapsed: 0s
16:49:49.699412 IN Elapsed: 782.3µs
16:49:49.699412 [92mIDE --> LS NOTIF textDocument/didChange[0m
16:49:49.699539 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
16:49:49.699539 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@11)[0m
16:49:49.699609 [92m                 textDocument/didChange:   > 149:1-149:1 (len=0) -> "\n"[0m
16:49:49.699892 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}


-----------------------------[0m
16:49:49.701225 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:49.703841 Ino Range: 149:1-149:1 -> Cpp Range:162:1-162:1
16:49:49.703841   > Current sketchmapper content:
16:49:49.703841   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:49.703841   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:49.703841   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:49.703841   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:49.703841   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:49.703841   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:49.703841   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:49.703841   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:49.703841   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:49.703841   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:49.703841  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:49.703841  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:49.703841  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:49.703841  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:49.703841  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:49.703841  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:49.703841  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:49.703841  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:49.703841  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:49.703841  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:49.703841  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:49.705641  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:49.705641  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:49.705641  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:49.705641  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:49.705641  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:49.705641  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:49.705641  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:49.705641  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:49.705641  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:49.705641  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
16:49:49.705641  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
16:49:49.705641  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
16:49:49.705641  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
16:49:49.705641  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
16:49:49.705641  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
16:49:49.705641  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
16:49:49.705641  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:49.705641  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:49.705641  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:49.705641  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:49.705641  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:49.705641  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:49.705641  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:49.705641  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:49.705641  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:49.705641  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:49.705641  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:49.705641  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:49.705641  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:49.705641  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:49.705641  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:49.705641  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:49.706213  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:49.706213  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:49.706213  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:49.706213  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:49.706213  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:49.706213  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:49.706266  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:49.706266  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:49.706266  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:49.706266  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:49.706266  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:49.706266  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:49.706266  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:49.706266  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:49.706266  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:49.706266  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:49.706266  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:49.706266  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:49.706266  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:49.706266  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:49.706266  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:49.706266  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:49.706266  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:49.706266  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:49.706266  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:49.706266  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:49.706266  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:49.706266  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:49.706266  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:49.706266  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:49.706266  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:49.706266  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:49.706266  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:49.706266  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:49.706266  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:49.706266  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:49.706266  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:49.706266  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:49.706266  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:49.706266  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:49.706266  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:49.706266  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:49.706266  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:49.706266  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:49.706266  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:49.706266  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:49.706266  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:49.706266 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:49.706266 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:49.706266 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:49.706266 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:49.706266 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:49.706266 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:49.706266 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:49.706266 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:49.706266 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:49.706266 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:49.706266 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:49.706266 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:49.706266 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:49.706266 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:49.706266 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:49.706266 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:49.706266 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:49.706266 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:49.706838 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:49.706838 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:49.706838 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:49.706838 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:49.706838 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:49.706838 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:49.706838 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:49.706838 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:49.706838 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:49.706838 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:49.706838 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:49.706838 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:49.706838 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:49.706838 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:49.706838 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:49.706838 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:49.706838 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:49.706838 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:49.706838 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:49.706838 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:49.706838 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:49.706838 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:49.706838 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:49.706838 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:49.706838 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:49.706838 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:49.706838 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:49.706838 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:49.706838 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:49.706838 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:49.707126 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:49.707126 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:49.707126 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:49.707126 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:49.707126 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:49.707126 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:49.707195 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:49.707195 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:49.707195 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:49.707195 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:49.707195 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:49.707195 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:49.707195 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:49.707263 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:49.707263 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:49.707263 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:49.707263 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:49.707263 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
16:49:49.707326 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@10)[0m
16:49:49.707326 [92m                 textDocument/didChange:             > 162:1-162:1 -> "\n"[0m
16:49:49.707579 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:49.707579 OUT Elapsed: 0s
16:49:49.707579 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
16:49:49.718391 IN Elapsed: 10.812ms
16:49:49.718391 [92mIDE --> LS NOTIF textDocument/didChange[0m
16:49:49.718391 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
16:49:49.718391 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@12)[0m
16:49:49.718391 [92m                 textDocument/didChange:   > 150:0-151:0 (len=1) -> ""[0m
16:49:49.718909 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
16:49:49.718909 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
16:49:49.719926 Ino Range: 150:0-151:0 -> Cpp Range:163:0-164:0
16:49:49.719926   > Current sketchmapper content:
16:49:49.719926   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:49.719926   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:49.719926   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:49.719926   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:49.719926   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:49.719926   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:49.719926   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:49.719926   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:49.719926   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:49.719926   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:49.719926  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:49.719926  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:49.719926  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:49.719926  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:49.719926  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:49.719926  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:49.719926  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:49.719926  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:49.719926  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:49.719926  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:49.719926  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:49.719926  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:49.719926  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:49.719926  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:49.719926  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:49.719926  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:49.719926  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:49.719926  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:49.719926  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:49.719926  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:49.719926  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
16:49:49.719926  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
16:49:49.719926  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
16:49:49.719926  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
16:49:49.719926  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
16:49:49.719926  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
16:49:49.719926  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
16:49:49.719926  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:49.719926  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:49.719926  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:49.719926  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:49.719926  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:49.719926  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:49.719926  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:49.719926  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:49.719926  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:49.719926  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:49.719926  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:49.719926  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:49.719926  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:49.719926  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:49.719926  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:49.719926  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:49.719926  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:49.719926  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:49.719926  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:49.719926  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:49.719926  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:49.719926  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:49.719926  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:49.719926  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:49.719926  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:49.719926  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:49.719926  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:49.719926  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:49.719926  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:49.719926  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:49.719926  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:49.719926  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:49.719926  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:49.719926  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:49.719926  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:49.719926  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:49.719926  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:49.719926  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:49.719926  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:49.719926  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:49.719926  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:49.719926  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:49.719926  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:49.719926  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:49.719926  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:49.719926  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:49.719926  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:49.719926  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:49.719926  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:49.719926  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:49.719926  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:49.719926  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:49.719926  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:49.719926  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:49.719926  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:49.719926  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:49.719926  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:49.719926  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:49.719926  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:49.719926  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:49.719926  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:49.719926  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:49.719926  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:49.719926 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:49.719926 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:49.719926 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:49.719926 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:49.719926 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:49.719926 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:49.719926 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:49.719926 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:49.719926 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:49.719926 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:49.719926 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:49.719926 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:49.719926 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:49.719926 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:49.719926 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:49.719926 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:49.719926 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:49.719926 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:49.719926 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:49.719926 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:49.719926 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:49.719926 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:49.719926 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:49.719926 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:49.719926 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:49.719926 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:49.719926 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:49.719926 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:49.719926 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:49.719926 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:49.719926 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:49.719926 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:49.719926 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:49.719926 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:49.719926 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:49.719926 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:49.719926 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:49.719926 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:49.719926 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:49.719926 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:49.719926 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:49.719926 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:49.719926 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:49.719926 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:49.719926 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:49.719926 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:49.719926 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:49.719926 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:49.719926 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:49.719926 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:49.719926 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:49.719926 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:49.719926 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:49.719926 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:49.719926 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:49.719926 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:49.719926 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:49.719926 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:49.719926 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:49.719926 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:49.719926 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:49.719926 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:49.719926 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:49.719926 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:49.719926 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:49.719926 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@11)[0m
16:49:49.719926 [92m                 textDocument/didChange:             > 163:0-164:0 -> ""[0m
16:49:49.719926 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:49.719926 OUT Elapsed: 0s
16:49:49.719926 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
16:49:49.719926 IN Elapsed: 0s
16:49:49.719926 [92mIDE --> LS NOTIF textDocument/didSave[0m
16:49:49.719926 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
16:49:49.719926 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
16:49:49.719926 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
16:49:50.724860 [95mSKETCH REBUILD: : Sketch rebuild started[0m
16:49:50.724860 [92mIDE <-- LS REQU window/workDoneProgress/create 6[0m
16:49:50.725028 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
16:49:50.725028 OUT Elapsed: 0s
16:49:50.725028 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
16:49:50.725028 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
16:49:50.726859 IN Elapsed: 1.0069329s
16:49:50.726972 [32mIDE --> LS RESP window/workDoneProgress/create 6[0m
16:49:50.726972 [92mIDE <-- LS NOTIF $/progress[0m
16:49:50.726972 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\1019396124 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild --format json C:\Users\woodc\TrshProto[0m
16:49:50.727213 OUT Elapsed: 240.9µs
16:49:53.721404 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild",
    "used_libraries": [
      {
        "name": "Adafruit ADXL345",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Unified driver for the ADXL345 Accelerometer",
        "paragraph": "Unified driver for the ADXL345 Accelerometer",
        "website": "https://github.com/adafruit/Adafruit_ADXL345",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "version": "1.3.4",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_ADXL345_U.h"
        ]
      },
      {
        "name": "Adafruit BusIO",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "This is a library for abstracting away I2C and SPI interfacing",
        "paragraph": "This is a library for abstracting away I2C and SPI interfacing",
        "website": "https://github.com/adafruit/Adafruit_BusIO",
        "category": "Signal Input/Output",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "version": "1.14.5",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_address_detect",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_registers",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2corspi_register",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_modetest",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_register_bits",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_registers"
        ],
        "provides_includes": [
          "Adafruit_BusIO_Register.h",
          "Adafruit_I2CDevice.h",
          "Adafruit_I2CRegister.h",
          "Adafruit_SPIDevice.h"
        ]
      },
      {
        "name": "Wire",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "This library allows you to communicate with I2C and Two Wire Interface devices.",
        "paragraph": "It allows the communication with I2C devices like temperature sensors, realtime clocks and many others using SDA (Data Line) and SCL (Clock Line).",
        "website": "http://www.arduino.cc/en/Reference/Wire",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\SFRRanger_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\digital_potentiometer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\i2c_scanner",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_writer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_receiver",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_sender"
        ],
        "provides_includes": [
          "Wire.h"
        ]
      },
      {
        "name": "SPI",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus.",
        "paragraph": "SPI is a synchronous serial data protocol used by microcontrollers for communicating with one or more peripheral devices quickly over short distances. It uses three lines common to all devices (MISO, MOSI and SCK) and one specific for each device.",
        "website": "http://www.arduino.cc/en/Reference/SPI",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\BarometricPressureSensor",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\DigitalPotControl"
        ],
        "provides_includes": [
          "SPI.h"
        ]
      },
      {
        "name": "Adafruit Unified Sensor",
        "author": "Adafruit \u003cinfo@adafruit.com\u003e",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Required for all Adafruit Unified Sensor based libraries.",
        "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
        "website": "https://github.com/adafruit/Adafruit_Sensor",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "version": "1.1.14",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_Sensor.h"
        ]
      },
      {
        "name": "Arduino-MPU6050-dev",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "is_legacy": true,
        "location": 1,
        "provides_includes": [
          "MPU6050.h"
        ]
      },
      {
        "name": "SoftwareSerial",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables serial communication on any digital pin.",
        "paragraph": "The SoftwareSerial library has been developed to allow serial communication on any digital pin of the board, using software to replicate the functionality of the hardware UART. It is possible to have multiple software serial ports with speeds up to 115200 bps.",
        "website": "http://www.arduino.cc/en/Reference/SoftwareSerial",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\SoftwareSerialExample",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\TwoPortReceive"
        ],
        "provides_includes": [
          "SoftwareSerial.h"
        ]
      }
    ],
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701881392",
      "extra.time.utc=1701899392",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
16:49:53.723471 [95mSKETCH REBUILD: : Updated 'libraries.cache'. Copied: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild\libraries.cache to C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build\libraries.cache[0m
16:49:53.723471 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
16:49:53.723471 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
16:49:53.723471 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
16:49:53.723986 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\2066873840 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build --format json --skip-libraries-discovery C:\Users\woodc\TrshProto[0m
16:49:55.313063 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build",
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701881395",
      "extra.time.utc=1701899395",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
16:49:55.324650 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
16:49:55.326778   > Current sketchmapper content:
16:49:55.326778   0: #include <Arduino.h>                                         | /not-ino:0                                         
16:49:55.326778   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
16:49:55.326778   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
16:49:55.326778   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
16:49:55.326778   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
16:49:55.326778   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
16:49:55.326778   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
16:49:55.326778   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
16:49:55.326778   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
16:49:55.326778   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
16:49:55.326778  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
16:49:55.326778  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
16:49:55.326778  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
16:49:55.326778  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
16:49:55.326778  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
16:49:55.326778  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
16:49:55.326778  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
16:49:55.326778  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
16:49:55.326778  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
16:49:55.326778  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:55.326778  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
16:49:55.326778  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:55.326778  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
16:49:55.326778  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:55.326778  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
16:49:55.326778  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:55.326778  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
16:49:55.326778  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
16:49:55.326778  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
16:49:55.326778  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
16:49:55.326778  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
16:49:55.326778  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
16:49:55.326778  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
16:49:55.326778  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
16:49:55.326778  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
16:49:55.326778  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
16:49:55.326778  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
16:49:55.326778  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
16:49:55.326778  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
16:49:55.326778  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
16:49:55.326778  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
16:49:55.326778  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
16:49:55.326778  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
16:49:55.326778  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
16:49:55.326778  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
16:49:55.326778  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
16:49:55.326778  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
16:49:55.326778  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
16:49:55.326778  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
16:49:55.326778  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
16:49:55.326778  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
16:49:55.326778  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
16:49:55.326778  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
16:49:55.326778  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
16:49:55.326778  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
16:49:55.326778  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
16:49:55.326778  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
16:49:55.326778  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
16:49:55.326778  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
16:49:55.326778  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
16:49:55.326778  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
16:49:55.326778  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
16:49:55.326778  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
16:49:55.326778  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
16:49:55.326778  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
16:49:55.326778  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
16:49:55.326778  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
16:49:55.326778  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
16:49:55.326778  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
16:49:55.326778  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
16:49:55.326778  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
16:49:55.326778  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
16:49:55.326778  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
16:49:55.326778  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
16:49:55.326778  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
16:49:55.326778  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
16:49:55.326778  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
16:49:55.326778  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
16:49:55.326778  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
16:49:55.326778  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
16:49:55.326778  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
16:49:55.326778  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
16:49:55.326778  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
16:49:55.326778  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
16:49:55.326778  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
16:49:55.326778  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
16:49:55.326778  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
16:49:55.326778  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
16:49:55.326778  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
16:49:55.326778  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
16:49:55.326778  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
16:49:55.326778  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
16:49:55.326778  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
16:49:55.326778  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
16:49:55.326778  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
16:49:55.326778  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
16:49:55.326778  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
16:49:55.326778  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
16:49:55.326778  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
16:49:55.326778  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
16:49:55.326778 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
16:49:55.326778 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
16:49:55.326778 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
16:49:55.326778 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
16:49:55.326778 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
16:49:55.326778 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
16:49:55.326778 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
16:49:55.326778 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
16:49:55.326778 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
16:49:55.326778 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
16:49:55.326778 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
16:49:55.326778 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
16:49:55.326778 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
16:49:55.326778 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
16:49:55.326778 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
16:49:55.326778 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
16:49:55.326778 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
16:49:55.326778 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
16:49:55.326778 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
16:49:55.326778 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
16:49:55.326778 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
16:49:55.326778 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
16:49:55.326778 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
16:49:55.326778 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
16:49:55.326778 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
16:49:55.326778 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
16:49:55.326778 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
16:49:55.326778 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
16:49:55.326778 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
16:49:55.326778 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
16:49:55.326778 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
16:49:55.326778 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
16:49:55.326778 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
16:49:55.326778 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
16:49:55.326778 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
16:49:55.326778 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
16:49:55.326778 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
16:49:55.326778 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
16:49:55.326778 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
16:49:55.326778 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
16:49:55.326778 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
16:49:55.326778 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
16:49:55.326778 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
16:49:55.326778 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
16:49:55.326778 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
16:49:55.327717 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
16:49:55.327717 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
16:49:55.327717 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
16:49:55.327717 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
16:49:55.327717 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
16:49:55.327717 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
16:49:55.327717 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
16:49:55.327717 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
16:49:55.327717 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
16:49:55.327717 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
16:49:55.327717 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
16:49:55.327717 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
16:49:55.327717 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
16:49:55.327717 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
16:49:55.327717 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
16:49:55.327717 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
16:49:55.327717 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
16:49:55.327717 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
16:49:55.327717 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
16:49:55.327717 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
16:49:55.327717 [95mSKETCH REBUILD: : Sending 'didSave' notification to Clangd[0m
16:49:55.327717 [91mIDE     LS --> Clangd NOTIF textDocument/didSave[0m
16:49:55.327717 OUT Elapsed: 0s
16:49:55.328224 [95mSKETCH REBUILD: : Sending full-text 'didChange' notification to Clangd[0m
16:49:55.329231 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
16:49:55.329761 OUT Elapsed: 530.1µs
16:49:55.329761 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
16:49:55.329761 [92mIDE <-- LS NOTIF $/progress[0m
16:49:55.329761 OUT Elapsed: 0s
16:49:55.389686 IN Elapsed: 5.6932006s
16:49:55.389686 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 3[0m
16:49:55.389686 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 3[0m
16:49:55.389686 OUT Elapsed: 0s
16:49:55.389686 IN Elapsed: 0s
16:49:55.389686 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:55.389686 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
16:49:55.389686 IN Elapsed: 0s
16:49:55.389686 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:55.389686 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
16:49:55.394507 [92mIDE <-- LS REQU window/workDoneProgress/create 7[0m
16:49:55.394507 OUT Elapsed: 0s
16:49:55.400103 IN Elapsed: 4.6731311s
16:49:55.400103 [32mIDE --> LS RESP window/workDoneProgress/create 7[0m
16:49:55.400103 [92mIDE <-- LS NOTIF $/progress[0m
16:49:55.401114 OUT Elapsed: 505.4µs
16:49:55.401114 [92mIDE <-- LS NOTIF $/progress[0m
16:49:55.401114 OUT Elapsed: 0s
16:49:55.418225 IN Elapsed: 28.5392ms
16:49:55.422926 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:55.422926 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
16:49:55.422926 IN Elapsed: 0s
16:49:55.422926 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
16:49:55.422926 [91m                            $/progress: backgroundIndexProgress END [0m
16:49:55.422926 [92mIDE <-- LS NOTIF $/progress[0m
16:49:55.422926 OUT Elapsed: 0s
17:05:02.834334 IN Elapsed: 15m7.4342305s
17:05:02.834334 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:05:02.834334 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:05:02.834334 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@14)[0m
17:05:02.834334 [92m                 textDocument/didChange:   > 66:5-67:0 (len=1) -> "\n    \n"[0m
17:05:02.834334 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:05:02.839848 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
17:05:02.839848 Ino Range: 66:5-67:0 -> Cpp Range:79:5-80:0
17:05:02.839848   > Current sketchmapper content:
17:05:02.839848   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:05:02.839848   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:05:02.839848   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:05:02.839848   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:05:02.839848   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:05:02.839848   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:05:02.839848   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:05:02.839848   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:05:02.839848   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:05:02.839848   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:05:02.839848  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:05:02.839848  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:05:02.839848  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:05:02.839848  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:05:02.839848  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:05:02.839848  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:05:02.839848  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:05:02.839848  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:05:02.839848  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:05:02.839848  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:02.839848  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:05:02.839848  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:02.839848  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:05:02.839848  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:02.839848  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:05:02.839848  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:02.839848  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:05:02.839848  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:05:02.839848  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:02.839848  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:02.839848  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:05:02.839848  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:05:02.839848  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:05:02.839848  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:05:02.839848  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:05:02.839848  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:05:02.839848  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:05:02.839848  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:05:02.839848  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:05:02.839848  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:05:02.839848  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:05:02.839848  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:05:02.839848  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:05:02.839848  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:05:02.839848  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:05:02.839848  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:05:02.839848  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:05:02.839848  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:05:02.839848  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:05:02.839848  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:05:02.839848  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:05:02.839848  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:05:02.839848  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:05:02.839848  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:05:02.839848  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:05:02.839848  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:05:02.839848  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:05:02.839848  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:05:02.839848  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:05:02.839848  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:05:02.839848  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:05:02.839848  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:05:02.839848  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:05:02.839848  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:05:02.839848  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:05:02.839848  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:05:02.839848  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:05:02.839848  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:05:02.839848  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:05:02.839848  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:05:02.839848  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:05:02.839848  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:05:02.839848  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:05:02.839848  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:05:02.839848  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:05:02.839848  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:05:02.839848  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:05:02.839848  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:05:02.839848  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:05:02.839848  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:05:02.839848  80:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:05:02.839848  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:05:02.839848  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:05:02.839848  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:05:02.839848  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:05:02.839848  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:05:02.839848  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:05:02.839848  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:05:02.839848  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:05:02.839848  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:05:02.839848  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:05:02.839848  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:05:02.839848  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:05:02.839848  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:05:02.839848  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:05:02.839848  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:05:02.839848  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:05:02.839848  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:05:02.839848  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:05:02.839848  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:05:02.839848 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:05:02.839848 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:05:02.839848 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:05:02.839848 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:05:02.839848 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:05:02.839848 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:05:02.839848 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:05:02.839848 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:05:02.839848 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:05:02.839848 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:05:02.839848 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:05:02.839848 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:05:02.839848 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:05:02.839848 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:05:02.839848 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:05:02.839848 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:05:02.839848 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:05:02.839848 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:02.839848 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:02.839848 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:05:02.839848 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:05:02.839848 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:05:02.839848 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:05:02.839848 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:05:02.839848 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:05:02.839848 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:05:02.839848 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:05:02.839848 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:05:02.839848 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:05:02.839848 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:05:02.839848 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:05:02.839848 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:05:02.839848 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:05:02.839848 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:05:02.839848 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:05:02.839848 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:05:02.839848 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:05:02.839848 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:05:02.839848 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:05:02.839848 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:05:02.839848 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:05:02.839848 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:05:02.839848 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:05:02.839848 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:05:02.839848 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:05:02.839848 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:05:02.839848 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:05:02.839848 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:05:02.839848 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:05:02.839848 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:05:02.839848 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:05:02.839848 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:05:02.839848 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:05:02.839848 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:05:02.839848 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:05:02.839848 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:05:02.839848 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:05:02.839848 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:05:02.839848 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:05:02.839848 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:05:02.839848 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:05:02.839848 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:05:02.839848 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:05:02.839848 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:05:02.839848 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:05:02.839848 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:05:02.839848 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@13)[0m
17:05:02.839848 [92m                 textDocument/didChange:             > 79:5-80:0 -> "\n    \n"[0m
17:05:02.839848 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:05:02.839848 OUT Elapsed: 0s
17:05:02.839848 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:05:02.923396 IN Elapsed: 15m7.5004696s
17:05:02.923396 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:05:02.923396 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:05:02.923396 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
17:05:02.924472 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
17:05:02.924472 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:05:02.924472 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
17:05:02.924472 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:05:02.924472 OUT Elapsed: 0s
17:05:02.924472 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:05:03.857280 [95mSKETCH REBUILD: : Sketch rebuild started[0m
17:05:03.857280 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
17:05:03.857280 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
17:05:03.857280 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
17:05:03.858724 [92mIDE <-- LS REQU window/workDoneProgress/create 8[0m
17:05:03.858724 OUT Elapsed: 0s
17:05:03.858724 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\2970949557 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild --format json C:\Users\woodc\TrshProto[0m
17:05:03.859810 IN Elapsed: 1.0199622s
17:05:03.860379 [32mIDE --> LS RESP window/workDoneProgress/create 8[0m
17:05:03.860379 [92mIDE <-- LS NOTIF $/progress[0m
17:05:03.860890 OUT Elapsed: 510.8µs
17:05:03.999436 IN Elapsed: 139.057ms
17:05:03.999436 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:05:03.999941 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:05:03.999941 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@15)[0m
17:05:03.999941 [92m                 textDocument/didChange:   > 67:3-67:4 (len=1) -> ""[0m
17:05:03.999941 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
   
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:05:03.999941 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
17:05:04.002436 Ino Range: 67:3-67:4 -> Cpp Range:80:3-80:4
17:05:04.002436   > Current sketchmapper content:
17:05:04.002436   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:05:04.002436   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:05:04.002436   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:05:04.002436   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:05:04.002436   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:05:04.002436   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:05:04.002436   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:05:04.002436   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:05:04.002436   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:05:04.002436   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:05:04.002436  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:05:04.002436  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:05:04.002436  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:05:04.002436  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:05:04.002436  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:05:04.002945  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:05:04.002945  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:05:04.002945  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:05:04.002945  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:05:04.002945  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.002945  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:05:04.002945  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.002945  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:05:04.002945  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.002945  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:05:04.002945  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.002945  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:05:04.002945  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:05:04.002945  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:04.002945  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:04.002945  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:05:04.002945  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:05:04.002945  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:05:04.002945  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:05:04.002945  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:05:04.002945  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:05:04.002945  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:05:04.002945  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:05:04.002945  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:05:04.002945  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:05:04.002945  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:05:04.002945  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:05:04.002945  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:05:04.002945  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:05:04.002945  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:05:04.002945  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:05:04.002945  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:05:04.002945  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:05:04.002945  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:05:04.002945  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:05:04.002945  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:05:04.002945  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:05:04.002945  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:05:04.002945  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:05:04.002945  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:05:04.002945  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:05:04.002945  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:05:04.002945  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:05:04.002945  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:05:04.002945  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:05:04.002945  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:05:04.002945  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:05:04.002945  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:05:04.002945  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:05:04.002945  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:05:04.002945  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:05:04.002945  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:05:04.002945  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:05:04.002945  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:05:04.002945  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:05:04.002945  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:05:04.002945  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:05:04.002945  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:05:04.002945  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:05:04.002945  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:05:04.002945  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:05:04.002945  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:05:04.002945  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:05:04.002945  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:05:04.002945  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:05:04.002945  80:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:05:04.002945  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:05:04.002945  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:05:04.002945  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:05:04.002945  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:05:04.002945  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:05:04.002945  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:05:04.002945  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:05:04.002945  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:05:04.002945  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:05:04.002945  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:05:04.002945  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:05:04.002945  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:05:04.002945  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:05:04.002945  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:05:04.002945  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:05:04.002945  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:05:04.002945  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:05:04.002945  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:05:04.002945  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:05:04.002945 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:05:04.002945 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:05:04.002945 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:05:04.002945 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:05:04.002945 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:05:04.003560 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:05:04.003560 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:05:04.003560 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:05:04.003560 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:05:04.003560 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:05:04.003560 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:05:04.003560 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:05:04.003560 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:05:04.003560 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:05:04.003560 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:05:04.003560 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:05:04.003560 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:05:04.003560 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:04.003560 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:04.003560 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:05:04.003560 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:05:04.003560 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:05:04.003560 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:05:04.003560 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:05:04.003560 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:05:04.003560 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:05:04.003560 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:05:04.003560 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:05:04.003560 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:05:04.003560 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:05:04.003560 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:05:04.003560 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:05:04.003560 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:05:04.003560 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:05:04.003560 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:05:04.003560 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:05:04.003560 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:05:04.003560 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:05:04.003560 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:05:04.003560 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:05:04.003560 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:05:04.003560 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:05:04.003560 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:05:04.003560 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:05:04.003560 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:05:04.003560 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:05:04.003560 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:05:04.003560 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:05:04.003560 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:05:04.003560 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:05:04.003560 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:05:04.003560 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:05:04.003560 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:05:04.003560 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:05:04.003560 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:05:04.003560 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:05:04.003560 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:05:04.003560 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:05:04.003560 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:05:04.003560 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:05:04.003560 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:05:04.003560 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:05:04.003560 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:05:04.003560 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:05:04.003560 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:05:04.003560 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:05:04.003560 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@14)[0m
17:05:04.003560 [92m                 textDocument/didChange:             > 80:3-80:4 -> ""[0m
17:05:04.003560 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:05:04.003560 OUT Elapsed: 0s
17:05:04.003560 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:05:04.025744 IN Elapsed: 22.1839ms
17:05:04.025744 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:05:04.025744 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:05:04.025744 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@19)[0m
17:05:04.025744 [92m                 textDocument/didChange:   > 67:2-67:3 (len=1) -> ""[0m
17:05:04.025744 [92m                 textDocument/didChange:   > 67:1-67:2 (len=1) -> ""[0m
17:05:04.025744 [92m                 textDocument/didChange:   > 67:0-67:1 (len=1) -> ""[0m
17:05:04.025744 [92m                 textDocument/didChange:   > 67:0-68:0 (len=1) -> ""[0m
17:05:04.025744 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:05:04.026470 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
17:05:04.027741 Ino Range: 67:2-67:3 -> Cpp Range:80:2-80:3
17:05:04.027741 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
17:05:04.028964 Ino Range: 67:1-67:2 -> Cpp Range:80:1-80:2
17:05:04.030198 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
17:05:04.032236 Ino Range: 67:0-67:1 -> Cpp Range:80:0-80:1
17:05:04.032742 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
17:05:04.033683 Ino Range: 67:0-68:0 -> Cpp Range:80:0-81:0
17:05:04.033683   > Current sketchmapper content:
17:05:04.033683   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:05:04.033683   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:05:04.033683   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:05:04.033683   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:05:04.033683   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:05:04.033683   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:05:04.033683   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:05:04.033683   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:05:04.033683   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:05:04.033683   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:05:04.033683  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:05:04.033683  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:05:04.033683  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:05:04.033683  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:05:04.033683  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:05:04.033683  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:05:04.033683  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:05:04.033683  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:05:04.033683  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:05:04.033683  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.033683  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:05:04.033683  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.033683  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:05:04.033683  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.033683  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:05:04.033683  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.033683  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:05:04.033683  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:05:04.033683  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:04.033683  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:04.033683  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
17:05:04.033683  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:05:04.033683  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:05:04.033683  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:05:04.033683  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:05:04.033683  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:05:04.033683  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:05:04.033683  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:05:04.033683  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:05:04.033683  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:05:04.033683  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:05:04.033683  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:05:04.033683  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:05:04.033683  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:05:04.033683  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:05:04.033683  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:05:04.033683  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:05:04.033683  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:05:04.033683  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:05:04.033683  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:05:04.033683  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:05:04.033683  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:05:04.033683  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:05:04.033683  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:05:04.033683  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:05:04.033683  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:05:04.033683  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:05:04.033683  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:05:04.033683  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:05:04.033683  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:05:04.033683  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:05:04.033683  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:05:04.033683  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:05:04.033683  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:05:04.033683  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:05:04.033683  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:05:04.034190  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:05:04.034190  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:05:04.034190  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:05:04.034190  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:05:04.034190  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:05:04.034190  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:05:04.034190  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:05:04.034190  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:05:04.034190  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:05:04.034190  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:05:04.034190  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:05:04.034190  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:05:04.034190  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:05:04.034190  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:05:04.034190  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:05:04.034190  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:05:04.034190  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:05:04.034190  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:05:04.034190  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:05:04.034190  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:05:04.034190  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:05:04.034190  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:05:04.034190  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:05:04.034190  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:05:04.034190  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:05:04.034190  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:05:04.034190  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:05:04.034190  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:05:04.034190  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:05:04.034190  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:05:04.034190  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:05:04.034190  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:05:04.034190  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:05:04.034190  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:05:04.034190 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:05:04.034190 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:05:04.034190 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:05:04.034190 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:05:04.034190 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:05:04.034190 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:05:04.034190 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:05:04.034190 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:05:04.034190 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:05:04.034190 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:05:04.034190 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:05:04.034190 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:05:04.034190 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:05:04.034190 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:05:04.034190 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:05:04.034190 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:05:04.034190 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:05:04.034190 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:04.034190 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:04.034190 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:05:04.034190 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:05:04.034190 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:05:04.034190 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:05:04.034190 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:05:04.034190 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:05:04.034190 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:05:04.034190 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:05:04.034190 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:05:04.034190 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:05:04.034190 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:05:04.034190 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:05:04.034190 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:05:04.034190 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:05:04.034190 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:05:04.034190 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:05:04.034190 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:05:04.034190 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:05:04.034190 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:05:04.034190 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:05:04.034190 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:05:04.034190 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:05:04.034190 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:05:04.034190 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:05:04.034190 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:05:04.034190 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:05:04.034190 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:05:04.034190 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:05:04.034190 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:05:04.034190 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:05:04.034190 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:05:04.034190 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:05:04.034190 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:05:04.034190 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:05:04.034190 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:05:04.034190 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:05:04.034190 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:05:04.034190 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:05:04.034190 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:05:04.034190 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:05:04.034190 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:05:04.034190 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:05:04.034190 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:05:04.034190 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:05:04.034190 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:05:04.034190 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:05:04.034190 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@18)[0m
17:05:04.034190 [92m                 textDocument/didChange:             > 80:2-80:3 -> ""[0m
17:05:04.034190 [92m                 textDocument/didChange:             > 80:1-80:2 -> ""[0m
17:05:04.034190 [92m                 textDocument/didChange:             > 80:0-80:1 -> ""[0m
17:05:04.034190 [92m                 textDocument/didChange:             > 80:0-81:0 -> ""[0m
17:05:04.034190 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:05:04.034190 OUT Elapsed: 0s
17:05:04.034190 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:05:04.122810 IN Elapsed: 1.1994139s
17:05:04.122810 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:05:04.123412 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:05:04.123412 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
17:05:04.123916 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
17:05:04.124319 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:05:04.124319 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
17:05:04.124319 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:05:04.124825 OUT Elapsed: 0s
17:05:04.124825 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:05:04.527723 IN Elapsed: 493.5328ms
17:05:04.527723 [92mIDE --> LS REQU textDocument/formatting 5[0m
17:05:04.527723 [92m                textDocument/formatting 5: [93mwrite-locked[0m[0m
17:05:04.528241 [92m                textDocument/formatting 5: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
17:05:04.528789 [92m                textDocument/formatting 5:     using custom formatter config file C:\Users\woodc\TrshProto\.clang-format[0m
17:05:04.529828 [92m                textDocument/formatting 5:     writing formatter config in: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build\sketch\.clang-format[0m
17:05:04.530730 [91mIDE     LS --> Clangd REQU textDocument/formatting 5[0m
17:05:04.530730 OUT Elapsed: 0s
17:05:04.544201 IN Elapsed: 421.3917ms
17:05:04.544201 [31mIDE     LS <-- Clangd RESP textDocument/formatting 5[0m
17:05:04.544831 [92m                textDocument/formatting 5: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:05:04.545921 [92m                textDocument/formatting 5: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp:162:1-164:0 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:149:1-151:0 (.ino)[0m
17:05:04.545921 [92m                textDocument/formatting 5:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp:162:1-164:0 -> "\n"[0m
17:05:04.545921 [92m                textDocument/formatting 5: converted to:[0m
17:05:04.545921 [92m                textDocument/formatting 5:   file:///C:/Users/woodc/TrshProto/TrshProto.ino ino/textEdit (1 elements)[0m
17:05:04.545921 [92m                textDocument/formatting 5:     > file:///C:/Users/woodc/TrshProto/TrshProto.ino:149:1-151:0 -> "\n"[0m
17:05:04.546438 [92m                textDocument/formatting 5:     formatter config cleaned[0m
17:05:04.546438 [92m                textDocument/formatting 5: [93mwrite-unlocked[0m[0m
17:05:04.546438 [32mIDE <-- LS RESP textDocument/formatting 5[0m
17:05:04.546438 OUT Elapsed: 0s
17:05:04.547108 IN Elapsed: 670.4µs
17:05:04.547616 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:05:04.547616 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:05:04.547616 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@21)[0m
17:05:04.547616 [92m                 textDocument/didChange:   > 149:1-149:1 (len=0) -> "\n"[0m
17:05:04.549207 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}


-----------------------------[0m
17:05:04.550126 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
17:05:04.550126 Ino Range: 149:1-149:1 -> Cpp Range:162:1-162:1
17:05:04.550126   > Current sketchmapper content:
17:05:04.550126   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:05:04.550126   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:05:04.550126   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:05:04.550126   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:05:04.550126   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:05:04.550126   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:05:04.550126   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:05:04.550126   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:05:04.550126   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:05:04.550126   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:05:04.550126  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:05:04.550126  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:05:04.550126  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:05:04.550126  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:05:04.550126  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:05:04.550126  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:05:04.550126  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:05:04.550126  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:05:04.550126  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:05:04.550126  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.550126  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:05:04.550126  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.550126  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:05:04.550126  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.550126  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:05:04.550126  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.550126  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:05:04.550126  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:05:04.550126  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:04.550126  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:04.550126  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
17:05:04.550126  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:05:04.550126  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:05:04.550126  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:05:04.550126  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:05:04.550126  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:05:04.550126  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:05:04.550126  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:05:04.550126  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:05:04.550126  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:05:04.550126  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:05:04.550126  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:05:04.550126  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:05:04.550126  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:05:04.550126  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:05:04.550126  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:05:04.550126  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:05:04.550126  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:05:04.550126  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:05:04.550126  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:05:04.550126  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:05:04.550126  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:05:04.550126  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:05:04.550126  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:05:04.550126  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:05:04.550126  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:05:04.550126  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:05:04.550126  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:05:04.550126  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:05:04.550126  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:05:04.550126  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:05:04.550126  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:05:04.550126  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:05:04.550126  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:05:04.550126  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:05:04.550126  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:05:04.550126  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:05:04.550126  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:05:04.550126  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:05:04.550126  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:05:04.550126  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:05:04.550126  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:05:04.550126  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:05:04.550126  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:05:04.550126  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:05:04.550126  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:05:04.550126  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:05:04.550126  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:05:04.550126  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:05:04.550126  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:05:04.550126  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:05:04.550126  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:05:04.550126  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:05:04.550126  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:05:04.550126  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:05:04.550126  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:05:04.550126  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:05:04.550126  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:05:04.550126  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:05:04.550126  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:05:04.550126  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:05:04.550126  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:05:04.550126  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:05:04.550126  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:05:04.550126  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:05:04.550126  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:05:04.550126  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:05:04.550126  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:05:04.551631  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:05:04.551631  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:05:04.551631 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:05:04.551631 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:05:04.551631 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:05:04.551855 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:05:04.551855 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:05:04.551855 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:05:04.551855 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:05:04.551855 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:05:04.551855 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:05:04.551855 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:05:04.551855 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:05:04.551855 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:05:04.551855 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:05:04.551855 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:05:04.551855 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:05:04.551855 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:05:04.551855 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:05:04.551855 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:04.551855 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:04.551855 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:05:04.551855 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:05:04.551855 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:05:04.551855 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:05:04.551855 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:05:04.551855 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:05:04.551855 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:05:04.551855 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:05:04.551855 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:05:04.551855 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:05:04.551855 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:05:04.551855 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:05:04.551855 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:05:04.551855 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:05:04.551855 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:05:04.551855 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:05:04.551855 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:05:04.551855 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:05:04.551855 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:05:04.551855 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:05:04.551855 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:05:04.551855 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:05:04.551855 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:05:04.551855 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:05:04.551855 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:05:04.551855 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:05:04.551855 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:05:04.551855 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:05:04.551855 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:05:04.551855 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:05:04.551855 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:05:04.551855 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:05:04.551855 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:05:04.551855 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:05:04.551855 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:05:04.551855 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:05:04.551855 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:05:04.551855 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:05:04.551855 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:05:04.551855 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:05:04.551855 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:05:04.551855 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:05:04.551855 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:05:04.551855 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:05:04.551855 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:05:04.551855 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:05:04.551855 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:05:04.551855 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@19)[0m
17:05:04.551855 [92m                 textDocument/didChange:             > 162:1-162:1 -> "\n"[0m
17:05:04.551855 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:05:04.551855 OUT Elapsed: 0s
17:05:04.551855 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:05:04.559332 IN Elapsed: 7.4769ms
17:05:04.559332 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:05:04.559332 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:05:04.559332 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@22)[0m
17:05:04.559332 [92m                 textDocument/didChange:   > 150:0-151:0 (len=1) -> ""[0m
17:05:04.559562 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:05:04.561580 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp[0m
17:05:04.562398 Ino Range: 150:0-151:0 -> Cpp Range:163:0-164:0
17:05:04.562398   > Current sketchmapper content:
17:05:04.562398   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:05:04.562398   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:05:04.562398   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:05:04.562398   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:05:04.562398   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:05:04.562398   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:05:04.562398   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:05:04.562398   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:05:04.562398   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:05:04.562398   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:05:04.562398  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:05:04.562398  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:05:04.562398  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:05:04.562398  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:05:04.562398  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:05:04.562398  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:05:04.562398  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:05:04.562398  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:05:04.562398  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:05:04.562398  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.562398  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:05:04.562398  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.562398  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:05:04.562398  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.562398  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:05:04.562398  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:04.562398  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:05:04.562398  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:05:04.562398  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:04.562398  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:04.562398  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
17:05:04.562398  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:05:04.562398  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:05:04.562398  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:05:04.562398  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:05:04.562398  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:05:04.562398  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:05:04.562398  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:05:04.562398  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:05:04.562398  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:05:04.562398  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:05:04.562398  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:05:04.562398  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:05:04.562398  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:05:04.562398  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:05:04.562398  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:05:04.562398  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:05:04.562398  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:05:04.562398  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:05:04.562398  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:05:04.562398  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:05:04.562398  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:05:04.562398  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:05:04.562398  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:05:04.562398  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:05:04.562398  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:05:04.562398  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:05:04.562398  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:05:04.562398  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:05:04.562398  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:05:04.562398  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:05:04.562398  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:05:04.562398  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:05:04.562398  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:05:04.562398  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:05:04.562398  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:05:04.564248  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:05:04.564755  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:05:04.564755  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:05:04.564755  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:05:04.564755  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:05:04.564755  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:05:04.564755  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:05:04.564755  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:05:04.564755  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:05:04.564755  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:05:04.564755  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:05:04.564755  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:05:04.564755  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:05:04.564755  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:05:04.564755  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:05:04.564755  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:05:04.564755  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:05:04.564755  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:05:04.564755  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:05:04.564755  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:05:04.564755  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:05:04.564755  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:05:04.564755  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:05:04.564755  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:05:04.564755  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:05:04.564755  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:05:04.564755  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:05:04.564755  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:05:04.564755  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:05:04.564755  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:05:04.564755  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:05:04.564755  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:05:04.564755  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:05:04.564755  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:05:04.565260 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:05:04.565260 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:05:04.565260 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:05:04.565260 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:05:04.565260 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:05:04.565260 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:05:04.565260 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:05:04.565260 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:05:04.565260 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:05:04.565260 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:05:04.565260 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:05:04.565260 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:05:04.565260 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:05:04.565260 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:05:04.565260 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:05:04.565260 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:05:04.565260 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:05:04.565260 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:04.565260 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:04.565260 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:05:04.565260 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:05:04.565260 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:05:04.565260 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:05:04.565260 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:05:04.565260 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:05:04.565260 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:05:04.565260 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:05:04.565260 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:05:04.565260 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:05:04.565260 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:05:04.565260 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:05:04.565260 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:05:04.565260 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:05:04.565260 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:05:04.565260 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:05:04.565260 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:05:04.565260 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:05:04.565260 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:05:04.565260 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:05:04.565260 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:05:04.565260 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:05:04.565260 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:05:04.565260 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:05:04.565260 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:05:04.565260 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:05:04.565260 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:05:04.565260 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:05:04.565260 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:05:04.565260 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:05:04.565260 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:05:04.565260 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:05:04.565260 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:05:04.565260 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:05:04.565260 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:05:04.565260 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:05:04.565260 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:05:04.565260 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:05:04.565260 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:05:04.565260 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:05:04.565260 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:05:04.565260 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:05:04.565260 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:05:04.565260 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:05:04.565260 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:05:04.565260 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:05:04.565260 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/sketch/TrshProto.ino.cpp@20)[0m
17:05:04.565260 [92m                 textDocument/didChange:             > 163:0-164:0 -> ""[0m
17:05:04.565260 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:05:04.565260 OUT Elapsed: 0s
17:05:04.565260 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:05:04.565260 IN Elapsed: 0s
17:05:04.565260 [92mIDE --> LS NOTIF textDocument/didSave[0m
17:05:04.565260 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
17:05:04.565837 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
17:05:04.565837 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
17:05:06.893458 [95mSKETCH REBUILD: : Error: running C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\2970949557 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild --format json C:\Users\woodc\TrshProto: exit status 1[0m
17:05:06.893458 [92mIDE <-- LS NOTIF $/progress[0m
17:05:06.893458 OUT Elapsed: 0s
17:05:07.901460 [95mSKETCH REBUILD: : Sketch rebuild started[0m
17:05:07.901460 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
17:05:07.901460 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
17:05:07.901460 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
17:05:07.901460 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\1784743494 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild --format json C:\Users\woodc\TrshProto[0m
17:05:07.901460 [92mIDE <-- LS REQU window/workDoneProgress/create 9[0m
17:05:07.901460 OUT Elapsed: 0s
17:05:07.901460 IN Elapsed: 3.3356234s
17:05:07.901460 [32mIDE --> LS RESP window/workDoneProgress/create 9[0m
17:05:07.901460 [92mIDE <-- LS NOTIF $/progress[0m
17:05:07.908970 OUT Elapsed: 0s
17:05:10.893137 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild",
    "used_libraries": [
      {
        "name": "Adafruit ADXL345",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Unified driver for the ADXL345 Accelerometer",
        "paragraph": "Unified driver for the ADXL345 Accelerometer",
        "website": "https://github.com/adafruit/Adafruit_ADXL345",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "version": "1.3.4",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_ADXL345_U.h"
        ]
      },
      {
        "name": "Adafruit BusIO",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "This is a library for abstracting away I2C and SPI interfacing",
        "paragraph": "This is a library for abstracting away I2C and SPI interfacing",
        "website": "https://github.com/adafruit/Adafruit_BusIO",
        "category": "Signal Input/Output",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "version": "1.14.5",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_address_detect",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_registers",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2corspi_register",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_modetest",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_register_bits",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_registers"
        ],
        "provides_includes": [
          "Adafruit_BusIO_Register.h",
          "Adafruit_I2CDevice.h",
          "Adafruit_I2CRegister.h",
          "Adafruit_SPIDevice.h"
        ]
      },
      {
        "name": "Wire",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "This library allows you to communicate with I2C and Two Wire Interface devices.",
        "paragraph": "It allows the communication with I2C devices like temperature sensors, realtime clocks and many others using SDA (Data Line) and SCL (Clock Line).",
        "website": "http://www.arduino.cc/en/Reference/Wire",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\SFRRanger_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\digital_potentiometer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\i2c_scanner",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_writer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_receiver",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_sender"
        ],
        "provides_includes": [
          "Wire.h"
        ]
      },
      {
        "name": "SPI",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus.",
        "paragraph": "SPI is a synchronous serial data protocol used by microcontrollers for communicating with one or more peripheral devices quickly over short distances. It uses three lines common to all devices (MISO, MOSI and SCK) and one specific for each device.",
        "website": "http://www.arduino.cc/en/Reference/SPI",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\BarometricPressureSensor",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\DigitalPotControl"
        ],
        "provides_includes": [
          "SPI.h"
        ]
      },
      {
        "name": "Adafruit Unified Sensor",
        "author": "Adafruit \u003cinfo@adafruit.com\u003e",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Required for all Adafruit Unified Sensor based libraries.",
        "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
        "website": "https://github.com/adafruit/Adafruit_Sensor",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "version": "1.1.14",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_Sensor.h"
        ]
      },
      {
        "name": "Arduino-MPU6050-dev",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "is_legacy": true,
        "location": 1,
        "provides_includes": [
          "MPU6050.h"
        ]
      },
      {
        "name": "SoftwareSerial",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables serial communication on any digital pin.",
        "paragraph": "The SoftwareSerial library has been developed to allow serial communication on any digital pin of the board, using software to replicate the functionality of the hardware UART. It is possible to have multiple software serial ports with speeds up to 115200 bps.",
        "website": "http://www.arduino.cc/en/Reference/SoftwareSerial",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\SoftwareSerialExample",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\TwoPortReceive"
        ],
        "provides_includes": [
          "SoftwareSerial.h"
        ]
      }
    ],
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701882309",
      "extra.time.utc=1701900309",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
17:05:10.894625 [95mSKETCH REBUILD: : Updated 'libraries.cache'. Copied: C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\fullbuild\libraries.cache to C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build\libraries.cache[0m
17:05:10.894625 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
17:05:10.894625 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
17:05:10.894625 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
17:05:10.896708 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\2703803330 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server3752077128\build --format json --skip-libraries-discovery C:\Users\woodc\TrshProto[0m
17:05:12.525963 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build",
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701882312",
      "extra.time.utc=1701900312",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server3752077128\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
17:05:12.538161 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
17:05:12.541401   > Current sketchmapper content:
17:05:12.541401   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:05:12.541401   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:05:12.541401   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:05:12.541401   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:05:12.541401   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:05:12.541401   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:05:12.541401   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:05:12.541401   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:05:12.541401   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:05:12.541401   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:05:12.541401  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:05:12.541401  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:05:12.541401  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:05:12.541401  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:05:12.541401  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:05:12.541401  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:05:12.541401  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:05:12.541401  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:05:12.541401  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:05:12.541401  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:12.541401  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:05:12.541401  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:12.541401  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:05:12.541401  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:12.541401  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:05:12.541401  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:12.541401  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:05:12.541401  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:05:12.541401  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
17:05:12.541401  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:05:12.541401  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
17:05:12.541401  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:05:12.541401  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:05:12.541401  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:05:12.541401  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:05:12.541401  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:05:12.541401  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:05:12.541915  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:05:12.541915  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:05:12.541915  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:05:12.541915  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:05:12.541915  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:05:12.541915  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:05:12.541915  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:05:12.541915  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:05:12.541915  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:05:12.541915  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:05:12.541915  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:05:12.541915  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:05:12.541915  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:05:12.541915  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:05:12.541915  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:05:12.541915  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:05:12.541915  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:05:12.541915  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:05:12.542069  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:05:12.542069  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:05:12.542069  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:05:12.542069  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:05:12.542069  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:05:12.542069  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:05:12.542069  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:05:12.542069  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:05:12.542069  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:05:12.542069  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:05:12.542069  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:05:12.542069  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:05:12.542069  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:05:12.542069  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:05:12.542069  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:05:12.542069  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:05:12.542069  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:05:12.542069  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:05:12.542069  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:05:12.542069  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:05:12.542069  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:05:12.542069  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:05:12.542069  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:05:12.542069  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:05:12.542069  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:05:12.542069  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:05:12.542069  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:05:12.542069  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:05:12.542069  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:05:12.542069  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:05:12.542069  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:05:12.542069  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:05:12.542069  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:05:12.542069  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:05:12.542069  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:05:12.542069  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:05:12.542069  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:05:12.542069  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:05:12.542069  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:05:12.542069  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:05:12.542069  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:05:12.542069  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:05:12.542069  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:05:12.542069  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:05:12.542069  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:05:12.542069 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:05:12.542069 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:05:12.542069 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:05:12.542069 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:05:12.542069 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:05:12.542069 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:05:12.542069 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:05:12.542069 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:05:12.542069 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:05:12.542575 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:05:12.542575 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:05:12.542575 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:05:12.542575 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:05:12.542575 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:05:12.542575 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:05:12.542575 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:05:12.542575 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:05:12.542575 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:05:12.542575 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:05:12.542575 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:05:12.542575 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:05:12.542575 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:05:12.542575 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:05:12.542575 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:05:12.542708 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:05:12.542708 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:05:12.542708 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:05:12.542708 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:05:12.542708 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:05:12.542708 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:05:12.542708 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:05:12.542708 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:05:12.542708 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:05:12.542708 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:05:12.542708 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:05:12.542708 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:05:12.542708 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:05:12.542708 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:05:12.542708 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:05:12.542708 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:05:12.542708 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:05:12.542708 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:05:12.542708 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:05:12.542708 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:05:12.542708 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:05:12.542708 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:05:12.542708 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:05:12.542708 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:05:12.542708 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:05:12.542708 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:05:12.542708 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:05:12.542708 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:05:12.542708 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:05:12.542708 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:05:12.542708 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:05:12.542708 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:05:12.542708 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:05:12.542708 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:05:12.542708 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:05:12.542708 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:05:12.542708 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:05:12.542708 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:05:12.542708 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:05:12.542708 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:05:12.542708 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:05:12.542708 [95mSKETCH REBUILD: : Sending 'didSave' notification to Clangd[0m
17:05:12.542708 [91mIDE     LS --> Clangd NOTIF textDocument/didSave[0m
17:05:12.543214 OUT Elapsed: 0s
17:05:12.543214 [95mSKETCH REBUILD: : Sending full-text 'didChange' notification to Clangd[0m
17:05:12.543214 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:05:12.543355 OUT Elapsed: 0s
17:05:12.543355 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
17:05:12.543355 [92mIDE <-- LS NOTIF $/progress[0m
17:05:12.543355 OUT Elapsed: 0s
17:05:12.619273 IN Elapsed: 8.0750718s
17:05:12.619273 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 4[0m
17:05:12.619273 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 4[0m
17:05:12.619273 OUT Elapsed: 0s
17:05:12.619782 [92mIDE <-- LS REQU window/workDoneProgress/create 10[0m
17:05:12.619782 OUT Elapsed: 0s
17:05:12.619782 IN Elapsed: 508.9µs
17:05:12.619782 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:05:12.619782 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
17:05:12.619782 IN Elapsed: 0s
17:05:12.619782 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:05:12.619782 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
17:05:12.621045 IN Elapsed: 4.7195846s
17:05:12.621045 [32mIDE --> LS RESP window/workDoneProgress/create 10[0m
17:05:12.621045 [92mIDE <-- LS NOTIF $/progress[0m
17:05:12.621557 OUT Elapsed: 511.8µs
17:05:12.621557 [92mIDE <-- LS NOTIF $/progress[0m
17:05:12.621557 OUT Elapsed: 0s
17:05:12.658884 IN Elapsed: 39.1024ms
17:05:12.658884 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:05:12.658884 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
17:05:12.658884 IN Elapsed: 0s
17:05:12.658884 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:05:12.658884 [91m                            $/progress: backgroundIndexProgress END [0m
17:05:12.658884 [92mIDE <-- LS NOTIF $/progress[0m
17:05:12.658884 OUT Elapsed: 0s
17:06:41.848862 IN Elapsed: 1m29.2278171s
17:06:41.848862 [92mIDE --> LS REQU shutdown 6[0m
17:06:41.848862 [91mIDE     LS --> Clangd REQU shutdown 6[0m
17:06:41.848862 OUT Elapsed: 0s
17:06:41.848862 IN Elapsed: 1m29.1899774s
17:06:41.848862 [31mIDE     LS <-- Clangd RESP shutdown 6[0m
17:06:41.854757 [32mIDE <-- LS RESP shutdown 6[0m
17:06:41.854757 OUT Elapsed: 0s
17:06:41.867789 IN Elapsed: 13.0314ms
17:06:41.867789 [92mIDE --> LS NOTIF exit[0m
17:06:41.867789 [91mIDE     LS --> Clangd NOTIF exit[0m
17:06:41.867789 OUT Elapsed: 0s
17:06:41.867789 [92m                 exit: Arduino Language Server is exiting.[0m
17:06:41.867789 [91mIDE     LS --> Clangd NOTIF exit[0m
17:06:41.867789 OUT Elapsed: 0s
17:06:41.867789 [97mLS: : Lost connection with IDE![0m







Started logging.
17:06:46.739881 Language server launched with arguments:
17:06:46.739881   arg[0] = C:\Users\woodc\AppData\Local\nvim-data\mason\packages\arduino-language-server\arduino-language-server.exe
17:06:46.739881   arg[1] = -clangd
17:06:46.739881   arg[2] = C:\Users\woodc\AppData\Local\nvim-data\mason\bin\clangd.cmd
17:06:46.739881   arg[3] = -cli-config
17:06:46.739881   arg[4] = C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml
17:06:46.739881   arg[5] = -fqbn
17:06:46.739881   arg[6] = arduino:avr:pro
17:06:46.739881   arg[7] = -log
17:06:46.739881   arg[8] = true
17:06:46.739881 arduino-cli found at C:\ProgramData\chocolatey\bin\arduino-cli.exe
17:06:46.747882 logging to C:\Users\woodc\TrshProto\inols.log
17:06:46.747882 [97mLS: : Initial board configuration: arduino:avr:pro[0m
17:06:46.747882 [97mLS: : arduino-language-server.exe Version: 0.7.5 Commit: 4752595 Date: 2023-08-17T12:59:44Z[0m
17:06:46.747882 [97mLS: : Language server temp directory: C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802[0m
17:06:46.747882 [97mLS: : Language server build path: C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\build[0m
17:06:46.747882 [97mLS: : Language server build sketch root: C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\build\sketch[0m
17:06:46.747882 [97mLS: : Language server FULL build path: C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\fullbuild[0m
17:06:46.747882 IN Elapsed: 0s
17:06:46.747882 [92mIDE --> LS REQU initialize 1[0m
17:06:46.747882 [92m                initialize 1: [93mwrite-locked[0m[0m
17:06:46.747882 [92m                initialize 1: [93mwrite-unlocked[0m[0m
17:06:46.755882 [92m                initialize 1: initialization parameters: {"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.5"}}[0m
17:06:46.755882 [32mIDE <-- LS RESP initialize 1[0m
17:06:46.755882 OUT Elapsed: 0s
17:06:46.764895 [96mINIT --- : initializing workbench: file:///C:/Users/woodc/TrshProto[0m
17:06:46.764895 [96mINIT --- : [93mread-locked[0m[0m
17:06:46.764895 [96mINIT --- : [93mread-unlocked[0m[0m
17:06:46.764895 [96mINIT --- : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\992309256 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\fullbuild --format json C:\Users\woodc\TrshProto[0m
17:06:47.671233 IN Elapsed: 915.3505ms
17:06:47.671233 [92mIDE --> LS NOTIF initialized[0m
17:06:47.671233 [92m                 initialized: Notification is not propagated to clangd[0m
17:06:47.671233 IN Elapsed: 0s
17:06:47.671233 [92mIDE --> LS NOTIF textDocument/didOpen[0m
17:06:47.671233 [92m                 textDocument/didOpen: [93mwrite-locked[0m[0m
17:06:47.671233 [92m                 textDocument/didOpen: (throttled: waiting for clangd)[0m
17:06:47.671233 [92m                 textDocument/didOpen: [93munlocked (waiting clangd)[0m[0m
17:06:50.388336 [96mINIT --- : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild",
    "used_libraries": [
      {
        "name": "Adafruit ADXL345",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Unified driver for the ADXL345 Accelerometer",
        "paragraph": "Unified driver for the ADXL345 Accelerometer",
        "website": "https://github.com/adafruit/Adafruit_ADXL345",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "version": "1.3.4",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_ADXL345_U.h"
        ]
      },
      {
        "name": "Adafruit BusIO",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "This is a library for abstracting away I2C and SPI interfacing",
        "paragraph": "This is a library for abstracting away I2C and SPI interfacing",
        "website": "https://github.com/adafruit/Adafruit_BusIO",
        "category": "Signal Input/Output",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "version": "1.14.5",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_address_detect",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_registers",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2corspi_register",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_modetest",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_register_bits",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_registers"
        ],
        "provides_includes": [
          "Adafruit_BusIO_Register.h",
          "Adafruit_I2CDevice.h",
          "Adafruit_I2CRegister.h",
          "Adafruit_SPIDevice.h"
        ]
      },
      {
        "name": "Wire",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "This library allows you to communicate with I2C and Two Wire Interface devices.",
        "paragraph": "It allows the communication with I2C devices like temperature sensors, realtime clocks and many others using SDA (Data Line) and SCL (Clock Line).",
        "website": "http://www.arduino.cc/en/Reference/Wire",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\SFRRanger_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\digital_potentiometer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\i2c_scanner",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_writer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_receiver",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_sender"
        ],
        "provides_includes": [
          "Wire.h"
        ]
      },
      {
        "name": "SPI",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus.",
        "paragraph": "SPI is a synchronous serial data protocol used by microcontrollers for communicating with one or more peripheral devices quickly over short distances. It uses three lines common to all devices (MISO, MOSI and SCK) and one specific for each device.",
        "website": "http://www.arduino.cc/en/Reference/SPI",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\BarometricPressureSensor",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\DigitalPotControl"
        ],
        "provides_includes": [
          "SPI.h"
        ]
      },
      {
        "name": "Adafruit Unified Sensor",
        "author": "Adafruit \u003cinfo@adafruit.com\u003e",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Required for all Adafruit Unified Sensor based libraries.",
        "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
        "website": "https://github.com/adafruit/Adafruit_Sensor",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "version": "1.1.14",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_Sensor.h"
        ]
      },
      {
        "name": "Arduino-MPU6050-dev",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "is_legacy": true,
        "location": 1,
        "provides_includes": [
          "MPU6050.h"
        ]
      },
      {
        "name": "SoftwareSerial",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables serial communication on any digital pin.",
        "paragraph": "The SoftwareSerial library has been developed to allow serial communication on any digital pin of the board, using software to replicate the functionality of the hardware UART. It is possible to have multiple software serial ports with speeds up to 115200 bps.",
        "website": "http://www.arduino.cc/en/Reference/SoftwareSerial",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\SoftwareSerialExample",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\TwoPortReceive"
        ],
        "provides_includes": [
          "SoftwareSerial.h"
        ]
      }
    ],
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701882408",
      "extra.time.utc=1701900408",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
17:06:50.391135 [96mINIT --- : Updated 'libraries.cache'. Copied: C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\fullbuild\libraries.cache to C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\build\libraries.cache[0m
17:06:50.391135 [96mINIT --- : [93mread-locked[0m[0m
17:06:50.391135 [96mINIT --- : [93mread-unlocked[0m[0m
17:06:50.391659 [96mINIT --- : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\1886159736 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\build --format json --skip-libraries-discovery C:\Users\woodc\TrshProto[0m
17:06:50.950733 [96mINIT --- : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build",
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701882410",
      "extra.time.utc=1701900410",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
17:06:50.958114 [96mINIT --- : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml config dump --format json[0m
17:06:51.044450 [96mINIT --- : Arduino Data Dir -> C:\Users\woodc\AppData\Local\Arduino15[0m
17:06:51.045008 [96mINIT --- :     Starting clangd: C:\Users\woodc\AppData\Local\nvim-data\mason\bin\clangd.cmd -log=verbose --compile-commands-dir=C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\build -query-driver=C:\Users\woodc\AppData\Local\Arduino15\packages\**[0m
17:06:51.052835 logging to C:\Users\woodc\TrshProto\inols-clangd.log
17:06:51.053283 logging to C:\Users\woodc\TrshProto\inols-clangd-err.log
17:06:51.053789 [91mIDE     LS --> Clangd REQU initialize 1[0m
17:06:51.053789 OUT Elapsed: 0s
17:06:51.093348 IN Elapsed: 39.559ms
17:06:51.093348 [31mIDE     LS <-- Clangd RESP initialize 1[0m
17:06:51.093348 [96mINIT --- : clangd successfully started: {"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/","*"]},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","\u003c","\u003e",","]},"declarationProvider":{},"definitionProvider":{},"typeDefinitionProvider":{},"implementationProvider":{},"referencesProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentLinkProvider":{},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{"prepareProvider":true},"foldingRangeProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"selectionRangeProvider":{},"callHierarchyProvider":{},"semanticTokensProvider":{"legend":{"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","modifier","operator","comment"],"tokenModifiers":["declaration","definition","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","usedAsMutablePointer","constructorOrDestructor","userDefined","functionScope","classScope","fileScope","globalScope"]},"range":false,"full":{"delta":true}},"workspaceSymbolProvider":{}},"serverInfo":{"name":"clangd","version":"clangd version 16.0.2 (https://github.com/llvm/llvm-project 18ddebe1a1a9bde349441631365f0472e9693520) windows+grpc x86_64-pc-windows-msvc"}}[0m
17:06:51.093348 [91mIDE     LS --> Clangd NOTIF initialized[0m
17:06:51.093348 OUT Elapsed: 0s
17:06:51.093348 [96mINIT --- : Done initializing workbench[0m
17:06:51.093348 [92m                 textDocument/didOpen: [93mlocked (waiting clangd)[0m[0m
17:06:51.093948 [92m                 textDocument/didOpen: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:06:51.095194 [92m                 textDocument/didOpen: Increasing .ino tracked files count to 1[0m
17:06:51.095194 [91mIDE     LS --> Clangd NOTIF textDocument/didOpen[0m
17:06:51.095699 OUT Elapsed: 0s
17:06:51.095699 [92m                 textDocument/didOpen: [93mwrite-unlocked[0m[0m
17:06:51.097861 IN Elapsed: 4.5136ms
17:06:51.097861 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:06:51.098366 IN Elapsed: 0s
17:06:51.098366 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:06:51.098466 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:06:51.098466 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/.clangd (0 diagnostics):[0m
17:06:51.102146 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/.clangd -> file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/.clangd[0m
17:06:51.102146 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:06:51.102146 [91m                            textDocument/publishDiagnostics: file:///C:/Users/woodc/AppData/Local/clangd/config.yaml (0 diagnostics):[0m
17:06:51.102146 IN Elapsed: 3.7803ms
17:06:51.102146 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:06:51.102146 IN Elapsed: 0s
17:06:51.102146 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 0[0m
17:06:51.102146 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 0[0m
17:06:51.102146 OUT Elapsed: 0s
17:06:51.102962 IN Elapsed: 0s
17:06:51.102962 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.102962 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
17:06:51.102962 IN Elapsed: 0s
17:06:51.102962 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.102962 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
17:06:51.102962 [91m                            textDocument/publishDiagnostics: file:///C:/Users/woodc/AppData/Local/clangd/config.yaml -> file:///C:/Users/woodc/AppData/Local/clangd/config.yaml[0m
17:06:51.102962 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:06:51.102962 [91m                            textDocument/publishDiagnostics: file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/.clangd (0 diagnostics):[0m
17:06:51.102962 [92mIDE <-- LS REQU window/workDoneProgress/create 1[0m
17:06:51.102962 OUT Elapsed: 0s
17:06:51.106205 IN Elapsed: 10.5059ms
17:06:51.106205 [32mIDE --> LS RESP window/workDoneProgress/create 1[0m
17:06:51.106205 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.106205 OUT Elapsed: 0s
17:06:51.106205 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.106205 OUT Elapsed: 0s
17:06:51.116902 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:06:51.118245 IN Elapsed: 13.9394ms
17:06:51.118245 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.118949 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.118949 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/AppData/Local/clangd/config.yaml (0 diagnostics):[0m
17:06:51.118949 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.118949 IN Elapsed: 0s
17:06:51.118949 OUT Elapsed: 0s
17:06:51.118949 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:06:51.118949 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.118949 OUT Elapsed: 0s
17:06:51.118949 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:06:51.118949 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.118949 IN Elapsed: 0s
17:06:51.118949 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.118949 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.118949 IN Elapsed: 0s
17:06:51.118949 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.118949 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.118949 IN Elapsed: 0s
17:06:51.118949 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.118949 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.118949 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 [91m                            textDocument/publishDiagnostics:   - file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/.clangd (0 diagnostics):[0m
17:06:51.119454 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 OUT Elapsed: 0s
17:06:51.119454 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 OUT Elapsed: 0s
17:06:51.119454 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.119454 IN Elapsed: 0s
17:06:51.119454 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.119454 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.119454 OUT Elapsed: 0s
17:06:51.121193 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.121193 IN Elapsed: 0s
17:06:51.121193 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.121193 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.121193 IN Elapsed: 0s
17:06:51.121193 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.121193 [91m                            $/progress: backgroundIndexProgress REPORT, 0/27, 0.0%[0m
17:06:51.121193 IN Elapsed: 0s
17:06:51.121193 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.121193 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
17:06:51.121193 [91m                            textDocument/publishDiagnostics: file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/.clangd -> file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/.clangd[0m
17:06:51.121193 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.121699 OUT Elapsed: 505.9µs
17:06:51.121699 IN Elapsed: 0s
17:06:51.121699 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.121699 [91m                            $/progress: backgroundIndexProgress REPORT, 1/27, 3.0%[0m
17:06:51.121699 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.121699 OUT Elapsed: 0s
17:06:51.133463 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:06:51.133463 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/.clangd (0 diagnostics):[0m
17:06:51.133463 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:06:51.133463 OUT Elapsed: 0s
17:06:51.133463 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:06:51.396555 IN Elapsed: 274.8563ms
17:06:51.396555 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.397063 [91m                            $/progress: backgroundIndexProgress REPORT, 2/27, 7.0%[0m
17:06:51.397063 IN Elapsed: 0s
17:06:51.397063 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.397063 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.397063 OUT Elapsed: 0s
17:06:51.397063 [91m                            $/progress: backgroundIndexProgress REPORT, 2/27, 7.0%[0m
17:06:51.397063 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.397063 OUT Elapsed: 0s
17:06:51.411124 IN Elapsed: 14.0609ms
17:06:51.411124 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:06:51.411124 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:06:51.414101 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
17:06:51.414609 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
17:06:51.415131 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:06:51.415131 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
17:06:51.415131 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:06:51.415131 OUT Elapsed: 0s
17:06:51.415131 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:06:51.439308 IN Elapsed: 28.1839ms
17:06:51.439839 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.439839 [91m                            $/progress: backgroundIndexProgress REPORT, 3/27, 11.0%[0m
17:06:51.439839 IN Elapsed: 0s
17:06:51.439839 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.439839 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.439839 [91m                            $/progress: backgroundIndexProgress REPORT, 3/27, 11.0%[0m
17:06:51.439839 OUT Elapsed: 0s
17:06:51.440453 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.440453 OUT Elapsed: 0s
17:06:51.497090 IN Elapsed: 57.2519ms
17:06:51.497090 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.497090 [91m                            $/progress: backgroundIndexProgress REPORT, 4/27, 14.0%[0m
17:06:51.497090 IN Elapsed: 0s
17:06:51.497090 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.497090 [91m                            $/progress: backgroundIndexProgress REPORT, 4/27, 14.0%[0m
17:06:51.497090 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.497090 OUT Elapsed: 0s
17:06:51.497090 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.497090 OUT Elapsed: 0s
17:06:51.553196 IN Elapsed: 56.106ms
17:06:51.553196 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.553196 [91m                            $/progress: backgroundIndexProgress REPORT, 5/27, 18.0%[0m
17:06:51.553196 IN Elapsed: 0s
17:06:51.553196 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.553196 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.553196 OUT Elapsed: 0s
17:06:51.553196 [91m                            $/progress: backgroundIndexProgress REPORT, 5/27, 18.0%[0m
17:06:51.553196 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.553196 OUT Elapsed: 0s
17:06:51.707861 IN Elapsed: 154.6645ms
17:06:51.707861 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.707861 [91m                            $/progress: backgroundIndexProgress REPORT, 6/27, 22.0%[0m
17:06:51.707861 IN Elapsed: 0s
17:06:51.707861 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:51.707861 [91m                            $/progress: backgroundIndexProgress REPORT, 6/27, 22.0%[0m
17:06:51.707861 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.707861 OUT Elapsed: 0s
17:06:51.707861 [92mIDE <-- LS NOTIF $/progress[0m
17:06:51.707861 OUT Elapsed: 0s
17:06:52.204384 IN Elapsed: 496.5226ms
17:06:52.205120 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.205120 [91m                            $/progress: backgroundIndexProgress REPORT, 7/27, 25.0%[0m
17:06:52.205120 IN Elapsed: 0s
17:06:52.205120 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.205120 [91m                            $/progress: backgroundIndexProgress REPORT, 7/27, 25.0%[0m
17:06:52.205120 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.205120 OUT Elapsed: 0s
17:06:52.370572 IN Elapsed: 165.4516ms
17:06:52.370572 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.370572 [91m                            $/progress: backgroundIndexProgress REPORT, 8/27, 29.0%[0m
17:06:52.370572 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.370572 OUT Elapsed: 0s
17:06:52.375569 IN Elapsed: 4.997ms
17:06:52.375569 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.375569 [91m                            $/progress: backgroundIndexProgress REPORT, 9/27, 33.0%[0m
17:06:52.375569 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.375569 OUT Elapsed: 0s
17:06:52.492942 IN Elapsed: 117.3727ms
17:06:52.492942 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.492942 [91m                            $/progress: backgroundIndexProgress REPORT, 10/27, 37.0%[0m
17:06:52.492942 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.492942 OUT Elapsed: 0s
17:06:52.539912 IN Elapsed: 46.9701ms
17:06:52.539912 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.539912 [91m                            $/progress: backgroundIndexProgress REPORT, 11/27, 40.0%[0m
17:06:52.539912 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.539912 OUT Elapsed: 0s
17:06:52.588327 IN Elapsed: 48.4157ms
17:06:52.588327 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.588327 [91m                            $/progress: backgroundIndexProgress REPORT, 12/27, 44.0%[0m
17:06:52.588327 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.588931 OUT Elapsed: 604µs
17:06:52.599991 IN Elapsed: 11.6632ms
17:06:52.599991 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.599991 [91m                            $/progress: backgroundIndexProgress REPORT, 13/27, 48.0%[0m
17:06:52.599991 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.599991 OUT Elapsed: 0s
17:06:52.613916 IN Elapsed: 13.9249ms
17:06:52.613916 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.613916 [91m                            $/progress: backgroundIndexProgress REPORT, 14/27, 51.0%[0m
17:06:52.613916 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.613916 OUT Elapsed: 0s
17:06:52.643314 IN Elapsed: 29.398ms
17:06:52.643314 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.643314 [91m                            $/progress: backgroundIndexProgress REPORT, 15/27, 55.0%[0m
17:06:52.643314 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.643314 OUT Elapsed: 0s
17:06:52.654369 IN Elapsed: 11.0551ms
17:06:52.658104 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.658104 [91m                            $/progress: backgroundIndexProgress REPORT, 16/27, 59.0%[0m
17:06:52.658104 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.658104 OUT Elapsed: 0s
17:06:52.666183 IN Elapsed: 8.079ms
17:06:52.666183 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.666183 [91m                            $/progress: backgroundIndexProgress REPORT, 17/27, 62.0%[0m
17:06:52.666721 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.666927 OUT Elapsed: 0s
17:06:52.677900 IN Elapsed: 11.7162ms
17:06:52.677900 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.677900 [91m                            $/progress: backgroundIndexProgress REPORT, 18/27, 66.0%[0m
17:06:52.677900 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.678410 OUT Elapsed: 0s
17:06:52.680621 IN Elapsed: 2.7214ms
17:06:52.680621 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.680621 [91m                            $/progress: backgroundIndexProgress REPORT, 19/27, 70.0%[0m
17:06:52.680621 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.680621 OUT Elapsed: 0s
17:06:52.692768 IN Elapsed: 12.1469ms
17:06:52.692768 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.692768 [91m                            $/progress: backgroundIndexProgress REPORT, 20/27, 74.0%[0m
17:06:52.693277 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.693277 OUT Elapsed: 0s
17:06:52.706527 IN Elapsed: 13.7588ms
17:06:52.706527 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.706527 [91m                            $/progress: backgroundIndexProgress REPORT, 21/27, 77.0%[0m
17:06:52.706527 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.707053 OUT Elapsed: 0s
17:06:52.718840 IN Elapsed: 12.3136ms
17:06:52.718840 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.718840 [91m                            $/progress: backgroundIndexProgress REPORT, 22/27, 81.0%[0m
17:06:52.718840 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.718840 OUT Elapsed: 0s
17:06:52.751073 IN Elapsed: 30.088ms
17:06:52.751073 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.751073 [91m                            $/progress: backgroundIndexProgress REPORT, 23/27, 85.0%[0m
17:06:52.751073 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.751073 OUT Elapsed: 0s
17:06:52.755053 IN Elapsed: 3.9803ms
17:06:52.755053 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.755053 [91m                            $/progress: backgroundIndexProgress REPORT, 24/27, 88.0%[0m
17:06:52.755053 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.755561 OUT Elapsed: 0s
17:06:52.799665 IN Elapsed: 44.6119ms
17:06:52.799665 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.799665 [91m                            $/progress: backgroundIndexProgress REPORT, 25/27, 92.0%[0m
17:06:52.799665 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.799665 OUT Elapsed: 0s
17:06:52.853281 IN Elapsed: 53.6162ms
17:06:52.853281 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.853281 [91m                            $/progress: backgroundIndexProgress REPORT, 26/27, 96.0%[0m
17:06:52.853281 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.853827 OUT Elapsed: 0s
17:06:52.881424 IN Elapsed: 28.1428ms
17:06:52.881424 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:06:52.881593 [91m                            $/progress: backgroundIndexProgress END [0m
17:06:52.881593 [92mIDE <-- LS NOTIF $/progress[0m
17:06:52.881593 OUT Elapsed: 0s
17:38:19.100843 IN Elapsed: 31m27.9946382s
17:38:19.100843 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:19.100843 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:19.100843 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@3)[0m
17:38:19.100843 [92m                 textDocument/didChange:   > 62:16-63:0 (len=1) -> "\n    \n"[0m
17:38:19.100843 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:19.101573 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:19.102080 Ino Range: 62:16-63:0 -> Cpp Range:75:16-76:0
17:38:19.102080   > Current sketchmapper content:
17:38:19.102080   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:19.102080   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:19.102080   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:19.102080   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:19.102080   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:19.102080   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:19.102080   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:19.102080   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:19.102080   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:19.102080   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:19.102080  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:19.102080  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:19.102080  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:19.102080  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:19.102080  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:19.102080  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:19.102080  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:19.102080  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:19.102080  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:19.102080  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:19.102080  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:19.102080  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:19.103953  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:19.103953  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:19.103953  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:19.103953  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:19.108905  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:19.125023  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:19.125023  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:19.125023  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:19.125023  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:19.125023  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:19.125023  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:19.125023  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:19.125023  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:19.125023  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:19.125023  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:19.125023  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:19.125023  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:19.125023  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:19.125023  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:19.125023  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:19.125023  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:19.125023  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:19.125023  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:19.125023  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:19.125023  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:19.125023  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:19.125023  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:19.125023  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:19.125023  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:19.125023  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:19.125023  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:19.125023  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:19.125023  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:19.125023  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:19.125023  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:19.125023  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:19.125023  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:19.125023  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:19.125023  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:19.125023  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:19.125023  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:19.125023  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:19.125023  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:19.125023  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:19.125023  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:19.125023  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:19.125023  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:19.125023  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:19.125023  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:19.125023  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:19.125023  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:19.125023  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:19.125023  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:19.125023  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:19.125023  76:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:19.125023  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:19.125023  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:19.125023  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:19.125023  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:19.125023  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:19.125023  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:19.125023  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:19.125023  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:19.125023  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:19.125023  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:19.125023  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:19.125023  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:19.125023  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:19.125023  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:19.125023  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:19.125023  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:19.125023  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:19.125023  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:19.125023  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:19.125023  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:19.125023  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:19.125023  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:19.125023  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:19.125023 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:19.125023 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:19.125023 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:19.125023 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:19.125023 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:19.125023 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:19.125023 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:19.125023 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:19.125023 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:19.125023 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:19.125023 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:19.125023 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:19.125023 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:19.125023 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:19.125023 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:19.125023 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:19.125023 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:19.125023 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:19.125023 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:19.125023 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:19.125023 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:19.125023 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:19.125023 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:19.125023 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:19.125023 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:19.125023 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:19.125023 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:19.125023 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:19.125023 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:19.125023 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:19.125023 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:19.125023 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:19.125023 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:19.125023 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:19.125023 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:19.125023 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:19.125023 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:19.125023 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:19.125023 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:19.125023 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:19.125023 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:19.125023 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:19.125023 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:19.125023 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:19.125023 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:19.125023 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:19.125023 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:19.125023 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:19.125023 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:19.125023 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:19.125023 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:19.125023 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:19.125023 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:19.125023 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:19.125023 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:19.125023 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:19.125023 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:19.125023 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:19.125023 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:19.125023 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:19.125023 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:19.125023 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:19.125023 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:19.125023 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:19.125023 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:19.125023 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:19.125023 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@2)[0m
17:38:19.125023 [92m                 textDocument/didChange:             > 75:16-76:0 -> "\n    \n"[0m
17:38:19.125023 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:19.125023 OUT Elapsed: 0s
17:38:19.125023 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:19.254043 IN Elapsed: 31m26.3724501s
17:38:19.255789 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:19.255789 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:19.255789 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
17:38:19.256295 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
17:38:19.256367 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:19.256367 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
17:38:19.256367 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:19.256367 OUT Elapsed: 0s
17:38:19.256367 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:19.557384 IN Elapsed: 432.3609ms
17:38:19.557384 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:19.557384 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:19.557384 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@4)[0m
17:38:19.557384 [92m                 textDocument/didChange:   > 63:4-63:4 (len=0) -> "ET"[0m
17:38:19.557977 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    ET
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:19.558482 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:19.560185 Ino Range: 63:4-63:4 -> Cpp Range:76:4-76:4
17:38:19.560185   > Current sketchmapper content:
17:38:19.560185   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:19.560185   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:19.560185   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:19.560185   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:19.560185   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:19.560185   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:19.560185   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:19.560185   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:19.560185   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:19.560185   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:19.560185  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:19.560185  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:19.560185  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:19.560185  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:19.560185  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:19.560185  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:19.560185  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:19.560185  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:19.560185  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:19.560185  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:19.560185  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:19.560185  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:19.560185  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:19.560185  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:19.560185  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:19.560185  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:19.560185  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:19.560185  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:19.560185  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:19.560185  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:19.560185  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:19.560185  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:19.560185  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:19.560185  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:19.560185  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:19.560185  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:19.560185  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:19.560185  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:19.560185  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:19.560185  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:19.560185  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:19.560185  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:19.560185  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:19.560185  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:19.560185  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:19.560185  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:19.560185  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:19.560185  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:19.560185  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:19.560185  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:19.560185  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:19.560185  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:19.560185  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:19.560185  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:19.560185  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:19.560185  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:19.560185  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:19.560185  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:19.560185  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:19.560185  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:19.560185  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:19.560185  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:19.560185  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:19.560185  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:19.560185  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:19.560185  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:19.560185  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:19.560185  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:19.560185  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:19.560185  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:19.560185  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:19.560185  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:19.560185  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:19.560185  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:19.560185  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:19.560185  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:19.560185  76:     ET                                                       | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:19.560185  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:19.560185  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:19.560185  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:19.560185  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:19.560185  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:19.560185  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:19.560185  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:19.560185  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:19.560185  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:19.560185  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:19.560185  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:19.560185  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:19.560185  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:19.560185  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:19.560185  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:19.560185  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:19.560185  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:19.560185  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:19.560185  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:19.560185  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:19.560185  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:19.560185  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:19.560185  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:19.560185 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:19.560185 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:19.560185 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:19.560185 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:19.560185 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:19.560185 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:19.560185 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:19.560185 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:19.560185 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:19.560185 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:19.560185 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:19.560185 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:19.560185 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:19.560185 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:19.560185 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:19.560185 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:19.560185 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:19.560185 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:19.560185 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:19.560185 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:19.560185 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:19.560185 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:19.560185 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:19.560185 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:19.560185 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:19.560185 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:19.560185 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:19.560185 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:19.560185 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:19.560185 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:19.560185 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:19.560185 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:19.560185 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:19.560185 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:19.560185 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:19.560185 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:19.560185 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:19.560185 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:19.560185 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:19.560185 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:19.560185 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:19.560185 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:19.560185 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:19.560185 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:19.560185 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:19.560185 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:19.560185 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:19.560185 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:19.560185 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:19.560185 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:19.560185 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:19.560185 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:19.560185 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:19.560185 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:19.560185 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:19.560185 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:19.560185 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:19.560185 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:19.560185 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:19.560185 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:19.560185 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:19.560185 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:19.560185 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:19.560185 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:19.560185 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:19.560185 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:19.560185 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@3)[0m
17:38:19.560185 [92m                 textDocument/didChange:             > 76:4-76:4 -> "ET"[0m
17:38:19.560185 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:19.560185 OUT Elapsed: 0s
17:38:19.560185 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:19.562229 IN Elapsed: 0s
17:38:19.562229 [92mIDE --> LS REQU textDocument/completion 2[0m
17:38:19.562229 [92m                textDocument/completion 2: [93mread-locked[0m[0m
17:38:19.563710 [92m                textDocument/completion 2: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:19.565089 [92m                textDocument/completion 2: file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:6 -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:6[0m
17:38:19.565089 [91mIDE     LS --> Clangd REQU textDocument/completion 2[0m
17:38:19.565089 OUT Elapsed: 0s
17:38:19.605780 IN Elapsed: 349.9904ms
17:38:19.605856 [31mIDE     LS <-- Clangd RESP textDocument/completion 2[0m
17:38:19.606888 [92m                textDocument/completion 2: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:6 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:6 (.ino)[0m
17:38:19.606888 [92m                textDocument/completion 2: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:6 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:6 (.ino)[0m
17:38:19.606888 [92m                textDocument/completion 2: <-- completion(2 items)[0m
17:38:19.606888 [92m                textDocument/completion 2: [93mread-unlocked[0m[0m
17:38:19.606888 [32mIDE <-- LS RESP textDocument/completion 2[0m
17:38:19.607409 OUT Elapsed: 0s
17:38:19.695079 IN Elapsed: 89.2229ms
17:38:19.695079 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:19.695079 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:19.695079 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:38:19.695079 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "unknown_typename"[0m
17:38:19.695586 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:6 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:6 (.ino)[0m
17:38:19.696171 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:19.696171 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:38:19.696171 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "unknown_typename"[0m
17:38:19.696171 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:19.696676 OUT Elapsed: 0s
17:38:19.696676 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:20.197516 IN Elapsed: 590.107ms
17:38:20.197516 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:20.197516 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:20.197516 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@5)[0m
17:38:20.197516 [92m                 textDocument/didChange:   > 63:5-63:6 (len=1) -> ""[0m
17:38:20.197516 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    E
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:20.197516 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:20.201241 Ino Range: 63:5-63:6 -> Cpp Range:76:5-76:6
17:38:20.201241   > Current sketchmapper content:
17:38:20.201241   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:20.201241   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:20.201241   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:20.201241   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:20.201241   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:20.201241   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:20.201241   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:20.201241   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:20.201241   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:20.201241   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:20.201241  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:20.201241  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:20.201241  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:20.201241  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:20.201241  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:20.201241  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:20.201241  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:20.201241  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:20.201241  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:20.201241  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.201241  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:20.201241  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.201241  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:20.201241  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.201241  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:20.201241  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.201241  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:20.201241  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:20.201241  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:20.201241  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:20.201241  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:20.201241  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:20.201241  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:20.201241  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:20.201241  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:20.201241  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:20.201241  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:20.201241  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:20.201241  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:20.201241  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:20.201241  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:20.201241  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:20.201241  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:20.201241  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:20.201241  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:20.201241  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:20.201241  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:20.201241  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:20.201241  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:20.201241  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:20.201241  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:20.201241  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:20.201241  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:20.201241  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:20.201241  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:20.201241  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:20.201241  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:20.201241  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:20.201241  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:20.201241  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:20.201241  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:20.201241  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:20.201241  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:20.201241  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:20.201241  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:20.201241  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:20.201241  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:20.201241  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:20.201241  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:20.201241  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:20.201241  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:20.201241  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:20.201241  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:20.201241  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:20.201241  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:20.201241  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:20.201241  76:     E                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:20.201241  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:20.201241  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:20.201241  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:20.201241  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:20.201241  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:20.201241  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:20.201241  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:20.201241  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:20.201241  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:20.201241  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:20.201241  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:20.201241  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:20.201241  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:20.201241  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:20.201241  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:20.201241  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:20.201241  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:20.201241  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:20.201241  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:20.201241  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:20.201241  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:20.201241  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:20.201241  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:20.201241 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:20.201241 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:20.201241 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:20.201241 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:20.201241 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:20.201241 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:20.201241 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:20.201241 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:20.201241 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:20.201241 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:20.201241 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:20.201241 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:20.201241 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:20.201241 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:20.201241 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:20.201241 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:20.201241 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:20.201241 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:20.201241 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:20.201241 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:20.201241 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:20.201241 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:20.201241 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:20.201241 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:20.201241 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:20.201241 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:20.201241 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:20.201241 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:20.201241 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:20.201241 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:20.201241 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:20.201241 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:20.201241 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:20.201241 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:20.201241 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:20.201241 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:20.201241 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:20.201241 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:20.201241 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:20.201241 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:20.201241 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:20.201241 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:20.201241 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:20.201241 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:20.201241 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:20.201241 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:20.201241 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:20.201241 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:20.201241 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:20.201241 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:20.201241 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:20.201241 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:20.201241 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:20.201241 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:20.201241 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:20.201241 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:20.201241 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:20.201241 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:20.201241 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:20.201241 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:20.201241 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:20.201241 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:20.201241 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:20.201241 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:20.201241 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:20.201241 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:20.201241 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@4)[0m
17:38:20.201241 [92m                 textDocument/didChange:             > 76:5-76:6 -> ""[0m
17:38:20.201241 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:20.204258 OUT Elapsed: 3.0173ms
17:38:20.204258 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:20.204258 IN Elapsed: 0s
17:38:20.204258 [92mIDE --> LS REQU textDocument/completion 3[0m
17:38:20.204258 [92m                textDocument/completion 3: [93mread-locked[0m[0m
17:38:20.204844 [92m                textDocument/completion 3: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:20.205864 [92m                textDocument/completion 3: file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:5 -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:5[0m
17:38:20.205864 [91mIDE     LS --> Clangd REQU textDocument/completion 3[0m
17:38:20.205864 OUT Elapsed: 0s
17:38:20.251417 IN Elapsed: 556.3382ms
17:38:20.252682 [31mIDE     LS <-- Clangd RESP textDocument/completion 3[0m
17:38:20.253808 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.254348 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.254758 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.255327 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.255835 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.256355 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.257070 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.257578 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.258090 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.258432 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.259444 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.260103 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.260609 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.262615 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.262615 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.265086 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.265086 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.266484 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.266988 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.267225 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.267980 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.268483 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.268483 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.269174 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.269823 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.270329 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.270329 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.271513 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.272867 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.273455 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.274246 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.274829 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.275334 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.275543 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.276050 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.276483 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.276988 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.277517 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.278268 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.278772 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.278908 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.279519 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.279519 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.280119 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.280623 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.280684 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.281309 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.281814 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.281943 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.282578 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.283081 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.283207 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.283829 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.283829 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.284458 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.284458 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.285086 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.285589 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.285801 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.286447 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.286447 IN Elapsed: 34.5228ms
17:38:20.286447 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:20.286950 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.286950 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:20.286950 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:38:20.287075 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "unknown_typename"[0m
17:38:20.287075 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.287579 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.287639 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.287639 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:20.287639 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:38:20.287639 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "unknown_typename"[0m
17:38:20.287639 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:20.287639 OUT Elapsed: 0s
17:38:20.287639 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:20.288142 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.288256 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.288815 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.288815 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.289428 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.289931 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.289986 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.290489 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.291064 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.291064 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.291064 [92m                textDocument/completion 3: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:38:20.291567 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:38:20.291567 [92m                textDocument/completion 3:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:38:20.291567 [92m                textDocument/completion 3: converted to:[0m
17:38:20.291567 [92m                textDocument/completion 3:   file:///not-ino ino/textEdit (1 elements)[0m
17:38:20.291567 [92m                textDocument/completion 3:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:38:20.292150 [92m                textDocument/completion 3: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:20.292150 [92m                textDocument/completion 3: <-- completion(74 items)[0m
17:38:20.292150 [92m                textDocument/completion 3: [93mread-unlocked[0m[0m
17:38:20.292738 [32mIDE <-- LS RESP textDocument/completion 3[0m
17:38:20.293241 OUT Elapsed: 503.7µs
17:38:20.349763 IN Elapsed: 56.5213ms
17:38:20.349763 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:20.349763 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:20.349763 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@6)[0m
17:38:20.349763 [92m                 textDocument/didChange:   > 63:4-63:5 (len=1) -> ""[0m
17:38:20.350370 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:20.351025 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:20.353520 Ino Range: 63:4-63:5 -> Cpp Range:76:4-76:5
17:38:20.353520   > Current sketchmapper content:
17:38:20.353520   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:20.353520   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:20.353520   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:20.353520   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:20.353520   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:20.353520   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:20.353520   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:20.353520   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:20.353520   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:20.353520   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:20.353520  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:20.353520  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:20.353520  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:20.353520  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:20.353520  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:20.353520  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:20.353520  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:20.353520  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:20.353520  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:20.353520  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.353520  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:20.353520  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.353520  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:20.353520  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.353520  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:20.353520  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.353520  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:20.353520  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:20.353520  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:20.353520  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:20.353520  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:20.353520  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:20.353520  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:20.353520  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:20.353520  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:20.353520  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:20.353520  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:20.353520  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:20.353520  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:20.354057  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:20.354057  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:20.354057  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:20.354057  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:20.354057  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:20.354057  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:20.354057  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:20.354057  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:20.354057  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:20.354057  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:20.354057  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:20.354057  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:20.354057  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:20.354057  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:20.354057  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:20.354057  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:20.354057  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:20.354057  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:20.354057  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:20.354057  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:20.354057  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:20.354057  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:20.354057  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:20.354057  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:20.354057  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:20.354057  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:20.354057  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:20.354057  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:20.354057  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:20.354057  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:20.354057  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:20.354057  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:20.354057  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:20.354057  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:20.354057  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:20.354057  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:20.354057  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:20.354057  76:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:20.354057  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:20.354057  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:20.354057  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:20.354057  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:20.354057  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:20.354057  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:20.354057  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:20.354057  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:20.354057  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:20.354057  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:20.354057  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:20.354057  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:20.354057  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:20.354057  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:20.354057  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:20.354057  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:20.354057  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:20.354057  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:20.354057  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:20.354057  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:20.354057  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:20.354057  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:20.354057  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:20.354057 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:20.354057 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:20.354057 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:20.354605 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:20.354605 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:20.354605 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:20.354605 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:20.354605 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:20.354605 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:20.354605 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:20.354605 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:20.354605 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:20.354605 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:20.354605 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:20.354605 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:20.354605 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:20.354605 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:20.354605 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:20.354605 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:20.354605 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:20.354605 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:20.354605 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:20.354605 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:20.354605 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:20.354605 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:20.354605 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:20.354605 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:20.354605 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:20.354605 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:20.354605 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:20.354605 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:20.354605 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:20.354605 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:20.354605 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:20.354605 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:20.354605 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:20.354605 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:20.354605 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:20.354605 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:20.354605 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:20.354605 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:20.354605 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:20.354605 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:20.354605 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:20.354605 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:20.354605 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:20.354605 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:20.354605 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:20.354605 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:20.354605 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:20.354605 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:20.354605 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:20.354605 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:20.354605 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:20.354605 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:20.354605 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:20.354605 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:20.354605 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:20.354605 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:20.354605 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:20.354605 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:20.354605 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:20.354605 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:20.354605 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:20.355157 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:20.355157 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:20.355243 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@5)[0m
17:38:20.355243 [92m                 textDocument/didChange:             > 76:4-76:5 -> ""[0m
17:38:20.355243 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:20.355243 OUT Elapsed: 0s
17:38:20.355243 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:20.436830 IN Elapsed: 149.8793ms
17:38:20.436830 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:20.436830 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:20.436830 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
17:38:20.437413 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
17:38:20.438001 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:20.438001 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
17:38:20.438001 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:20.438001 OUT Elapsed: 0s
17:38:20.438001 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:20.964512 IN Elapsed: 609.2695ms
17:38:20.964512 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:20.964512 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:20.964512 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@7)[0m
17:38:20.964512 [92m                 textDocument/didChange:   > 63:4-63:4 (len=0) -> "e"[0m
17:38:20.968664 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    e
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:20.969181 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:20.969181 Ino Range: 63:4-63:4 -> Cpp Range:76:4-76:4
17:38:20.969181   > Current sketchmapper content:
17:38:20.969181   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:20.969181   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:20.969181   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:20.969181   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:20.969181   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:20.969181   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:20.969181   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:20.969181   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:20.969181   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:20.969181   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:20.969181  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:20.969181  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:20.969181  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:20.969181  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:20.969181  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:20.969181  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:20.969181  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:20.969181  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:20.969181  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:20.969181  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.969181  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:20.969181  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.969181  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:20.969181  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.969181  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:20.969181  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:20.969181  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:20.969181  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:20.969181  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:20.969181  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:20.969181  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:20.969181  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:20.969181  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:20.969181  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:20.969181  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:20.969181  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:20.969181  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:20.969181  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:20.969181  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:20.969181  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:20.969181  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:20.969181  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:20.969181  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:20.969181  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:20.969181  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:20.969181  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:20.969181  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:20.969181  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:20.969181  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:20.969181  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:20.969181  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:20.969181  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:20.969181  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:20.969181  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:20.969181  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:20.969181  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:20.969181  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:20.969181  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:20.969181  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:20.969181  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:20.969181  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:20.969181  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:20.969181  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:20.969181  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:20.969181  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:20.969181  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:20.969181  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:20.969181  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:20.969181  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:20.969181  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:20.969181  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:20.969181  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:20.969181  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:20.969181  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:20.969181  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:20.969181  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:20.969181  76:     e                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:20.969181  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:20.969181  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:20.969181  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:20.969181  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:20.969181  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:20.969181  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:20.969181  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:20.969181  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:20.969181  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:20.969181  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:20.969181  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:20.969181  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:20.969181  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:20.969181  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:20.969181  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:20.969181  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:20.969181  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:20.969181  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:20.969181  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:20.969181  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:20.969181  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:20.969181  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:20.969181  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:20.969181 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:20.969181 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:20.969181 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:20.969181 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:20.969181 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:20.969181 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:20.969181 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:20.969181 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:20.969181 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:20.969181 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:20.969181 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:20.969181 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:20.969181 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:20.969181 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:20.969181 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:20.969181 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:20.969181 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:20.969181 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:20.969181 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:20.969181 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:20.969181 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:20.969181 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:20.969181 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:20.969181 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:20.969181 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:20.969181 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:20.969181 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:20.969181 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:20.969181 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:20.969181 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:20.969181 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:20.969181 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:20.969181 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:20.969181 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:20.969181 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:20.969181 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:20.969181 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:20.969181 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:20.969181 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:20.969181 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:20.969181 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:20.969181 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:20.969181 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:20.969181 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:20.969181 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:20.969181 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:20.969181 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:20.969181 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:20.969181 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:20.969181 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:20.969181 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:20.969181 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:20.969181 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:20.969181 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:20.969181 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:20.969181 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:20.969181 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:20.969181 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:20.969181 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:20.969181 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:20.969181 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:20.969181 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:20.969181 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:20.969181 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:20.969181 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:20.969181 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:20.969181 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@6)[0m
17:38:20.969181 [92m                 textDocument/didChange:             > 76:4-76:4 -> "e"[0m
17:38:20.969181 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:20.969181 OUT Elapsed: 0s
17:38:20.969181 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:20.969181 IN Elapsed: 0s
17:38:20.969181 [92mIDE --> LS REQU textDocument/completion 4[0m
17:38:20.969181 [92m                textDocument/completion 4: [93mread-locked[0m[0m
17:38:20.969181 [92m                textDocument/completion 4: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:20.969181 [92m                textDocument/completion 4: file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:5 -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:5[0m
17:38:20.969181 [91mIDE     LS --> Clangd REQU textDocument/completion 4[0m
17:38:20.969181 OUT Elapsed: 0s
17:38:21.005333 IN Elapsed: 568.5037ms
17:38:21.009913 [31mIDE     LS <-- Clangd RESP textDocument/completion 4[0m
17:38:21.010717 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.011325 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.011830 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.012417 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.013139 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.013139 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.013643 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.014281 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.014858 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.015363 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.015998 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.016503 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.017324 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.017829 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.019182 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.020009 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.020517 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.020779 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.021514 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.022020 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.022020 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.023787 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.024299 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.024299 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.025494 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.026385 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.026992 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.027592 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.028101 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.028620 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.029312 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.029818 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.030469 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.031370 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.031968 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.032473 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.033544 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.034056 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.034349 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.034855 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.035288 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.035288 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.035982 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.036784 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.037290 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.038297 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.038804 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.039264 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.039972 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.040636 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.041144 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.042295 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.042964 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.042964 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.043581 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.044221 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.044831 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.044831 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.045394 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.046425 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.046425 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.047903 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.048475 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.048982 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.049603 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.050213 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.050719 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.050828 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.051334 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.051871 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.051967 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.052591 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.052591 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.052591 [92m                textDocument/completion 4: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:38:21.053178 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:38:21.053178 [92m                textDocument/completion 4:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:38:21.053178 [92m                textDocument/completion 4: converted to:[0m
17:38:21.053178 [92m                textDocument/completion 4:   file:///not-ino ino/textEdit (1 elements)[0m
17:38:21.053178 [92m                textDocument/completion 4:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:38:21.053682 [92m                textDocument/completion 4: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.053682 [92m                textDocument/completion 4: <-- completion(74 items)[0m
17:38:21.053682 [92m                textDocument/completion 4: [93mread-unlocked[0m[0m
17:38:21.053789 [32mIDE <-- LS RESP textDocument/completion 4[0m
17:38:21.053789 OUT Elapsed: 0s
17:38:21.056773 IN Elapsed: 46.8598ms
17:38:21.056773 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:21.056773 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:21.056773 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:38:21.056773 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "unknown_typename"[0m
17:38:21.057294 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:5 (.ino)[0m
17:38:21.057294 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:21.057294 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:38:21.057294 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "unknown_typename"[0m
17:38:21.057856 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:21.057856 OUT Elapsed: 0s
17:38:21.057856 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:21.104506 IN Elapsed: 50.7165ms
17:38:21.110643 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:21.110643 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:21.110872 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@8)[0m
17:38:21.110872 [92m                 textDocument/didChange:   > 63:5-63:5 (len=0) -> "t"[0m
17:38:21.114195 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    et
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:21.115061 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:21.116977 Ino Range: 63:5-63:5 -> Cpp Range:76:5-76:5
17:38:21.117047   > Current sketchmapper content:
17:38:21.117047   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:21.117047   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:21.117047   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:21.117047   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:21.117047   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:21.117047   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:21.117047   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:21.117047   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:21.117047   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:21.117047   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:21.117047  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:21.117047  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:21.117047  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:21.117047  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:21.117047  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:21.117047  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:21.117047  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:21.117047  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:21.117047  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:21.117047  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.117047  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:21.117047  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.117047  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:21.117047  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.117047  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:21.117047  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.117047  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:21.117047  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:21.117047  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:21.117047  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:21.117047  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:21.117047  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:21.117047  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:21.117047  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:21.117047  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:21.117047  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:21.117047  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:21.117047  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:21.117047  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:21.117047  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:21.117047  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:21.117047  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:21.117047  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:21.117047  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:21.117047  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:21.117047  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:21.117047  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:21.117047  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:21.117047  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:21.117047  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:21.117047  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:21.117047  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:21.117047  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:21.117047  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:21.117047  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:21.117047  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:21.117047  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:21.117047  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:21.117047  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:21.117047  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:21.117047  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:21.117047  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:21.117047  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:21.117047  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:21.117047  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:21.117047  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:21.117047  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:21.117047  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:21.117047  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:21.117047  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:21.117047  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:21.117047  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:21.117047  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:21.117047  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:21.117047  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:21.117047  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:21.117688  76:     et                                                       | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:21.117688  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:21.117688  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:21.117688  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:21.117688  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:21.117688  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:21.117688  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:21.117688  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:21.117756  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:21.117756  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:21.117756  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:21.117756  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:21.117756  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:21.117756  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:21.117756  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:21.117756  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:21.117756  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:21.117756  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:21.117756  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:21.117756  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:21.117756  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:21.117756  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:21.117756  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:21.117756  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:21.117756 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:21.117756 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:21.117756 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:21.117756 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:21.117756 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:21.117756 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:21.117756 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:21.117756 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:21.117756 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:21.117756 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:21.117756 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:21.117756 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:21.117756 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:21.117756 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:21.117756 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:21.117756 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:21.117756 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:21.117756 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:21.117756 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:21.117756 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:21.117756 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:21.117756 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:21.117756 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:21.117756 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:21.117756 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:21.117756 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:21.117756 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:21.117756 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:21.117756 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:21.117756 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:21.117756 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:21.117756 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:21.117756 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:21.117756 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:21.117756 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:21.117756 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:21.117756 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:21.117756 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:21.117756 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:21.117756 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:21.117756 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:21.117756 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:21.117756 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:21.117756 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:21.117756 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:21.117756 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:21.117756 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:21.117756 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:21.117756 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:21.117756 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:21.117756 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:21.117756 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:21.117756 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:21.117756 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:21.117756 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:21.117756 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:21.117756 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:21.117756 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:21.117756 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:21.117756 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:21.117756 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:21.118367 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:21.118367 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:21.118367 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:21.118367 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:21.118367 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:21.118367 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@7)[0m
17:38:21.118367 [92m                 textDocument/didChange:             > 76:5-76:5 -> "t"[0m
17:38:21.118367 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:21.118367 OUT Elapsed: 0s
17:38:21.118367 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:21.118367 IN Elapsed: 0s
17:38:21.118573 [92mIDE --> LS REQU textDocument/completion 5[0m
17:38:21.118573 [92m                textDocument/completion 5: [93mread-locked[0m[0m
17:38:21.118678 [92m                textDocument/completion 5: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:21.121362 [92m                textDocument/completion 5: file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:6 -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:6[0m
17:38:21.121362 [91mIDE     LS --> Clangd REQU textDocument/completion 5[0m
17:38:21.121362 OUT Elapsed: 0s
17:38:21.145498 IN Elapsed: 88.7249ms
17:38:21.146003 [31mIDE     LS <-- Clangd RESP textDocument/completion 5[0m
17:38:21.146537 [92m                textDocument/completion 5: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:6 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:6 (.ino)[0m
17:38:21.147163 [92m                textDocument/completion 5: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:6 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:6 (.ino)[0m
17:38:21.147163 [92m                textDocument/completion 5: <-- completion(2 items)[0m
17:38:21.147668 [92m                textDocument/completion 5: [93mread-unlocked[0m[0m
17:38:21.147668 [32mIDE <-- LS RESP textDocument/completion 5[0m
17:38:21.147668 OUT Elapsed: 0s
17:38:21.203672 IN Elapsed: 58.1739ms
17:38:21.203733 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:21.203733 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:21.203733 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:38:21.203733 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "unknown_typename"[0m
17:38:21.204302 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:6 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:6 (.ino)[0m
17:38:21.204830 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:21.204830 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:38:21.204830 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "unknown_typename"[0m
17:38:21.204830 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:21.204830 OUT Elapsed: 0s
17:38:21.204830 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:21.288422 IN Elapsed: 140.754ms
17:38:21.288702 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:21.288773 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:21.288773 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@9)[0m
17:38:21.288773 [92m                 textDocument/didChange:   > 63:6-63:6 (len=0) -> "p"[0m
17:38:21.289511 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    etp
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:21.289511 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:21.291510 Ino Range: 63:6-63:6 -> Cpp Range:76:6-76:6
17:38:21.291510   > Current sketchmapper content:
17:38:21.291510   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:21.291510   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:21.291510   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:21.291510   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:21.291510   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:21.291510   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:21.291510   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:21.291510   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:21.291510   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:21.291510   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:21.291510  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:21.291510  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:21.291510  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:21.291510  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:21.291510  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:21.291510  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:21.291510  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:21.291510  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:21.291510  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:21.291510  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.291510  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:21.291510  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.291510  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:21.291510  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.291510  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:21.291510  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.291510  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:21.291510  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:21.291510  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:21.291510  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:21.291510  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:21.291510  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:21.291510  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:21.291510  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:21.291510  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:21.291510  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:21.291510  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:21.291510  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:21.291510  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:21.291510  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:21.291510  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:21.291510  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:21.291510  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:21.291510  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:21.291510  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:21.291510  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:21.291510  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:21.291510  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:21.291510  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:21.291510  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:21.291510  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:21.291510  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:21.291510  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:21.291510  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:21.291510  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:21.291510  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:21.291510  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:21.291510  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:21.291510  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:21.291510  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:21.291510  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:21.291510  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:21.291510  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:21.291510  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:21.291510  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:21.291510  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:21.291510  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:21.291510  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:21.291510  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:21.291510  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:21.291510  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:21.291510  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:21.291510  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:21.291510  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:21.291510  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:21.291510  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:21.291510  76:     etp                                                      | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:21.291510  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:21.291510  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:21.291510  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:21.291510  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:21.291510  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:21.291510  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:21.291510  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:21.291510  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:21.291510  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:21.291510  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:21.291510  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:21.291510  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:21.291510  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:21.293215  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:21.293215  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:21.293215  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:21.293215  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:21.293215  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:21.293215  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:21.293215  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:21.293215  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:21.293215  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:21.293215  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:21.293215 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:21.293215 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:21.293215 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:21.293215 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:21.293215 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:21.293215 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:21.293215 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:21.293215 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:21.293215 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:21.293215 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:21.293215 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:21.293407 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:21.293407 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:21.293407 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:21.293407 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:21.293407 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:21.293407 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:21.293407 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:21.293407 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:21.293407 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:21.293407 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:21.293407 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:21.293407 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:21.293407 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:21.293407 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:21.293407 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:21.293407 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:21.293407 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:21.293407 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:21.293407 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:21.293407 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:21.293407 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:21.293407 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:21.293407 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:21.293407 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:21.293407 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:21.293407 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:21.293407 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:21.293407 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:21.293407 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:21.293407 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:21.293407 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:21.293407 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:21.293407 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:21.293407 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:21.293407 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:21.293407 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:21.293407 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:21.293407 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:21.293407 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:21.293407 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:21.293407 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:21.293407 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:21.293407 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:21.293407 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:21.293407 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:21.293407 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:21.293407 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:21.293407 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:21.293407 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:21.293407 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:21.293407 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:21.293407 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:21.293407 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:21.293407 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:21.293407 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:21.293925 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@8)[0m
17:38:21.293925 [92m                 textDocument/didChange:             > 76:6-76:6 -> "p"[0m
17:38:21.293925 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:21.293925 OUT Elapsed: 0s
17:38:21.293925 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:21.293925 IN Elapsed: 0s
17:38:21.293925 [92mIDE --> LS REQU textDocument/completion 6[0m
17:38:21.293925 [92m                textDocument/completion 6: [93mread-locked[0m[0m
17:38:21.294481 [92m                textDocument/completion 6: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:21.295499 [92m                textDocument/completion 6: file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:7 -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:7[0m
17:38:21.296478 [91mIDE     LS --> Clangd REQU textDocument/completion 6[0m
17:38:21.296478 OUT Elapsed: 0s
17:38:21.331938 IN Elapsed: 128.2044ms
17:38:21.332449 [31mIDE     LS <-- Clangd RESP textDocument/completion 6[0m
17:38:21.332978 [92m                textDocument/completion 6: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:7 (.ino)[0m
17:38:21.333105 [92m                textDocument/completion 6: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:7 (.ino)[0m
17:38:21.333774 [92m                textDocument/completion 6: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:7 (.ino)[0m
17:38:21.334372 [92m                textDocument/completion 6: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:7 (.ino)[0m
17:38:21.335527 [92m                textDocument/completion 6: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:7 (.ino)[0m
17:38:21.336037 [92m                textDocument/completion 6: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:7 (.ino)[0m
17:38:21.336695 [92m                textDocument/completion 6: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:7 (.ino)[0m
17:38:21.336695 [92m                textDocument/completion 6: <-- completion(7 items)[0m
17:38:21.336695 [92m                textDocument/completion 6: [93mread-unlocked[0m[0m
17:38:21.336695 [32mIDE <-- LS RESP textDocument/completion 6[0m
17:38:21.336695 OUT Elapsed: 0s
17:38:21.399250 IN Elapsed: 66.8007ms
17:38:21.399250 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:21.400037 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:21.400037 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (2 diagnostics):[0m
17:38:21.400037 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "undeclared_var_use_suggest"[0m
17:38:21.400037 [91m                            textDocument/publishDiagnostics:   > 77:4 - Error: "expected_semi_after_expr"[0m
17:38:21.400674 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:7 (.ino)[0m
17:38:21.401718 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/math.h:248:14-248:17 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/math.h:248:14-248:17 (ext file)[0m
17:38:21.402267 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:77:4-77:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:64:4-64:7 (.ino)[0m
17:38:21.402815 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:21.402815 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (2 diagnostics):[0m
17:38:21.402815 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "undeclared_var_use_suggest"[0m
17:38:21.402815 [91m                            textDocument/publishDiagnostics:     > 64:4 - Error: "expected_semi_after_expr"[0m
17:38:21.402815 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:21.402815 OUT Elapsed: 0s
17:38:21.402815 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:21.809851 IN Elapsed: 473.1563ms
17:38:21.813346 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:21.813346 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:21.813346 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@10)[0m
17:38:21.813579 [92m                 textDocument/didChange:   > 63:6-63:7 (len=1) -> ""[0m
17:38:21.813844 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    et
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:21.814575 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:21.816854 Ino Range: 63:6-63:7 -> Cpp Range:76:6-76:7
17:38:21.816854   > Current sketchmapper content:
17:38:21.816854   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:21.816854   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:21.816854   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:21.816854   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:21.816854   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:21.816854   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:21.816854   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:21.816854   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:21.816854   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:21.817421   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:21.817421  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:21.817421  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:21.817421  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:21.817421  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:21.817421  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:21.817421  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:21.817421  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:21.817421  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:21.817421  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:21.817421  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.817421  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:21.817421  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.817421  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:21.817421  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.817421  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:21.817421  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:21.817421  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:21.817421  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:21.817421  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:21.817421  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:21.817421  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:21.817421  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:21.817421  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:21.817421  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:21.817421  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:21.817421  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:21.817421  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:21.817421  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:21.817421  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:21.817421  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:21.817421  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:21.817421  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:21.817421  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:21.817421  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:21.817421  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:21.817421  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:21.817421  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:21.817421  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:21.817421  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:21.817421  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:21.817421  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:21.817421  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:21.817421  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:21.817421  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:21.817421  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:21.817421  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:21.817421  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:21.817421  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:21.817421  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:21.817421  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:21.817421  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:21.817421  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:21.817421  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:21.817421  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:21.817421  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:21.817421  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:21.817421  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:21.817421  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:21.817421  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:21.817421  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:21.817421  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:21.817421  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:21.817421  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:21.817421  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:21.817421  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:21.817421  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:21.817421  76:     et                                                       | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:21.817421  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:21.817421  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:21.817421  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:21.817421  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:21.817421  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:21.817421  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:21.817421  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:21.817421  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:21.817421  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:21.817421  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:21.817421  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:21.817421  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:21.817421  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:21.817421  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:21.817421  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:21.817421  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:21.817421  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:21.817421  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:21.817421  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:21.817421  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:21.817421  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:21.817421  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:21.817421  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:21.817421 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:21.817421 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:21.817421 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:21.817421 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:21.817421 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:21.817421 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:21.817421 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:21.817421 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:21.817421 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:21.817421 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:21.817421 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:21.817421 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:21.817421 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:21.817421 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:21.817421 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:21.817421 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:21.817421 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:21.817421 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:21.817421 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:21.817421 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:21.817421 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:21.817421 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:21.817421 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:21.817421 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:21.817421 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:21.817421 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:21.817421 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:21.817421 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:21.817421 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:21.817421 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:21.817421 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:21.817421 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:21.817421 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:21.817421 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:21.817421 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:21.817421 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:21.817421 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:21.817421 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:21.817421 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:21.817421 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:21.817421 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:21.817421 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:21.817421 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:21.817421 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:21.817421 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:21.817421 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:21.817421 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:21.817421 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:21.817421 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:21.817421 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:21.817421 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:21.817421 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:21.817421 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:21.817421 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:21.817421 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:21.817421 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:21.817421 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:21.817421 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:21.817421 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:21.817421 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:21.817421 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:21.817421 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:21.817421 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:21.817421 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:21.817421 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:21.817421 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:21.817421 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@9)[0m
17:38:21.817421 [92m                 textDocument/didChange:             > 76:6-76:7 -> ""[0m
17:38:21.817421 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:21.821108 OUT Elapsed: 3.6871ms
17:38:21.821108 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:21.896789 IN Elapsed: 497.5385ms
17:38:21.896789 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:21.896789 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:21.896789 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:38:21.896789 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "unknown_typename"[0m
17:38:21.897298 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:6 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:6 (.ino)[0m
17:38:21.897953 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:21.897953 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:38:21.897953 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "unknown_typename"[0m
17:38:21.897953 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:21.897953 OUT Elapsed: 0s
17:38:21.897953 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:22.221574 IN Elapsed: 400.4663ms
17:38:22.221574 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:22.221574 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:22.221574 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@11)[0m
17:38:22.221574 [92m                 textDocument/didChange:   > 63:6-63:6 (len=0) -> "P"[0m
17:38:22.229432 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    etP
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:22.229432 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:22.232480 Ino Range: 63:6-63:6 -> Cpp Range:76:6-76:6
17:38:22.232480   > Current sketchmapper content:
17:38:22.232480   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:22.232634   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:22.232634   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:22.232634   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:22.232634   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:22.232634   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:22.232634   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:22.232634   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:22.232634   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:22.232634   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:22.232634  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:22.232634  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:22.232634  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:22.232634  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:22.232634  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:22.232634  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:22.232634  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:22.232634  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:22.232634  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:22.232634  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.232634  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:22.232634  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.232634  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:22.232634  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.232634  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:22.232634  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.232634  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:22.232634  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:22.232634  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:22.232634  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:22.232634  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:22.232634  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:22.232634  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:22.232634  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:22.232634  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:22.232634  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:22.232634  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:22.232634  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:22.232634  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:22.232634  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:22.232634  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:22.232634  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:22.232634  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:22.232634  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:22.232634  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:22.232634  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:22.232634  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:22.232634  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:22.232634  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:22.232634  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:22.232634  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:22.232634  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:22.232634  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:22.232634  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:22.232634  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:22.232634  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:22.232634  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:22.232634  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:22.232634  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:22.233198  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:22.233198  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:22.233198  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:22.233198  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:22.233252  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:22.233252  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:22.233252  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:22.233252  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:22.233252  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:22.233252  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:22.233252  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:22.233252  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:22.233252  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:22.233252  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:22.233252  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:22.233252  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:22.233252  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:22.233252  76:     etP                                                      | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:22.233252  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:22.233252  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:22.233252  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:22.233252  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:22.233252  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:22.233252  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:22.233252  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:22.233252  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:22.233252  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:22.233252  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:22.233252  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:22.233252  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:22.233252  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:22.233252  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:22.233252  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:22.233252  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:22.233252  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:22.233252  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:22.233252  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:22.233252  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:22.233252  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:22.233252  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:22.233252  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:22.233252 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:22.233252 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:22.233252 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:22.233252 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:22.233252 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:22.233252 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:22.233252 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:22.233252 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:22.233252 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:22.233252 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:22.233252 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:22.233252 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:22.233252 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:22.233252 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:22.233252 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:22.233252 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:22.233252 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:22.233252 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:22.233252 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:22.233252 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:22.233252 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:22.233252 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:22.233815 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:22.233815 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:22.233815 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:22.233815 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:22.233815 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:22.233815 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:22.233815 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:22.233815 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:22.233815 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:22.233815 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:22.233815 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:22.233815 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:22.233815 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:22.233815 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:22.233966 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:22.233966 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:22.233966 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:22.233966 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:22.233966 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:22.233966 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:22.233966 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:22.233966 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:22.233966 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:22.233966 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:22.233966 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:22.233966 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:22.233966 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:22.233966 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:22.233966 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:22.233966 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:22.233966 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:22.233966 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:22.233966 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:22.233966 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:22.233966 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:22.233966 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:22.233966 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:22.233966 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:22.233966 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:22.233966 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:22.233966 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:22.233966 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:22.233966 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:22.233966 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:22.233966 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@10)[0m
17:38:22.233966 [92m                 textDocument/didChange:             > 76:6-76:6 -> "P"[0m
17:38:22.233966 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:22.233966 OUT Elapsed: 0s
17:38:22.233966 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:22.306191 IN Elapsed: 409.4024ms
17:38:22.306191 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:22.306191 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:22.306191 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:38:22.306191 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "unknown_typename"[0m
17:38:22.306191 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:7 (.ino)[0m
17:38:22.311208 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:22.311208 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:38:22.311208 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "unknown_typename"[0m
17:38:22.311208 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:22.311208 OUT Elapsed: 0s
17:38:22.311208 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:22.455711 IN Elapsed: 221.7456ms
17:38:22.455711 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:22.455711 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:22.455711 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@12)[0m
17:38:22.455711 [92m                 textDocument/didChange:   > 63:7-63:7 (len=0) -> "H"[0m
17:38:22.455711 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    etPH
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:22.455711 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:22.461243 Ino Range: 63:7-63:7 -> Cpp Range:76:7-76:7
17:38:22.461243   > Current sketchmapper content:
17:38:22.461243   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:22.461243   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:22.461243   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:22.461243   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:22.461243   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:22.461243   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:22.461243   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:22.461243   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:22.461243   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:22.461243   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:22.461243  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:22.461243  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:22.461243  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:22.461243  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:22.461243  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:22.461243  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:22.461243  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:22.461243  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:22.461243  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:22.461243  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.461243  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:22.461243  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.461243  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:22.461243  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.461243  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:22.461243  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.463770  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:22.463770  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:22.463770  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:22.463770  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:22.463770  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:22.463770  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:22.463770  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:22.463770  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:22.463770  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:22.463770  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:22.463770  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:22.463770  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:22.463770  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:22.463770  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:22.463770  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:22.463770  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:22.463770  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:22.463770  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:22.463770  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:22.463770  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:22.463770  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:22.463770  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:22.463770  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:22.463770  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:22.463770  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:22.463770  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:22.463770  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:22.463770  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:22.463770  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:22.463770  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:22.463770  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:22.463770  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:22.463770  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:22.463770  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:22.463770  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:22.463770  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:22.463770  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:22.463770  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:22.463770  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:22.463770  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:22.463770  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:22.463770  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:22.463770  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:22.463770  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:22.463770  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:22.463770  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:22.463770  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:22.463770  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:22.463770  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:22.463770  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:22.463770  76:     etPH                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:22.463770  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:22.463770  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:22.463770  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:22.463770  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:22.463770  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:22.463770  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:22.463770  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:22.463770  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:22.463770  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:22.463770  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:22.463770  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:22.463770  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:22.463770  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:22.463770  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:22.463770  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:22.463770  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:22.463770  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:22.463770  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:22.463770  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:22.463770  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:22.463770  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:22.463770  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:22.463770  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:22.463770 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:22.463770 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:22.463770 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:22.463770 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:22.463770 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:22.463770 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:22.463770 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:22.463770 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:22.463770 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:22.463770 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:22.463770 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:22.463770 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:22.463770 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:22.463770 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:22.463770 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:22.463770 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:22.463770 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:22.463770 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:22.463770 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:22.463770 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:22.463770 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:22.463770 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:22.463770 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:22.463770 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:22.463770 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:22.463770 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:22.463770 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:22.463770 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:22.463770 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:22.463770 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:22.463770 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:22.463770 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:22.463770 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:22.463770 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:22.463770 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:22.463770 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:22.464866 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:22.464866 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:22.464866 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:22.464866 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:22.464866 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:22.464866 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:22.464947 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:22.464947 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:22.464947 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:22.464947 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:22.464947 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:22.464947 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:22.464947 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:22.464947 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:22.464947 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:22.464947 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:22.464947 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:22.464947 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:22.464947 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:22.464947 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:22.464947 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:22.464947 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:22.464947 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:22.464947 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:22.464947 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:22.464947 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:22.464947 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:22.464947 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:22.464947 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:22.464947 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:22.464947 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@11)[0m
17:38:22.464947 [92m                 textDocument/didChange:             > 76:7-76:7 -> "H"[0m
17:38:22.464947 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:22.464947 OUT Elapsed: 0s
17:38:22.464947 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:22.549441 IN Elapsed: 243.2504ms
17:38:22.549441 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:22.551966 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:22.551966 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:38:22.551966 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "unknown_typename"[0m
17:38:22.554127 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:8 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:8 (.ino)[0m
17:38:22.554127 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:22.554127 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:38:22.554127 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "unknown_typename"[0m
17:38:22.554127 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:22.554127 OUT Elapsed: 0s
17:38:22.554127 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:22.633876 IN Elapsed: 168.9293ms
17:38:22.633876 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:22.633876 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:22.633876 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@13)[0m
17:38:22.633876 [92m                 textDocument/didChange:   > 63:8-63:8 (len=0) -> "O"[0m
17:38:22.634551 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    etPHO
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:22.635363 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:22.637709 Ino Range: 63:8-63:8 -> Cpp Range:76:8-76:8
17:38:22.637709   > Current sketchmapper content:
17:38:22.637709   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:22.637709   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:22.637709   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:22.637709   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:22.637709   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:22.637709   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:22.637709   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:22.637709   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:22.637709   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:22.637709   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:22.637709  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:22.637709  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:22.637709  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:22.637709  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:22.637709  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:22.637709  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:22.637709  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:22.637709  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:22.637709  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:22.637709  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.637709  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:22.637709  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.637709  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:22.637709  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.637709  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:22.637709  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.637709  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:22.637709  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:22.637709  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:22.637709  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:22.637709  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:22.637709  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:22.637709  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:22.637709  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:22.637709  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:22.637709  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:22.637709  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:22.637709  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:22.637709  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:22.637709  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:22.637709  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:22.638222  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:22.638222  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:22.638222  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:22.638222  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:22.638222  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:22.638222  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:22.638222  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:22.638222  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:22.638222  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:22.638222  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:22.638222  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:22.638222  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:22.638222  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:22.638222  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:22.638222  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:22.638222  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:22.638222  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:22.638222  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:22.638222  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:22.638372  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:22.638372  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:22.638372  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:22.638372  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:22.638372  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:22.638372  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:22.638372  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:22.638372  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:22.638372  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:22.638372  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:22.638372  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:22.638372  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:22.638372  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:22.638372  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:22.638372  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:22.638372  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:22.638372  76:     etPHO                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:22.638372  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:22.638372  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:22.638372  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:22.638372  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:22.638372  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:22.638372  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:22.638372  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:22.638372  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:22.638372  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:22.638372  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:22.638372  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:22.638372  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:22.638372  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:22.638372  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:22.638372  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:22.638372  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:22.638372  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:22.638372  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:22.638372  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:22.638372  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:22.638372  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:22.638372  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:22.638372  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:22.638372 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:22.638372 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:22.638372 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:22.638372 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:22.638372 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:22.638372 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:22.638372 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:22.638372 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:22.638372 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:22.638372 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:22.638372 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:22.638372 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:22.638372 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:22.638372 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:22.638372 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:22.638372 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:22.638883 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:22.638883 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:22.638883 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:22.638883 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:22.638883 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:22.638883 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:22.638883 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:22.638883 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:22.638883 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:22.638883 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:22.638883 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:22.638883 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:22.638883 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:22.638883 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:22.638883 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:22.639024 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:22.639024 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:22.639024 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:22.639024 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:22.639024 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:22.639024 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:22.639024 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:22.639024 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:22.639024 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:22.639024 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:22.639024 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:22.639024 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:22.639024 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:22.639024 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:22.639024 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:22.639024 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:22.639024 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:22.639024 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:22.639024 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:22.639024 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:22.639024 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:22.639024 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:22.639024 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:22.639024 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:22.639024 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:22.639535 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:22.639535 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:22.639535 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:22.639535 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:22.639535 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:22.639535 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:22.639535 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:22.639535 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:22.639535 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:22.639535 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:22.639535 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@12)[0m
17:38:22.639535 [92m                 textDocument/didChange:             > 76:8-76:8 -> "O"[0m
17:38:22.639535 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:22.639535 OUT Elapsed: 0s
17:38:22.639535 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:22.716663 IN Elapsed: 167.222ms
17:38:22.716663 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:22.716663 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:22.716663 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:38:22.716663 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "unknown_typename"[0m
17:38:22.716663 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:9 (.ino)[0m
17:38:22.720236 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:22.720236 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:38:22.720236 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "unknown_typename"[0m
17:38:22.720236 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:22.720236 OUT Elapsed: 0s
17:38:22.720236 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:22.977311 IN Elapsed: 337.7764ms
17:38:22.978859 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:22.978987 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:22.978987 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@14)[0m
17:38:22.978987 [92m                 textDocument/didChange:   > 63:8-63:9 (len=1) -> ""[0m
17:38:22.978987 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    etPH
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:22.978987 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:22.983770 Ino Range: 63:8-63:9 -> Cpp Range:76:8-76:9
17:38:22.983770   > Current sketchmapper content:
17:38:22.983934   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:22.983934   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:22.983934   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:22.983934   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:22.983934   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:22.983934   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:22.983934   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:22.983934   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:22.983934   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:22.983934   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:22.983934  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:22.983934  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:22.983934  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:22.983934  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:22.983934  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:22.983934  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:22.983934  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:22.983934  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:22.983934  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:22.983934  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.983934  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:22.983934  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.983934  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:22.983934  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.983934  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:22.983934  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:22.983934  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:22.983934  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:22.983934  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:22.983934  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:22.983934  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:22.983934  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:22.983934  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:22.983934  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:22.983934  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:22.983934  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:22.983934  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:22.983934  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:22.983934  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:22.983934  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:22.983934  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:22.983934  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:22.983934  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:22.983934  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:22.983934  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:22.983934  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:22.984497  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:22.984497  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:22.984497  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:22.984497  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:22.984497  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:22.984497  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:22.984497  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:22.984497  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:22.984497  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:22.984497  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:22.984497  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:22.984497  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:22.984497  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:22.984497  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:22.984497  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:22.984497  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:22.984497  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:22.984497  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:22.984497  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:22.984497  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:22.984497  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:22.984497  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:22.984497  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:22.984497  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:22.984497  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:22.984497  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:22.984497  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:22.984497  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:22.984497  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:22.984497  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:22.984497  76:     etPH                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:22.984497  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:22.984497  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:22.984497  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:22.984497  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:22.984497  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:22.984497  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:22.984497  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:22.984497  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:22.984497  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:22.984497  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:22.984497  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:22.984497  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:22.984497  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:22.984497  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:22.984497  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:22.984497  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:22.984497  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:22.984497  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:22.984497  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:22.984497  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:22.984497  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:22.984497  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:22.984497  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:22.984497 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:22.984497 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:22.984497 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:22.984497 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:22.984497 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:22.984497 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:22.984497 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:22.984497 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:22.984497 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:22.984497 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:22.984497 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:22.984497 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:22.984497 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:22.984497 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:22.984497 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:22.984497 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:22.984497 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:22.984497 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:22.984497 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:22.984497 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:22.984497 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:22.984497 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:22.984497 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:22.984497 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:22.984497 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:22.985239 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:22.985239 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:22.985239 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:22.985239 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:22.985239 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:22.985239 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:22.985239 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:22.985239 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:22.985239 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:22.985239 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:22.985239 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:22.985239 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:22.985239 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:22.985239 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:22.985239 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:22.985239 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:22.985239 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:22.985239 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:22.985239 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:22.985239 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:22.985239 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:22.985239 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:22.985239 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:22.985239 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:22.985239 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:22.985239 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:22.985239 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:22.985239 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:22.985239 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:22.985239 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:22.985239 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:22.985239 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:22.985239 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:22.985239 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:22.985239 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:22.985239 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:22.985239 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:22.985239 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:22.985239 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:22.985239 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:22.985239 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:22.985239 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@13)[0m
17:38:22.985239 [92m                 textDocument/didChange:             > 76:8-76:9 -> ""[0m
17:38:22.985239 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:22.985239 OUT Elapsed: 0s
17:38:22.985239 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:23.070852 IN Elapsed: 354.1883ms
17:38:23.070852 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:23.070852 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:23.070852 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:38:23.070852 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "unknown_typename"[0m
17:38:23.071423 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:8 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:8 (.ino)[0m
17:38:23.071938 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:23.071938 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:38:23.072003 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "unknown_typename"[0m
17:38:23.072003 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:23.072003 OUT Elapsed: 0s
17:38:23.072003 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:23.114648 IN Elapsed: 129.409ms
17:38:23.116841 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:23.116841 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:23.116841 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@15)[0m
17:38:23.116841 [92m                 textDocument/didChange:   > 63:7-63:8 (len=1) -> ""[0m
17:38:23.117351 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    etP
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:23.117351 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:23.118459 Ino Range: 63:7-63:8 -> Cpp Range:76:7-76:8
17:38:23.118459   > Current sketchmapper content:
17:38:23.118459   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:23.118459   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:23.118459   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:23.118459   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:23.118459   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:23.118459   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:23.118459   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:23.118459   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:23.118459   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:23.118459   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:23.118459  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:23.118459  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:23.118459  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:23.118459  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:23.118459  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:23.118459  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:23.118459  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:23.118459  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:23.118459  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:23.118459  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.118459  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:23.118459  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.118459  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:23.118459  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.118459  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:23.118459  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.118459  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:23.118459  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:23.118459  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:23.118459  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:23.118459  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:23.118459  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:23.118459  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:23.118459  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:23.118459  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:23.118459  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:23.118459  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:23.118459  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:23.118459  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:23.118459  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:23.118968  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:23.118968  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:23.118968  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:23.118968  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:23.118968  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:23.118968  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:23.118968  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:23.118968  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:23.118968  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:23.118968  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:23.118968  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:23.118968  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:23.118968  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:23.118968  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:23.118968  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:23.118968  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:23.118968  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:23.118968  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:23.118968  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:23.118968  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:23.118968  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:23.118968  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:23.118968  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:23.118968  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:23.118968  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:23.118968  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:23.118968  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:23.118968  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:23.118968  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:23.118968  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:23.118968  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:23.118968  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:23.118968  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:23.118968  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:23.118968  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:23.118968  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:23.118968  76:     etP                                                      | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:23.118968  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:23.118968  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:23.118968  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:23.118968  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:23.118968  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:23.118968  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:23.118968  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:23.118968  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:23.118968  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:23.118968  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:23.118968  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:23.118968  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:23.118968  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:23.118968  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:23.118968  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:23.118968  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:23.118968  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:23.118968  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:23.118968  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:23.118968  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:23.118968  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:23.118968  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:23.118968  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:23.118968 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:23.118968 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:23.118968 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:23.118968 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:23.118968 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:23.118968 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:23.118968 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:23.118968 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:23.118968 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:23.118968 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:23.118968 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:23.118968 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:23.118968 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:23.118968 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:23.118968 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:23.118968 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:23.118968 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:23.118968 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:23.118968 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:23.119603 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:23.119683 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:23.119683 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:23.119683 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:23.119683 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:23.119683 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:23.119683 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:23.119683 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:23.119683 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:23.119683 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:23.119683 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:23.119683 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:23.119683 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:23.119683 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:23.119683 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:23.119683 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:23.119683 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:23.119683 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:23.119683 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:23.119683 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:23.119683 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:23.119683 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:23.119683 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:23.119683 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:23.119683 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:23.119683 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:23.119683 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:23.119683 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:23.119683 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:23.119683 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:23.119683 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:23.119683 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:23.119683 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:23.119683 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:23.119683 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:23.119683 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:23.119683 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:23.119683 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:23.119683 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:23.119683 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:23.119683 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:23.119683 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:23.119683 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:23.119683 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:23.119683 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:23.119683 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:23.119683 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:23.119683 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@14)[0m
17:38:23.119683 [92m                 textDocument/didChange:             > 76:7-76:8 -> ""[0m
17:38:23.119683 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:23.119683 OUT Elapsed: 0s
17:38:23.119683 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:23.198723 IN Elapsed: 127.8709ms
17:38:23.201915 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:23.201915 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:23.201915 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:38:23.201915 [91m                            textDocument/publishDiagnostics:   > 76:4 - Error: "unknown_typename"[0m
17:38:23.202423 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:76:4-76:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:63:4-63:7 (.ino)[0m
17:38:23.202948 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:23.203483 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:38:23.203483 [91m                            textDocument/publishDiagnostics:     > 63:4 - Error: "unknown_typename"[0m
17:38:23.203483 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:23.203483 OUT Elapsed: 0s
17:38:23.203483 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:23.471447 IN Elapsed: 351.7638ms
17:38:23.471447 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:23.471447 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:23.471447 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@16)[0m
17:38:23.471447 [92m                 textDocument/didChange:   > 63:4-63:7 (len=3) -> ""[0m
17:38:23.471703 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:23.472253 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:23.473662 Ino Range: 63:4-63:7 -> Cpp Range:76:4-76:7
17:38:23.473662   > Current sketchmapper content:
17:38:23.473662   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:23.473662   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:23.473662   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:23.473662   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:23.473662   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:23.473662   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:23.473662   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:23.473662   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:23.473662   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:23.473662   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:23.473662  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:23.473662  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:23.473662  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:23.473662  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:23.473662  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:23.473662  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:23.473662  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:23.473662  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:23.473662  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:23.473662  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.473662  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:23.473662  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.473662  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:23.473662  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.473662  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:23.473662  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.473662  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:23.473662  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:23.473662  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:23.473662  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:23.473662  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:23.473662  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:23.473662  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:23.473662  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:23.473662  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:23.473662  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:23.473662  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:23.473662  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:23.473662  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:23.473662  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:23.473662  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:23.473662  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:23.473662  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:23.473662  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:23.473662  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:23.473662  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:23.473662  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:23.473662  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:23.473662  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:23.474170  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:23.474170  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:23.475183  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:23.475183  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:23.475183  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:23.475183  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:23.475183  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:23.475183  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:23.475183  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:23.475183  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:23.475183  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:23.475183  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:23.475183  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:23.475183  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:23.475183  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:23.475183  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:23.475183  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:23.475183  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:23.475183  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:23.475183  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:23.475183  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:23.475183  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:23.475183  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:23.475183  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:23.475183  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:23.475183  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:23.475183  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:23.475183  76:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:23.475183  77:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:23.475560  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:23.475560  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:23.475560  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:23.475560  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:23.475560  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:23.475560  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:23.475560  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:23.475560  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:23.475560  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:23.475560  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:23.475560  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:23.475560  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:23.475560  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:23.475560  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:23.475560  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:23.475560  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:23.475560  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:23.475560  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:23.475560  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:23.475560  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:23.475560  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:23.475560  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:23.475560 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:23.475560 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:23.475560 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:23.475560 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:23.475560 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:23.475560 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:23.475560 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:23.475560 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:23.475560 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:23.475560 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:23.475560 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:23.475560 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:23.475560 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:23.475560 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:23.475560 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:23.475560 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:23.475560 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:23.475560 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:23.475560 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:23.475560 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:23.475560 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:23.475560 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:23.475560 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:23.475560 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:23.475560 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:23.475560 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:23.475560 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:23.475560 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:23.475560 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:23.475560 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:23.475560 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:23.475560 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:23.475560 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:23.475560 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:23.475560 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:23.475560 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:23.475560 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:23.475560 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:23.475560 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:23.475560 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:23.475560 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:23.475560 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:23.475560 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:23.475560 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:23.475560 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:23.475560 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:23.475560 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:23.475560 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:23.475560 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:23.475560 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:23.475560 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:23.475560 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:23.475560 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:23.475560 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:23.475560 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:23.475560 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:23.475560 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:23.475560 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:23.475560 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:23.475560 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:23.475560 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:23.475560 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:23.475560 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:23.475560 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:23.475560 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:23.475560 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:23.475560 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@15)[0m
17:38:23.475560 [92m                 textDocument/didChange:             > 76:4-76:7 -> ""[0m
17:38:23.475560 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:23.475560 OUT Elapsed: 0s
17:38:23.475560 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:23.484122 IN Elapsed: 8.5624ms
17:38:23.484122 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:23.484122 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:23.484122 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@17)[0m
17:38:23.484122 [92m                 textDocument/didChange:   > 63:0-64:0 (len=5) -> ""[0m
17:38:23.484666 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:23.484666 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:23.484666 Ino Range: 63:0-64:0 -> Cpp Range:76:0-77:0
17:38:23.484666   > Current sketchmapper content:
17:38:23.484666   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:23.484666   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:23.484666   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:23.484666   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:23.484666   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:23.484666   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:23.484666   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:23.484666   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:23.484666   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:23.484666   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:23.484666  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:23.484666  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:23.484666  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:23.484666  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:23.484666  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:23.484666  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:23.484666  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:23.484666  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:23.484666  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:23.484666  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.484666  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:23.489990  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.489990  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:23.489990  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.489990  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:23.489990  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:23.489990  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:23.489990  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:23.489990  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:23.490502  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:23.490502  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
17:38:23.490502  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:23.490502  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:23.490502  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:23.490502  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:23.490502  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:23.490502  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:23.490502  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:23.490502  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:23.490502  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:23.490502  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:23.490502  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:23.490502  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:23.490573  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:23.490573  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:23.490573  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:23.490573  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:23.490573  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:23.490573  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:23.490573  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:23.490573  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:23.490573  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:23.490573  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:23.490573  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:23.490573  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:23.490573  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:23.490573  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:23.490573  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:23.490573  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:23.490573  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:23.490573  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:23.490573  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:23.490573  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:23.490573  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:23.490573  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:23.490573  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:23.490573  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:23.490573  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:23.490573  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:23.490573  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:23.490573  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:23.490573  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:23.490573  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:23.490573  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:23.490573  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:23.490573  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:23.490573  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:23.490573  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:23.490573  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:23.490573  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:23.490573  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:23.490573  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:23.490573  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:23.490573  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:23.490573  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:23.490573  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:23.490573  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:23.490573  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:23.490573  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:23.490573  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:23.490573  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:23.490573  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:23.490573  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:23.490573  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:23.490573  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:23.490573  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:23.490573  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:23.490573  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:23.490573  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:23.490573  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:23.490573 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:23.490573 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:23.490573 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:23.490573 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:23.490573 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:23.490573 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:23.490573 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:23.490573 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:23.490573 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:23.490573 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:23.490573 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:23.490573 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:23.490573 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:23.490573 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:23.490573 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:23.490573 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:23.490573 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:23.490573 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:23.490573 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:23.490573 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:23.490573 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:23.490573 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:23.490573 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:23.490573 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:23.490573 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:23.490573 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:23.490573 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:23.490573 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:23.490573 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:23.490573 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:23.490573 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:23.490573 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:23.490573 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:23.490573 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:23.490573 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:23.490573 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:23.490573 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:23.490573 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:23.490573 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:23.490573 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:23.490573 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:23.490573 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:23.490573 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:23.490573 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:23.490573 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:23.490573 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:23.490573 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:23.490573 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:23.490573 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:23.490573 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:23.490573 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:23.490573 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:23.490573 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:23.490573 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:23.491080 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:23.491080 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:23.491080 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:23.491080 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:23.491080 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:23.491080 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:23.491080 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:23.491080 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:23.491080 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:23.491080 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:23.491080 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:23.491080 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@16)[0m
17:38:23.491080 [92m                 textDocument/didChange:             > 76:0-77:0 -> ""[0m
17:38:23.491080 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:23.491080 OUT Elapsed: 0s
17:38:23.491080 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:23.568978 IN Elapsed: 367.0629ms
17:38:23.569091 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:23.569091 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:23.569091 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
17:38:23.569606 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
17:38:23.571155 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:23.571155 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
17:38:23.571155 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:23.571155 OUT Elapsed: 0s
17:38:23.571155 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:24.498467 [95mSKETCH REBUILD: : Sketch rebuild started[0m
17:38:24.499001 [92mIDE <-- LS REQU window/workDoneProgress/create 2[0m
17:38:24.499001 OUT Elapsed: 0s
17:38:24.499001 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
17:38:24.499001 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
17:38:24.499001 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
17:38:24.499001 IN Elapsed: 1.0079207s
17:38:24.499001 [32mIDE --> LS RESP window/workDoneProgress/create 2[0m
17:38:24.499001 [92mIDE <-- LS NOTIF $/progress[0m
17:38:24.499001 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\2927866768 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\fullbuild --format json C:\Users\woodc\TrshProto[0m
17:38:24.503011 OUT Elapsed: 4.0101ms
17:38:26.584311 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild",
    "used_libraries": [
      {
        "name": "Adafruit ADXL345",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Unified driver for the ADXL345 Accelerometer",
        "paragraph": "Unified driver for the ADXL345 Accelerometer",
        "website": "https://github.com/adafruit/Adafruit_ADXL345",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "version": "1.3.4",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_ADXL345_U.h"
        ]
      },
      {
        "name": "Adafruit BusIO",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "This is a library for abstracting away I2C and SPI interfacing",
        "paragraph": "This is a library for abstracting away I2C and SPI interfacing",
        "website": "https://github.com/adafruit/Adafruit_BusIO",
        "category": "Signal Input/Output",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "version": "1.14.5",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_address_detect",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_registers",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2corspi_register",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_modetest",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_register_bits",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_registers"
        ],
        "provides_includes": [
          "Adafruit_BusIO_Register.h",
          "Adafruit_I2CDevice.h",
          "Adafruit_I2CRegister.h",
          "Adafruit_SPIDevice.h"
        ]
      },
      {
        "name": "Wire",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "This library allows you to communicate with I2C and Two Wire Interface devices.",
        "paragraph": "It allows the communication with I2C devices like temperature sensors, realtime clocks and many others using SDA (Data Line) and SCL (Clock Line).",
        "website": "http://www.arduino.cc/en/Reference/Wire",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\SFRRanger_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\digital_potentiometer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\i2c_scanner",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_writer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_receiver",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_sender"
        ],
        "provides_includes": [
          "Wire.h"
        ]
      },
      {
        "name": "SPI",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus.",
        "paragraph": "SPI is a synchronous serial data protocol used by microcontrollers for communicating with one or more peripheral devices quickly over short distances. It uses three lines common to all devices (MISO, MOSI and SCK) and one specific for each device.",
        "website": "http://www.arduino.cc/en/Reference/SPI",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\BarometricPressureSensor",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\DigitalPotControl"
        ],
        "provides_includes": [
          "SPI.h"
        ]
      },
      {
        "name": "Adafruit Unified Sensor",
        "author": "Adafruit \u003cinfo@adafruit.com\u003e",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Required for all Adafruit Unified Sensor based libraries.",
        "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
        "website": "https://github.com/adafruit/Adafruit_Sensor",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "version": "1.1.14",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_Sensor.h"
        ]
      },
      {
        "name": "Arduino-MPU6050-dev",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "is_legacy": true,
        "location": 1,
        "provides_includes": [
          "MPU6050.h"
        ]
      },
      {
        "name": "SoftwareSerial",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables serial communication on any digital pin.",
        "paragraph": "The SoftwareSerial library has been developed to allow serial communication on any digital pin of the board, using software to replicate the functionality of the hardware UART. It is possible to have multiple software serial ports with speeds up to 115200 bps.",
        "website": "http://www.arduino.cc/en/Reference/SoftwareSerial",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\SoftwareSerialExample",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\TwoPortReceive"
        ],
        "provides_includes": [
          "SoftwareSerial.h"
        ]
      }
    ],
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701884305",
      "extra.time.utc=1701902305",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
17:38:26.586112 [95mSKETCH REBUILD: : Updated 'libraries.cache'. Copied: C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\fullbuild\libraries.cache to C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\build\libraries.cache[0m
17:38:26.586112 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
17:38:26.586112 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
17:38:26.586112 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
17:38:26.586622 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\1299120401 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\build --format json --skip-libraries-discovery C:\Users\woodc\TrshProto[0m
17:38:27.169174 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build",
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701884306",
      "extra.time.utc=1701902306",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
17:38:27.183222 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
17:38:27.184134   > Current sketchmapper content:
17:38:27.184134   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:27.184134   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:27.184134   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:27.184134   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:27.184134   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:27.184134   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:27.184134   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:27.184134   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:27.184134   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:27.184134   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:27.184134  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:27.184134  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:27.184134  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:27.184134  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:27.184134  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:27.184134  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:27.184134  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:27.184134  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:27.184134  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:27.185146  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:27.185146  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:27.185146  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:27.185146  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:27.185146  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:27.185146  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:27.185146  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:27.185146  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:27.185146  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:27.185146  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105 C:\Users\woodc\TrshProto\TrshProto.ino:105
17:38:27.185146  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:27.185146  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
17:38:27.185146  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:27.185146  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:27.185146  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:27.185146  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:27.185146  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:27.185146  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:27.185146  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:27.185146  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:27.185146  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:27.185146  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:27.185146  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:27.185146  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:27.185146  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:27.185146  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:27.185146  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:27.185146  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:27.185146  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:27.185146  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:27.185146  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:27.185146  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:27.185146  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:27.185146  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:27.185146  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:27.185146  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:27.185146  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:27.185146  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:27.185146  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:27.185146  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:27.185146  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:27.185146  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:27.185146  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:27.185146  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:27.185146  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:27.185146  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:27.185146  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:27.185146  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:27.185146  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:27.185146  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:27.185146  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:27.185146  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:27.185146  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:27.185146  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:27.185146  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:27.185146  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:27.185146  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:27.185146  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:27.185146  77:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:27.185146  78:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:27.185146  79:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:27.185146  80:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:27.185146  81:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:27.185146  82:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:27.185146  83:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:27.185146  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:27.185146  85:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:27.185146  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:27.185146  87:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:27.185146  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:27.185146  89:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:27.185146  90:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:27.185146  91:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:27.185976  92:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:27.185976  93:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:27.185976  94:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:27.185976  95:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:27.185976  96:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:27.185976  97:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:27.185976  98:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:27.185976  99:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:27.185976 100:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:27.185976 101:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:27.185976 102:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:27.185976 103:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:27.185976 104:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:27.185976 105:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:27.185976 106:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:27.185976 107:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:27.185976 108:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:27.185976 109:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:27.185976 110:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:27.185976 111: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:27.185976 112:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:27.185976 113: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:27.185976 114: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:27.185976 115: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:27.185976 116: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:27.185976 117: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:27.185976 118: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:27.185976 119:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:27.185976 120:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:27.185976 121:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:27.185976 122:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:27.185976 123:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:27.185976 124:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:27.185976 125:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:27.185976 126:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:27.185976 127:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:27.185976 128:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:27.185976 129:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:27.185976 130:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:27.185976 131:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:27.185976 132:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:27.185976 133:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:27.185976 134:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:27.185976 135:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:27.185976 136:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:27.185976 137:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:27.185976 138:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:27.185976 139:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:27.185976 140:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:27.185976 141:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:27.185976 142:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:27.185976 143:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:27.185976 144:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:27.185976 145:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:27.185976 146:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:27.185976 147:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:27.185976 148:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:27.185976 149:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:27.185976 150:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:27.185976 151:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:27.185976 152:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:27.185976 153:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:27.185976 154:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:27.185976 155:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:27.185976 156:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:27.186487 157:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:27.186487 158:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:27.186487 159:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:27.186487 160:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:27.186487 161:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:27.186487 162: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:27.186487 163:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:27.186487 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:27.186487 [95mSKETCH REBUILD: : Sending 'didSave' notification to Clangd[0m
17:38:27.186487 [91mIDE     LS --> Clangd NOTIF textDocument/didSave[0m
17:38:27.186487 OUT Elapsed: 0s
17:38:27.186487 [95mSKETCH REBUILD: : Sending full-text 'didChange' notification to Clangd[0m
17:38:27.186487 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:27.186916 OUT Elapsed: 428.5µs
17:38:27.186916 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
17:38:27.186916 [92mIDE <-- LS NOTIF $/progress[0m
17:38:27.186916 OUT Elapsed: 0s
17:38:27.250709 IN Elapsed: 3.6816184s
17:38:27.250709 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 1[0m
17:38:27.250709 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 1[0m
17:38:27.250709 OUT Elapsed: 0s
17:38:27.250709 [92mIDE <-- LS REQU window/workDoneProgress/create 3[0m
17:38:27.250709 OUT Elapsed: 0s
17:38:27.250709 IN Elapsed: 0s
17:38:27.250709 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:38:27.250709 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
17:38:27.250709 IN Elapsed: 0s
17:38:27.250709 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:38:27.250709 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
17:38:27.252139 IN Elapsed: 2.7531382s
17:38:27.252139 [32mIDE --> LS RESP window/workDoneProgress/create 3[0m
17:38:27.252139 [92mIDE <-- LS NOTIF $/progress[0m
17:38:27.252647 OUT Elapsed: 507.8µs
17:38:27.252647 [92mIDE <-- LS NOTIF $/progress[0m
17:38:27.252647 OUT Elapsed: 0s
17:38:27.291907 IN Elapsed: 41.1972ms
17:38:27.291907 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:38:27.291907 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
17:38:27.291907 IN Elapsed: 0s
17:38:27.291907 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:38:27.291907 [92mIDE <-- LS NOTIF $/progress[0m
17:38:27.291907 [91m                            $/progress: backgroundIndexProgress END [0m
17:38:27.291907 OUT Elapsed: 0s
17:38:27.291907 [92mIDE <-- LS NOTIF $/progress[0m
17:38:27.291907 OUT Elapsed: 0s
17:38:28.765242 IN Elapsed: 1.5131029s
17:38:28.768853 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:28.768853 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:28.768853 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@19)[0m
17:38:28.768853 [92m                 textDocument/didChange:   > 63:14-64:0 (len=1) -> "\n    // etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n"[0m
17:38:28.768853 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    // etPhoneHome("01", "7038250271", "Hello World");
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:28.769476 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:28.769990 Ino Range: 63:14-64:0 -> Cpp Range:76:14-77:0
17:38:28.769990   > Current sketchmapper content:
17:38:28.771011   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:28.771011   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:28.771011   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:28.771011   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:28.771011   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:28.771011   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:28.771011   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:28.771011   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:28.771011   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:28.771011   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:28.771011  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:28.771011  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:28.771011  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:28.771011  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:28.771011  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:28.771011  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:28.771011  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:28.771011  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:28.771011  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:28.771011  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:28.771011  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:28.771011  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:28.771011  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:28.771011  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:28.771011  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:28.771011  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:28.771011  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:28.771011  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:28.771011  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:28.771011  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:28.771011  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:28.771011  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:28.771011  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:28.771011  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:28.771011  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:28.771011  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:28.771011  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:28.771011  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:28.771011  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:28.771011  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:28.771011  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:28.771011  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:28.771011  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:28.771011  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:28.771011  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:28.771011  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:28.771011  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:28.771011  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:28.771011  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:28.771011  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:28.771011  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:28.771011  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:28.771011  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:28.771011  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:28.771011  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:28.771011  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:28.771011  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:28.771011  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:28.771011  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:28.771011  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:28.771011  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:28.771011  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:28.771011  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:28.771011  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:28.771011  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:28.771011  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:28.771011  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:28.771011  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:28.771011  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:28.771011  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:28.771011  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:28.771011  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:28.771011  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:28.771011  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:28.771011  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:28.771011  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:28.771011  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:28.771011  77:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:28.771011  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:28.771011  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:28.771011  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:28.771011  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:28.771011  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:28.771011  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:28.771011  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:28.771011  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:28.771011  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:28.771011  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:28.771011  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:28.771011  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:28.771011  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:28.771011  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:28.771011  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:28.771011  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:28.771011  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:28.771011  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:28.771011  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:28.771011  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:28.771011  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:28.771011  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:28.771011 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:28.771011 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:28.771011 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:28.771011 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:28.771553 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:28.771553 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:28.771553 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:28.771553 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:28.771553 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:28.771553 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:28.771553 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:28.771553 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:28.771553 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:28.771553 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:28.771553 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:28.771553 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:28.771553 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:28.771553 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:28.771553 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:28.771553 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:28.771553 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:28.771553 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:28.771553 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:28.771553 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:28.771553 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:28.771553 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:28.771553 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:28.771553 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:28.771553 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:28.771553 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:28.771553 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:28.771553 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:28.771553 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:28.771553 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:28.771553 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:28.771684 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:28.771684 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:28.771684 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:28.771684 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:28.771684 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:28.771684 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:28.771684 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:28.771684 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:28.771684 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:28.771684 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:28.771684 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:28.771684 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:28.771684 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:28.771684 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:28.771684 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:28.771684 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:28.771684 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:28.771684 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:28.771684 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:28.771684 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:28.771684 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:28.771684 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:28.771684 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:28.771684 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:28.771684 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:28.771684 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:28.771684 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:28.771684 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:28.771684 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:28.771684 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:28.771684 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:28.771684 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@18)[0m
17:38:28.771684 [92m                 textDocument/didChange:             > 76:14-77:0 -> "\n    // etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n"[0m
17:38:28.771684 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:28.771684 OUT Elapsed: 0s
17:38:28.771684 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:28.864286 IN Elapsed: 1.572379s
17:38:28.864286 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:28.864286 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:28.864286 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
17:38:28.864795 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
17:38:28.865328 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:28.865328 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
17:38:28.865328 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:28.865328 OUT Elapsed: 0s
17:38:28.865328 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:29.777063 [95mSKETCH REBUILD: : Sketch rebuild started[0m
17:38:29.777063 [92mIDE <-- LS REQU window/workDoneProgress/create 4[0m
17:38:29.777063 OUT Elapsed: 0s
17:38:29.777063 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
17:38:29.777063 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
17:38:29.777063 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    // etPhoneHome("01", "7038250271", "Hello World");
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
17:38:29.777647 IN Elapsed: 1.0059633s
17:38:29.777647 [32mIDE --> LS RESP window/workDoneProgress/create 4[0m
17:38:29.777647 [92mIDE <-- LS NOTIF $/progress[0m
17:38:29.777647 OUT Elapsed: 0s
17:38:29.777647 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\3057787085 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\fullbuild --format json C:\Users\woodc\TrshProto[0m
17:38:30.227604 IN Elapsed: 449.957ms
17:38:30.227604 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:30.227604 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:30.227604 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@20)[0m
17:38:30.227604 [92m                 textDocument/didChange:   > 64:4-64:7 (len=3) -> ""[0m
17:38:30.228143 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:30.228411 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:30.229781 Ino Range: 64:4-64:7 -> Cpp Range:77:4-77:7
17:38:30.229781   > Current sketchmapper content:
17:38:30.229781   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:30.229781   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:30.229781   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:30.229781   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:30.229781   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:30.229781   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:30.229781   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:30.229781   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:30.229781   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:30.229781   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:30.229781  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:30.229781  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:30.229781  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:30.229781  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:30.229781  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:30.229781  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:30.229781  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:30.229781  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:30.229781  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:30.229781  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.229781  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:30.229781  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.229781  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:30.229781  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.229781  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:30.229781  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.229781  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:30.229781  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:30.229781  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:30.229781  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:30.229781  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:30.229781  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:30.229781  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:30.229781  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:30.229781  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:30.229781  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:30.229781  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:30.229781  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:30.229781  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:30.229781  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:30.229781  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:30.229781  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:30.229781  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:30.229781  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:30.229781  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:30.229781  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:30.229781  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:30.229781  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:30.229781  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:30.229781  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:30.229781  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:30.229781  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:30.229781  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:30.229781  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:30.229781  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:30.229781  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:30.229781  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:30.229781  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:30.229781  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:30.229781  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:30.229781  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:30.229781  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:30.229781  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:30.229781  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:30.229781  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:30.229781  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:30.229781  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:30.229781  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:30.229781  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:30.229781  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:30.229781  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:30.229781  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:30.229781  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:30.229781  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:30.229781  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:30.229781  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:30.229781  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:30.229781  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:30.229781  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:30.229781  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:30.229781  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:30.229781  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:30.229781  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:30.229781  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:30.229781  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:30.229781  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:30.229781  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:30.229781  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:30.229781  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:30.229781  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:30.229781  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:30.229781  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:30.229781  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:30.229781  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:30.229781  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:30.229781  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:30.229781  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:30.229781  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:30.229781  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:30.229781  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:30.229781 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:30.229781 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:30.229781 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:30.229781 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:30.229781 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:30.229781 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:30.229781 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:30.229781 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:30.229781 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:30.229781 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:30.229781 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:30.229781 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:30.230387 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:30.230387 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:30.230387 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:30.230387 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:30.230387 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:30.230387 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:30.230387 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:30.230387 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:30.230387 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:30.230387 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:30.230387 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:30.230387 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:30.230387 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:30.230387 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:30.230387 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:30.230387 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:30.230387 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:30.230387 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:30.230387 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:30.230387 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:30.230387 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:30.230387 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:30.230387 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:30.230387 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:30.230387 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:30.230387 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:30.230387 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:30.230387 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:30.230387 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:30.230387 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:30.230387 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:30.230387 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:30.230387 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:30.230387 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:30.230387 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:30.230387 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:30.230387 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:30.230387 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:30.230387 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:30.230387 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:30.230387 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:30.230387 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:30.230387 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:30.230387 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:30.230387 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:30.230387 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:30.230387 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:30.230387 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:30.230387 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:30.230387 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:30.230387 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:30.230387 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:30.230387 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:30.230387 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:30.230387 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@19)[0m
17:38:30.230387 [92m                 textDocument/didChange:             > 77:4-77:7 -> ""[0m
17:38:30.230387 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:30.230387 OUT Elapsed: 0s
17:38:30.230387 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:30.301154 IN Elapsed: 1.436868s
17:38:30.301154 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:30.303334 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:30.303334 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
17:38:30.303846 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
17:38:30.303846 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:30.303846 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
17:38:30.303846 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:30.303846 OUT Elapsed: 0s
17:38:30.303846 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:30.635787 IN Elapsed: 405.4006ms
17:38:30.635787 [92mIDE --> LS REQU textDocument/formatting 7[0m
17:38:30.635787 [92m                textDocument/formatting 7: [93mwrite-locked[0m[0m
17:38:30.636690 [92m                textDocument/formatting 7: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:30.636690 [92m                textDocument/formatting 7:     using custom formatter config file C:\Users\woodc\TrshProto\.clang-format[0m
17:38:30.637588 [92m                textDocument/formatting 7:     writing formatter config in: C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\build\sketch\.clang-format[0m
17:38:30.653496 [91mIDE     LS --> Clangd REQU textDocument/formatting 7[0m
17:38:30.653496 OUT Elapsed: 0s
17:38:30.657290 IN Elapsed: 356.1369ms
17:38:30.661595 [31mIDE     LS <-- Clangd RESP textDocument/formatting 7[0m
17:38:30.661844 [92m                textDocument/formatting 7: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:38:30.662359 [92m                textDocument/formatting 7: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:163:1-165:0 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:150:1-152:0 (.ino)[0m
17:38:30.662359 [92m                textDocument/formatting 7:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:163:1-165:0 -> "\n"[0m
17:38:30.662359 [92m                textDocument/formatting 7: converted to:[0m
17:38:30.662359 [92m                textDocument/formatting 7:   file:///C:/Users/woodc/TrshProto/TrshProto.ino ino/textEdit (1 elements)[0m
17:38:30.662359 [92m                textDocument/formatting 7:     > file:///C:/Users/woodc/TrshProto/TrshProto.ino:150:1-152:0 -> "\n"[0m
17:38:30.662359 [92m                textDocument/formatting 7:     formatter config cleaned[0m
17:38:30.662359 [92m                textDocument/formatting 7: [93mwrite-unlocked[0m[0m
17:38:30.662359 [32mIDE <-- LS RESP textDocument/formatting 7[0m
17:38:30.662359 OUT Elapsed: 0s
17:38:30.663496 IN Elapsed: 1.1366ms
17:38:30.663496 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:30.663496 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:30.663496 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@21)[0m
17:38:30.663496 [92m                 textDocument/didChange:   > 150:1-150:1 (len=0) -> "\n"[0m
17:38:30.664620 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}


-----------------------------[0m
17:38:30.665132 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:30.666303 Ino Range: 150:1-150:1 -> Cpp Range:163:1-163:1
17:38:30.666303   > Current sketchmapper content:
17:38:30.666303   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:30.666303   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:30.666303   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:30.666303   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:30.666303   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:30.666303   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:30.666303   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:30.666303   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:30.666303   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:30.666303   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:30.666303  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:30.666303  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:30.666303  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:30.666303  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:30.666303  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:30.666303  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:30.666303  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:30.666303  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:30.666303  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:30.666303  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.666303  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:30.666303  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.666303  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:30.666303  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.666303  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:30.666303  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.666303  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:30.666303  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:30.666303  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:30.666303  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:30.666303  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:30.666303  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:30.666303  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:30.666303  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:30.666303  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:30.666303  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:30.666303  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:30.666303  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:30.666303  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:30.666303  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:30.666303  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:30.666303  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:30.666303  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:30.666303  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:30.666303  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:30.666303  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:30.666303  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:30.666303  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:30.666303  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:30.666303  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:30.666303  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:30.666303  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:30.666303  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:30.666303  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:30.666303  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:30.666303  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:30.666303  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:30.666303  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:30.666303  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:30.666303  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:30.666303  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:30.666303  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:30.666303  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:30.666303  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:30.666303  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:30.666303  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:30.666303  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:30.666303  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:30.666303  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:30.666303  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:30.666303  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:30.666303  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:30.666303  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:30.666303  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:30.666303  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:30.666303  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:30.666303  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:30.666303  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:30.666303  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:30.666303  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:30.666303  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:30.666303  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:30.666303  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:30.666303  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:30.666303  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:30.666303  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:30.666303  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:30.666303  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:30.666303  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:30.666303  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:30.666303  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:30.666303  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:30.666303  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:30.666303  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:30.666303  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:30.666303  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:30.666303  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:30.666303  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:30.666303  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:30.666303  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:30.666303 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:30.666303 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:30.666303 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:30.666303 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:30.666303 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:30.666303 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:30.666303 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:30.666303 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:30.666303 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:30.666303 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:30.666303 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:30.666303 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:30.666303 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:30.666303 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:30.666303 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:30.666303 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:30.666303 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:30.666303 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:30.666303 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:30.666303 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:30.666303 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:30.666303 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:30.666303 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:30.666303 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:30.666303 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:30.666303 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:30.666303 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:30.666303 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:30.666303 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:30.666303 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:30.666303 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:30.666303 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:30.666303 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:30.666303 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:30.666303 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:30.666303 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:30.666303 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:30.666303 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:30.666303 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:30.666303 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:30.666303 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:30.666303 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:30.666303 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:30.666303 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:30.666303 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:30.666303 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:30.666303 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:30.666303 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:30.666303 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:30.666303 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:30.666303 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:30.666303 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:30.666303 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:30.666303 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:30.666303 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:30.666303 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:30.666303 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:30.666303 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:30.666303 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:30.666303 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:30.666303 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:30.666303 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:30.666303 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:30.666303 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:30.666303 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:30.666303 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:30.666303 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:38:30.666303 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@20)[0m
17:38:30.666303 [92m                 textDocument/didChange:             > 163:1-163:1 -> "\n"[0m
17:38:30.666303 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:30.666303 OUT Elapsed: 0s
17:38:30.666303 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:30.677535 IN Elapsed: 11.2313ms
17:38:30.677535 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:38:30.677535 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:38:30.677535 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@22)[0m
17:38:30.677535 [92m                 textDocument/didChange:   > 151:0-152:0 (len=1) -> ""[0m
17:38:30.677535 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:38:30.677535 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:38:30.677535 Ino Range: 151:0-152:0 -> Cpp Range:164:0-165:0
17:38:30.677535   > Current sketchmapper content:
17:38:30.677535   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:30.677535   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:30.677535   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:30.677535   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:30.677535   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:30.677535   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:30.677535   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:30.677535   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:30.677535   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:30.677535   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:30.677535  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:30.677535  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:30.677535  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:30.677535  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:30.677535  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:30.677535  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:30.677535  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:30.677535  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:30.677535  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:30.677535  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.677535  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:30.677535  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.677535  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:30.677535  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.677535  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:30.677535  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:30.677535  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:30.677535  27: #line 106 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:30.677535  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:30.677535  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:30.677535  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:30.677535  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:30.677535  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:30.677535  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:30.677535  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:30.677535  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:30.677535  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:30.677535  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:30.677535  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:30.677535  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:30.677535  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:30.677535  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:30.677535  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:30.677535  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:30.677535  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:30.677535  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:30.677535  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:30.677535  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:30.677535  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:30.677535  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:30.677535  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:30.677535  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:30.677535  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:30.677535  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:30.677535  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:30.677535  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:30.677535  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:30.677535  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:30.677535  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:30.677535  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:30.677535  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:30.677535  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:30.677535  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:30.677535  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:30.677535  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:30.677535  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:30.677535  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:30.677535  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:30.677535  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:30.677535  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:30.677535  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:30.677535  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:30.677535  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:30.677535  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:30.677535  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:30.677535  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:30.677535  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:30.677535  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:30.677535  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:30.677535  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:30.677535  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:30.677535  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:30.677535  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:30.677535  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:30.677535  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:30.677535  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:30.677535  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:30.677535  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:30.677535  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:30.677535  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:30.677535  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:30.677535  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:30.677535  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:30.677535  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:30.677535  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:30.677535  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:30.677535  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:30.677535  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:30.677535  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:30.677535  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:30.677535 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:30.677535 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:30.677535 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:30.677535 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:30.677535 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:30.677535 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:30.677535 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:30.677535 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:30.677535 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:30.677535 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:30.677535 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:30.677535 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:30.677535 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:30.677535 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:30.677535 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:30.677535 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:30.677535 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:30.677535 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:30.677535 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:30.677535 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:30.677535 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:30.677535 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:30.677535 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:30.677535 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:30.677535 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:30.677535 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:30.677535 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:30.677535 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:30.677535 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:30.677535 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:30.677535 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:30.677535 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:30.677535 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:30.677535 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:30.677535 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:30.677535 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:30.677535 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:30.677535 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:30.677535 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:30.677535 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:30.677535 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:30.677535 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:30.677535 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:30.677535 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:30.677535 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:30.677535 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:30.677535 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:30.677535 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:30.677535 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:30.677535 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:30.677535 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:30.677535 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:30.677535 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:30.677535 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:30.677535 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:30.677535 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:30.677535 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:30.677535 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:30.677535 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:30.677535 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:30.677535 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:30.677535 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:30.677535 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:30.677535 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:30.677535 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:30.677535 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:30.677535 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@21)[0m
17:38:30.677535 [92m                 textDocument/didChange:             > 164:0-165:0 -> ""[0m
17:38:30.677535 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:30.677535 OUT Elapsed: 0s
17:38:30.677535 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:38:30.677535 IN Elapsed: 0s
17:38:30.677535 [92mIDE --> LS NOTIF textDocument/didSave[0m
17:38:30.677535 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
17:38:30.677535 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
17:38:30.677535 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
17:38:31.737710 [95mSKETCH REBUILD: : Error: running C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\3057787085 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\fullbuild --format json C:\Users\woodc\TrshProto: exit status 1[0m
17:38:31.737710 [92mIDE <-- LS NOTIF $/progress[0m
17:38:31.737710 OUT Elapsed: 0s
17:38:32.738675 [95mSKETCH REBUILD: : Sketch rebuild started[0m
17:38:32.738675 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
17:38:32.738675 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
17:38:32.738675 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
17:38:32.742118 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\3048304533 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\fullbuild --format json C:\Users\woodc\TrshProto[0m
17:38:32.765147 [92mIDE <-- LS REQU window/workDoneProgress/create 5[0m
17:38:32.765147 OUT Elapsed: 0s
17:38:32.765147 IN Elapsed: 2.087612s
17:38:32.765657 [32mIDE --> LS RESP window/workDoneProgress/create 5[0m
17:38:32.765657 [92mIDE <-- LS NOTIF $/progress[0m
17:38:32.765657 OUT Elapsed: 0s
17:38:34.660687 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild",
    "used_libraries": [
      {
        "name": "Adafruit ADXL345",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Unified driver for the ADXL345 Accelerometer",
        "paragraph": "Unified driver for the ADXL345 Accelerometer",
        "website": "https://github.com/adafruit/Adafruit_ADXL345",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345",
        "version": "1.3.4",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_ADXL345\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_ADXL345_U.h"
        ]
      },
      {
        "name": "Adafruit BusIO",
        "author": "Adafruit",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "This is a library for abstracting away I2C and SPI interfacing",
        "paragraph": "This is a library for abstracting away I2C and SPI interfacing",
        "website": "https://github.com/adafruit/Adafruit_BusIO",
        "category": "Signal Input/Output",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO",
        "version": "1.14.5",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_address_detect",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2c_registers",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\i2corspi_register",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_modetest",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_readwrite",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_register_bits",
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_BusIO\\examples\\spi_registers"
        ],
        "provides_includes": [
          "Adafruit_BusIO_Register.h",
          "Adafruit_I2CDevice.h",
          "Adafruit_I2CRegister.h",
          "Adafruit_SPIDevice.h"
        ]
      },
      {
        "name": "Wire",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "This library allows you to communicate with I2C and Two Wire Interface devices.",
        "paragraph": "It allows the communication with I2C devices like temperature sensors, realtime clocks and many others using SDA (Data Line) and SCL (Clock Line).",
        "website": "http://www.arduino.cc/en/Reference/Wire",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\SFRRanger_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\digital_potentiometer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\i2c_scanner",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_reader",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\master_writer",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_receiver",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\Wire\\examples\\slave_sender"
        ],
        "provides_includes": [
          "Wire.h"
        ]
      },
      {
        "name": "SPI",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus.",
        "paragraph": "SPI is a synchronous serial data protocol used by microcontrollers for communicating with one or more peripheral devices quickly over short distances. It uses three lines common to all devices (MISO, MOSI and SCK) and one specific for each device.",
        "website": "http://www.arduino.cc/en/Reference/SPI",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\BarometricPressureSensor",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SPI\\examples\\DigitalPotControl"
        ],
        "provides_includes": [
          "SPI.h"
        ]
      },
      {
        "name": "Adafruit Unified Sensor",
        "author": "Adafruit \u003cinfo@adafruit.com\u003e",
        "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
        "sentence": "Required for all Adafruit Unified Sensor based libraries.",
        "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
        "website": "https://github.com/adafruit/Adafruit_Sensor",
        "category": "Sensors",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor",
        "version": "1.1.14",
        "license": "Unspecified",
        "location": 1,
        "examples": [
          "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Adafruit_Unified_Sensor\\examples\\sensortest"
        ],
        "provides_includes": [
          "Adafruit_Sensor.h"
        ]
      },
      {
        "name": "Arduino-MPU6050-dev",
        "architectures": [
          "*"
        ],
        "install_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "source_dir": "C:\\Users\\woodc\\OneDrive\\Documents\\Arduino\\libraries\\Arduino-MPU6050-dev",
        "is_legacy": true,
        "location": 1,
        "provides_includes": [
          "MPU6050.h"
        ]
      },
      {
        "name": "SoftwareSerial",
        "author": "Arduino",
        "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
        "sentence": "Enables serial communication on any digital pin.",
        "paragraph": "The SoftwareSerial library has been developed to allow serial communication on any digital pin of the board, using software to replicate the functionality of the hardware UART. It is possible to have multiple software serial ports with speeds up to 115200 bps.",
        "website": "http://www.arduino.cc/en/Reference/SoftwareSerial",
        "category": "Communication",
        "architectures": [
          "avr"
        ],
        "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial",
        "source_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\src",
        "container_platform": "arduino:avr@1.8.6",
        "version": "1.0",
        "license": "Unspecified",
        "location": 2,
        "layout": 1,
        "examples": [
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\SoftwareSerialExample",
          "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\SoftwareSerial\\examples\\TwoPortReceive"
        ],
        "provides_includes": [
          "SoftwareSerial.h"
        ]
      }
    ],
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701884313",
      "extra.time.utc=1701902313",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\fullbuild/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
17:38:34.662629 [95mSKETCH REBUILD: : Updated 'libraries.cache'. Copied: C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\fullbuild\libraries.cache to C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\build\libraries.cache[0m
17:38:34.662629 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
17:38:34.662629 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
17:38:34.662629 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
17:38:34.663234 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\4195623596 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\build --format json --skip-libraries-discovery C:\Users\woodc\TrshProto[0m
17:38:35.230789 [95mSKETCH REBUILD: : arduino-cli output: {
  "compiler_out": "",
  "compiler_err": "",
  "builder_result": {
    "build_path": "C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build",
    "board_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_platform": {
      "id": "arduino:avr",
      "version": "1.8.6",
      "install_dir": "C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6"
    },
    "build_properties": [
      "_id=pro",
      "archive_file_path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/{archive_file}",
      "bootloader.extended_fuses=0xFD",
      "bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "bootloader.high_fuses=0xDA",
      "bootloader.lock_bits=0x0F",
      "bootloader.low_fuses=0xFF",
      "bootloader.tool=avrdude",
      "bootloader.tool.default=avrdude",
      "bootloader.unlock_bits=0x3F",
      "build.arch=AVR",
      "build.board=AVR_PRO",
      "build.core=arduino",
      "build.core.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino",
      "build.extra_flags=",
      "build.f_cpu=16000000L",
      "build.fqbn=arduino:avr:pro",
      "build.library_discovery_phase=0",
      "build.mcu=atmega328p",
      "build.path=C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build",
      "build.project_name=TrshProto.ino",
      "build.source.path=C:\\Users\\woodc\\TrshProto",
      "build.system.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system",
      "build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'",
      "build.usb_manufacturer=\"Unknown\"",
      "build.variant=eightanaloginputs",
      "build.variant.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs",
      "compiler.S.extra_flags=",
      "compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD",
      "compiler.ar.cmd=avr-gcc-ar",
      "compiler.ar.extra_flags=",
      "compiler.ar.flags=rcs",
      "compiler.c.cmd=avr-gcc",
      "compiler.c.elf.cmd=avr-gcc",
      "compiler.c.elf.extra_flags=",
      "compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections",
      "compiler.c.extra_flags=",
      "compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects",
      "compiler.cpp.cmd=avr-g++",
      "compiler.cpp.extra_flags=",
      "compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto",
      "compiler.elf2hex.cmd=avr-objcopy",
      "compiler.elf2hex.extra_flags=",
      "compiler.elf2hex.flags=-O ihex -R .eeprom",
      "compiler.ldflags=",
      "compiler.libraries.ldflags=",
      "compiler.objcopy.cmd=avr-objcopy",
      "compiler.objcopy.eep.extra_flags=",
      "compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0",
      "compiler.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/",
      "compiler.size.cmd=avr-size",
      "compiler.warning_flags=-w",
      "compiler.warning_flags.all=-Wall -Wextra",
      "compiler.warning_flags.default=",
      "compiler.warning_flags.more=-Wall",
      "compiler.warning_flags.none=-w",
      "extra.time.dst=0",
      "extra.time.local=1701884315",
      "extra.time.utc=1701902315",
      "extra.time.zone=-18000",
      "ide_version=10607",
      "menu.cpu.16MHzatmega168=ATmega168 (5V, 16 MHz)",
      "menu.cpu.16MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.16MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex",
      "menu.cpu.16MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.16MHzatmega168.bootloader.low_fuses=0xff",
      "menu.cpu.16MHzatmega168.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega168.build.mcu=atmega168",
      "menu.cpu.16MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.16MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.16MHzatmega168.upload.speed=19200",
      "menu.cpu.16MHzatmega328=ATmega328P (5V, 16 MHz)",
      "menu.cpu.16MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.16MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex",
      "menu.cpu.16MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.16MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.16MHzatmega328.build.f_cpu=16000000L",
      "menu.cpu.16MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.16MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.16MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.16MHzatmega328.upload.speed=57600",
      "menu.cpu.8MHzatmega168=ATmega168 (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega168.bootloader.extended_fuses=0xF8",
      "menu.cpu.8MHzatmega168.bootloader.file=atmega/ATmegaBOOT_168_pro_8MHz.hex",
      "menu.cpu.8MHzatmega168.bootloader.high_fuses=0xdd",
      "menu.cpu.8MHzatmega168.bootloader.low_fuses=0xc6",
      "menu.cpu.8MHzatmega168.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega168.build.mcu=atmega168",
      "menu.cpu.8MHzatmega168.upload.maximum_data_size=1024",
      "menu.cpu.8MHzatmega168.upload.maximum_size=14336",
      "menu.cpu.8MHzatmega168.upload.speed=19200",
      "menu.cpu.8MHzatmega328=ATmega328P (3.3V, 8 MHz)",
      "menu.cpu.8MHzatmega328.bootloader.extended_fuses=0xFD",
      "menu.cpu.8MHzatmega328.bootloader.file=atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex",
      "menu.cpu.8MHzatmega328.bootloader.high_fuses=0xDA",
      "menu.cpu.8MHzatmega328.bootloader.low_fuses=0xFF",
      "menu.cpu.8MHzatmega328.build.f_cpu=8000000L",
      "menu.cpu.8MHzatmega328.build.mcu=atmega328p",
      "menu.cpu.8MHzatmega328.upload.maximum_data_size=2048",
      "menu.cpu.8MHzatmega328.upload.maximum_size=30720",
      "menu.cpu.8MHzatmega328.upload.speed=57600",
      "name=Arduino Pro or Pro Mini",
      "pluggable_discovery.required.0=builtin:serial-discovery",
      "pluggable_discovery.required.1=builtin:mdns-discovery",
      "pluggable_monitor.required.serial=builtin:serial-monitor",
      "preproc.includes.flags=-w -x c++ -M -MG -MP",
      "preproc.macros.flags=-w -x c++ -E -CC",
      "recipe.S.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.ar.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/{archive_file}\" \"{object_file}\"",
      "recipe.c.combine.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\" {object_files}  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/{archive_file}\" \"-LC:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build\" -lm",
      "recipe.c.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.cpp.o.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"",
      "recipe.objcopy.eep.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.eep\"",
      "recipe.objcopy.hex.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\" \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex\"",
      "recipe.output.save_file=TrshProto.ino.eightanaloginputs.hex",
      "recipe.output.tmp_file=TrshProto.ino.hex",
      "recipe.preproc.includes=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"",
      "recipe.preproc.macros=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_PRO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"",
      "recipe.size.pattern=\"C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.elf\"",
      "recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*",
      "recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*",
      "recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*",
      "runtime.hardware.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr",
      "runtime.ide.path=C:\\ProgramData\\chocolatey\\lib\\arduino-cli\\tools",
      "runtime.ide.version=10607",
      "runtime.os=windows",
      "runtime.platform.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6",
      "runtime.tools.CMSIS-4.5.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.CMSIS-Atmel-1.2.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS-Atmel.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS-Atmel\\1.2.0",
      "runtime.tools.CMSIS.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\CMSIS\\4.5.0",
      "runtime.tools.arduinoOTA-1.2.1.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.2.1",
      "runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arduinoOTA.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0",
      "runtime.tools.arm-none-eabi-gcc-7-2017q4.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4",
      "runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avr-gcc.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7",
      "runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "runtime.tools.bossac-1.7.0-arduino3.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.7.0-arduino3",
      "runtime.tools.bossac-1.9.1-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.bossac.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.9.1-arduino5",
      "runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.ctags.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11",
      "runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2",
      "runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.dfu-util.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5",
      "runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.mdns-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9",
      "runtime.tools.openocd-0.10.0-arduino7.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.10.0-arduino7",
      "runtime.tools.openocd-0.11.0-arduino2.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.openocd.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\openocd\\0.11.0-arduino2",
      "runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-discovery.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0",
      "runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "runtime.tools.serial-monitor.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0",
      "software=ARDUINO",
      "tools.arduino_ota.cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}",
      "tools.avrdude.bootloader.params.quiet=-q -q",
      "tools.avrdude.bootloader.params.verbose=-v",
      "tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/atmega/ATmegaBOOT_168_atmega328.hex:i\" -Ulock:w:0x0F:m",
      "tools.avrdude.cmd.path={path}/bin/avrdude",
      "tools.avrdude.config.path={path}/etc/avrdude.conf",
      "tools.avrdude.erase.params.quiet=-q -q",
      "tools.avrdude.erase.params.verbose=-v",
      "tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m",
      "tools.avrdude.network_cmd=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA",
      "tools.avrdude.path=C:\\Users\\woodc\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17",
      "tools.avrdude.program.params.noverify=-V",
      "tools.avrdude.program.params.quiet=-q -q",
      "tools.avrdude.program.params.verbose=-v",
      "tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.program.verify=",
      "tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}",
      "tools.avrdude.upload.params.noverify=-V",
      "tools.avrdude.upload.params.quiet=-q -q",
      "tools.avrdude.upload.params.verbose=-v",
      "tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b57600 -D \"-Uflash:w:C:\\Users\\woodc\\AppData\\Local\\Temp\\arduino-language-server1235177802\\build/TrshProto.ino.hex:i\"",
      "tools.avrdude.upload.verify=",
      "tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p",
      "upload.maximum_data_size=2048",
      "upload.maximum_size=30720",
      "upload.protocol=arduino",
      "upload.speed=57600",
      "upload.tool=avrdude",
      "upload.tool.default=avrdude",
      "upload.tool.network=arduino_ota",
      "upload_port.0.board=pro",
      "version=1.8.6"
    ]
  },
  "upload_result": null,
  "success": true
}
[0m
17:38:35.237207 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
17:38:35.238658   > Current sketchmapper content:
17:38:35.238658   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:38:35.238658   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:38:35.238658   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:38:35.238658   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:38:35.238658   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:38:35.238658   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:38:35.238658   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:38:35.238658   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:38:35.238658   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:38:35.238658   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:38:35.238658  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:38:35.238658  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:38:35.238658  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:38:35.238658  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:38:35.238658  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:38:35.238658  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:38:35.238658  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:38:35.238658  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:38:35.238658  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:38:35.238658  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:35.238658  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:38:35.238658  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:35.238658  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:38:35.238658  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:35.238658  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:38:35.239164  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:35.239164  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:38:35.239164  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:38:35.239164  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:106 C:\Users\woodc\TrshProto\TrshProto.ino:106
17:38:35.239164  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:38:35.239164  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:17                          
17:38:35.239164  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:38:35.239164  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:38:35.239164  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:38:35.239164  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:38:35.239164  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:38:35.239164  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:38:35.239164  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:38:35.239164  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:38:35.239164  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:38:35.239164  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:38:35.239164  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:38:35.239164  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:38:35.239164  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:38:35.239164  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:38:35.239164  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:38:35.239164  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:38:35.239164  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:38:35.239164  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:38:35.239164  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:38:35.239164  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:38:35.239164  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:38:35.239164  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:38:35.239164  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:38:35.239164  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:38:35.239164  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:38:35.239164  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:38:35.239164  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:38:35.239164  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:38:35.239164  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:38:35.239164  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:38:35.239164  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:38:35.239164  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:38:35.239164  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:38:35.239164  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:38:35.239164  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:38:35.239164  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:38:35.239164  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:38:35.239164  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:38:35.239164  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:38:35.239164  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:38:35.239164  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:38:35.239164  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:38:35.239164  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:38:35.239164  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:38:35.239164  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:38:35.239164  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:38:35.239164  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:38:35.239164  78:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:38:35.239164  79:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:38:35.239164  80:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:38:35.239164  81:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:38:35.239164  82:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:38:35.239164  83:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:38:35.239164  84:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:38:35.239164  85:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:38:35.239164  86:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:38:35.239164  87:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:38:35.239164  88:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:38:35.239164  89:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:38:35.239164  90:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:38:35.239164  91:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:38:35.239164  92:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:38:35.239164  93:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:38:35.239164  94:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:38:35.239164  95:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:38:35.239164  96:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:38:35.239164  97:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:38:35.239164  98:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:38:35.239164  99:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:38:35.239164 100:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:38:35.239164 101:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:38:35.239164 102:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:38:35.239164 103:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:38:35.239164 104:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:38:35.239164 105:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:38:35.239164 106:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:38:35.239164 107:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:38:35.239164 108:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:38:35.239164 109:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:38:35.239164 110:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:38:35.239164 111:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:38:35.239164 112: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:38:35.239164 113:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:38:35.239164 114: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:38:35.239164 115: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:38:35.239164 116: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:38:35.239164 117: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:38:35.239164 118: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:38:35.239164 119: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:38:35.239164 120:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:38:35.239164 121:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:38:35.239164 122:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:38:35.239164 123:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:38:35.239164 124:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:38:35.239164 125:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:38:35.239164 126:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:38:35.239164 127:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:38:35.239164 128:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:38:35.239164 129:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:38:35.239164 130:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:38:35.239716 131:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:38:35.239716 132:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:38:35.239716 133:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:38:35.239716 134:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:38:35.239716 135:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:38:35.239716 136:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:38:35.239716 137:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:38:35.239716 138:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:38:35.239716 139:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:38:35.239716 140:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:38:35.239716 141:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:38:35.239716 142:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:38:35.239716 143:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:38:35.239716 144:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:38:35.239716 145:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:38:35.239716 146:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:38:35.239716 147:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:38:35.239716 148:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:38:35.239716 149:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:38:35.239716 150:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:38:35.239716 151:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:38:35.239716 152:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:38:35.239716 153:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:38:35.239716 154:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:38:35.239716 155:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:38:35.239716 156:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:38:35.239716 157:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:38:35.239716 158:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:38:35.239716 159:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:38:35.239716 160:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:38:35.239716 161:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:38:35.239716 162:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:38:35.239716 163: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:38:35.239716 164:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:38:35.239716 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:38:35.239716 [95mSKETCH REBUILD: : Sending 'didSave' notification to Clangd[0m
17:38:35.239716 [91mIDE     LS --> Clangd NOTIF textDocument/didSave[0m
17:38:35.239716 OUT Elapsed: 0s
17:38:35.239716 [95mSKETCH REBUILD: : Sending full-text 'didChange' notification to Clangd[0m
17:38:35.239716 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:38:35.239716 OUT Elapsed: 0s
17:38:35.239716 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
17:38:35.239716 [92mIDE <-- LS NOTIF $/progress[0m
17:38:35.239716 OUT Elapsed: 0s
17:38:35.303028 IN Elapsed: 4.6457375s
17:38:35.303028 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 2[0m
17:38:35.303028 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 2[0m
17:38:35.303028 OUT Elapsed: 0s
17:38:35.303028 IN Elapsed: 0s
17:38:35.303028 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:38:35.303028 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
17:38:35.303028 IN Elapsed: 0s
17:38:35.303028 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:38:35.303028 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
17:38:35.309997 [92mIDE <-- LS REQU window/workDoneProgress/create 6[0m
17:38:35.309997 OUT Elapsed: 0s
17:38:35.310121 IN Elapsed: 2.5444637s
17:38:35.310639 [32mIDE --> LS RESP window/workDoneProgress/create 6[0m
17:38:35.310639 [92mIDE <-- LS NOTIF $/progress[0m
17:38:35.310639 OUT Elapsed: 0s
17:38:35.310639 [92mIDE <-- LS NOTIF $/progress[0m
17:38:35.310867 OUT Elapsed: 227.8µs
17:38:35.328351 IN Elapsed: 25.3229ms
17:38:35.328351 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:38:35.328871 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:38:35.328871 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
17:38:35.329231 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
17:38:35.329740 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:38:35.329740 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
17:38:35.329740 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:38:35.329740 OUT Elapsed: 0s
17:38:35.329740 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:38:35.345014 IN Elapsed: 16.663ms
17:38:35.345562 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:38:35.345709 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
17:38:35.345709 IN Elapsed: 0s
17:38:35.345709 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
17:38:35.345709 [91m                            $/progress: backgroundIndexProgress END [0m
17:38:35.345709 [92mIDE <-- LS NOTIF $/progress[0m
17:38:35.345709 OUT Elapsed: 0s
17:40:40.430792 IN Elapsed: 2m5.120153s
17:40:40.430792 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:40.430792 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:40.430792 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@24)[0m
17:40:40.430792 [92m                 textDocument/didChange:   > 64:51-65:0 (len=1) -> "\n    \n"[0m
17:40:40.430792 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:40.430792 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:40.439158 Ino Range: 64:51-65:0 -> Cpp Range:77:51-78:0
17:40:40.439158   > Current sketchmapper content:
17:40:40.439158   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:40.439158   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:40.439158   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:40.439158   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:40.439158   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:40.439158   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:40.439158   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:40.439158   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:40.439158   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:40.439158   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:40.439158  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:40.439158  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:40.439158  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:40.439158  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:40.439158  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:40.439158  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:40.439158  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:40.439158  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:40.439158  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:40.439158  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:40.439158  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:40.439158  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:40.439158  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:40.439158  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:40.439158  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:40.439158  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:40.439158  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:40.439158  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:40.439158  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:40.439158  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:40.439158  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:40.439158  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:40.439158  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:40.439660  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:40.439660  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:40.439660  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:40.439660  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:40.439660  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:40.439660  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:40.439660  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:40.439660  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:40.439660  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:40.439660  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:40.439660  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:40.439660  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:40.439660  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:40.439660  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:40.439660  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:40.439660  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:40.439660  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:40.439660  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:40.439660  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:40.439660  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:40.439660  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:40.439660  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:40.439660  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:40.439660  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:40.439660  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:40.439660  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:40.439660  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:40.439660  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:40.439660  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:40.439660  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:40.439660  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:40.439660  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:40.439660  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:40.439660  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:40.439660  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:40.439660  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:40.439660  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:40.439660  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:40.439660  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:40.439660  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:40.439660  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:40.439660  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:40.439660  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:40.439660  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:40.439660  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:40.439660  78:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:40.439660  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:40.439660  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:40.439660  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:40.439660  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:40.439660  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:40.439660  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:40.439660  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:40.439660  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:40.439660  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:40.439660  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:40.439660  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:40.439660  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:40.439660  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:40.439660  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:40.439660  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:40.439660  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:40.440166  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:40.440166  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:40.440166  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:40.440166  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:40.440166  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:40.440166 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:40.440221 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:40.440221 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:40.440221 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:40.440221 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:40.440221 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:40.440221 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:40.440221 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:40.440221 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:40.440221 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:40.440221 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:40.440221 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:40.440221 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:40.440221 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:40.440221 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:40.440221 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:40.440221 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:40.440221 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:40.440221 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:40.440221 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:40.440221 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:40.440221 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:40.440221 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:40.440221 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:40.440221 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:40.440221 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:40.440221 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:40.440221 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:40.440221 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:40.440221 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:40.440221 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:40.440221 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:40.440221 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:40.440221 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:40.440221 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:40.440221 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:40.440221 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:40.440221 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:40.440221 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:40.440221 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:40.440221 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:40.440221 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:40.440221 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:40.440221 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:40.440221 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:40.440221 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:40.440221 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:40.440221 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:40.440221 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:40.440221 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:40.440221 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:40.440221 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:40.440221 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:40.440221 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:40.440221 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:40.440221 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:40.440221 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:40.440221 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:40.440221 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:40.440221 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:40.440221 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:40.440221 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:40.440221 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:40.440221 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:40.440728 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:40.440728 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:40.440728 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:40.440728 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@23)[0m
17:40:40.440728 [92m                 textDocument/didChange:             > 77:51-78:0 -> "\n    \n"[0m
17:40:40.440728 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:40.440850 OUT Elapsed: 122.4µs
17:40:40.440850 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:40.527699 IN Elapsed: 2m5.18199s
17:40:40.527699 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:40.527699 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:40.527699 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (0 diagnostics):[0m
17:40:40.528739 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp -> file:///C:/Users/woodc/TrshProto/TrshProto.ino[0m
17:40:40.529244 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:40.529244 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (0 diagnostics):[0m
17:40:40.529244 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:40.529244 OUT Elapsed: 0s
17:40:40.529244 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:41.378079 IN Elapsed: 937.2292ms
17:40:41.378079 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:41.378079 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:41.378079 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@25)[0m
17:40:41.378079 [92m                 textDocument/didChange:   > 65:4-65:4 (len=0) -> "S"[0m
17:40:41.378079 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    S
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:41.378079 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:41.390111 Ino Range: 65:4-65:4 -> Cpp Range:78:4-78:4
17:40:41.390111   > Current sketchmapper content:
17:40:41.390111   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:41.390111   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:41.390111   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:41.390111   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:41.390111   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:41.390111   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:41.390111   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:41.390111   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:41.390111   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:41.390111   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:41.390111  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:41.390111  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:41.390111  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:41.390111  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:41.390111  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:41.390111  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:41.390111  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:41.390111  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:41.390111  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:41.390111  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.390111  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:41.390111  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.390111  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:41.390111  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.390111  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:41.390111  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.390111  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:41.390111  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:41.390111  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:41.390111  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:41.390111  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:41.390111  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:41.390111  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:41.390111  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:41.390111  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:41.390111  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:41.390111  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:41.390111  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:41.390111  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:41.390111  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:41.390111  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:41.390111  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:41.390111  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:41.390111  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:41.390111  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:41.390111  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:41.390111  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:41.390111  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:41.390111  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:41.390111  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:41.390111  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:41.390111  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:41.390111  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:41.390111  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:41.390111  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:41.390111  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:41.390111  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:41.390111  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:41.390111  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:41.390111  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:41.390111  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:41.390111  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:41.390111  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:41.390111  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:41.390111  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:41.390111  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:41.390111  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:41.390111  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:41.390111  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:41.390111  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:41.390111  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:41.390111  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:41.390111  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:41.390111  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:41.390111  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:41.390111  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:41.390111  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:41.390111  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:41.390111  78:     S                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:41.390111  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:41.390111  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:41.390111  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:41.390111  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:41.390111  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:41.390111  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:41.390111  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:41.390111  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:41.390111  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:41.390111  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:41.390111  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:41.390111  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:41.390111  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:41.390111  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:41.416275  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:41.416275  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:41.416275  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:41.416275  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:41.416275  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:41.416275  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:41.416275  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:41.416275 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:41.416275 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:41.416275 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:41.416275 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:41.416275 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:41.416783 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:41.416783 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:41.416783 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:41.416783 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:41.416783 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:41.416783 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:41.416783 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:41.416783 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:41.416783 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:41.416783 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:41.416783 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:41.416783 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:41.416783 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:41.416783 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:41.416783 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:41.416783 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:41.416783 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:41.416783 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:41.416783 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:41.416783 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:41.416783 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:41.416783 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:41.416783 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:41.416783 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:41.416783 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:41.416783 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:41.416783 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:41.416783 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:41.416783 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:41.416783 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:41.416783 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:41.416783 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:41.416783 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:41.416783 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:41.416783 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:41.416783 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:41.416783 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:41.416783 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:41.416783 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:41.416783 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:41.416783 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:41.416783 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:41.416783 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:41.416783 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:41.416783 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:41.416783 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:41.416783 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:41.416783 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:41.416783 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:41.416783 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:41.416783 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:41.416783 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:41.416783 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:41.416783 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:41.416783 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:41.416783 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:41.416783 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:41.416783 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:41.416783 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:41.416783 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:41.416783 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:41.416783 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:41.416783 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@24)[0m
17:40:41.416783 [92m                 textDocument/didChange:             > 78:4-78:4 -> "S"[0m
17:40:41.416783 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:41.416783 OUT Elapsed: 0s
17:40:41.416783 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:41.416783 IN Elapsed: 0s
17:40:41.416783 [92mIDE --> LS REQU textDocument/completion 8[0m
17:40:41.416783 [92m                textDocument/completion 8: [93mread-locked[0m[0m
17:40:41.416783 [92m                textDocument/completion 8: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:41.417874 [92m                textDocument/completion 8: file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:5 -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:5[0m
17:40:41.417874 [91mIDE     LS --> Clangd REQU textDocument/completion 8[0m
17:40:41.417874 OUT Elapsed: 0s
17:40:41.446027 IN Elapsed: 918.3283ms
17:40:41.449589 [31mIDE     LS <-- Clangd RESP textDocument/completion 8[0m
17:40:41.450094 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.450094 [92m                textDocument/completion 8: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.450094 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.450094 [92m                textDocument/completion 8:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"WString.h\"\n"[0m
17:40:41.450094 [92m                textDocument/completion 8: converted to:[0m
17:40:41.450094 [92m                textDocument/completion 8:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.450094 [92m                textDocument/completion 8:     > file:///not-ino:0:0-0:0 -> "#include \"WString.h\"\n"[0m
17:40:41.450094 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.450094 [92m                textDocument/completion 8: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.450094 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.450094 [92m                textDocument/completion 8:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"WString.h\"\n"[0m
17:40:41.450094 [92m                textDocument/completion 8: converted to:[0m
17:40:41.450094 [92m                textDocument/completion 8:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.450094 [92m                textDocument/completion 8:     > file:///not-ino:0:0-0:0 -> "#include \"WString.h\"\n"[0m
17:40:41.450094 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.450094 [92m                textDocument/completion 8: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.453079 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.453079 [92m                textDocument/completion 8:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"Stream.h\"\n"[0m
17:40:41.453079 [92m                textDocument/completion 8: converted to:[0m
17:40:41.453079 [92m                textDocument/completion 8:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.453079 [92m                textDocument/completion 8:     > file:///not-ino:0:0-0:0 -> "#include \"Stream.h\"\n"[0m
17:40:41.453811 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.453811 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.454319 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.454319 [92m                textDocument/completion 8: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.455280 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.455280 [92m                textDocument/completion 8:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.455280 [92m                textDocument/completion 8: converted to:[0m
17:40:41.455280 [92m                textDocument/completion 8:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.455280 [92m                textDocument/completion 8:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.455280 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.455280 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.455280 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.455280 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.455280 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.458763 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.459269 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.460678 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.461185 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.461781 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.462525 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.463520 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.464111 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.464692 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.465196 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.465723 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.466354 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.466940 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.467443 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.467962 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.468513 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.469581 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.470086 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.470086 [92m                textDocument/completion 8: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.470738 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:1:0-1:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.470738 [92m                textDocument/completion 8:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:1:0-1:0 -> "#include <cstddef>\n"[0m
17:40:41.470738 [92m                textDocument/completion 8: converted to:[0m
17:40:41.470738 [92m                textDocument/completion 8:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.470738 [92m                textDocument/completion 8:     > file:///not-ino:0:0-0:0 -> "#include <cstddef>\n"[0m
17:40:41.471242 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.472279 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.472950 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.472950 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.472950 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.476363 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.477368 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.478387 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.478387 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.478387 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.479989 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.480664 [92m                textDocument/completion 8: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.480664 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.481438 [92m                textDocument/completion 8:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.481438 [92m                textDocument/completion 8: converted to:[0m
17:40:41.481438 [92m                textDocument/completion 8:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.481438 [92m                textDocument/completion 8:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.481946 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.482713 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.483339 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.485387 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.485894 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.486778 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.486778 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.487398 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.487903 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.489018 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.489545 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.490138 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.491263 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.491776 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.492005 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.492510 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.493021 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.493540 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.494050 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.494050 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.495114 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.495181 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.496211 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.496741 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.497385 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.497385 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.497888 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.498398 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.498933 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.498933 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.500106 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.500610 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.501135 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.501683 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.502210 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.502734 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.502734 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.503766 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.503766 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.504814 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.505338 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.505869 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.505869 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.506393 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.506915 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.506915 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.507460 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.508092 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.509724 IN Elapsed: 63.1902ms
17:40:41.509724 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.509724 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:41.509724 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:41.509724 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (5 diagnostics):[0m
17:40:41.509724 [91m                            textDocument/publishDiagnostics:   > 78:4 - Error: "undeclared_var_use"[0m
17:40:41.509724 [91m                            textDocument/publishDiagnostics:   > 99:20 - Error: "undeclared_var_use"[0m
17:40:41.509724 [91m                            textDocument/publishDiagnostics:   > 101:12 - Error: "undeclared_var_use"[0m
17:40:41.509724 [91m                            textDocument/publishDiagnostics:   > 102:13 - Error: "undeclared_var_use"[0m
17:40:41.509724 [91m                            textDocument/publishDiagnostics:   > 103:13 - Error: "undeclared_var_use"[0m
17:40:41.510229 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.510229 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.510746 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.511275 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:99:20-99:25 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:86:20-86:25 (.ino)[0m
17:40:41.511337 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.511337 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:101:12-101:17 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:88:12-88:17 (.ino)[0m
17:40:41.512373 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:102:13-102:18 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:89:13-89:18 (.ino)[0m
17:40:41.512373 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.512951 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:103:13-103:18 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:90:13-90:18 (.ino)[0m
17:40:41.512951 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.513515 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:41.513515 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (5 diagnostics):[0m
17:40:41.513515 [91m                            textDocument/publishDiagnostics:     > 65:4 - Error: "undeclared_var_use"[0m
17:40:41.513515 [91m                            textDocument/publishDiagnostics:     > 86:20 - Error: "undeclared_var_use"[0m
17:40:41.513515 [91m                            textDocument/publishDiagnostics:     > 88:12 - Error: "undeclared_var_use"[0m
17:40:41.513515 [91m                            textDocument/publishDiagnostics:     > 89:13 - Error: "undeclared_var_use"[0m
17:40:41.513515 [91m                            textDocument/publishDiagnostics:     > 90:13 - Error: "undeclared_var_use"[0m
17:40:41.513515 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:41.513515 OUT Elapsed: 0s
17:40:41.513515 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:41.513515 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.514090 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.514659 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.514659 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.515304 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.515809 [92m                textDocument/completion 8: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:5 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:5 (.ino)[0m
17:40:41.515809 [92m                textDocument/completion 8: <-- completion(100 items)[0m
17:40:41.515809 [92m                textDocument/completion 8: [93mread-unlocked[0m[0m
17:40:41.515809 [32mIDE <-- LS RESP textDocument/completion 8[0m
17:40:41.516326 OUT Elapsed: 0s
17:40:41.687843 IN Elapsed: 171.5162ms
17:40:41.687843 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:41.687843 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:41.687843 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@26)[0m
17:40:41.687843 [92m                 textDocument/didChange:   > 65:5-65:5 (len=0) -> "er"[0m
17:40:41.690695 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Ser
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:41.690695 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:41.695128 Ino Range: 65:5-65:5 -> Cpp Range:78:5-78:5
17:40:41.695634   > Current sketchmapper content:
17:40:41.695634   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:41.695634   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:41.695634   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:41.695634   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:41.695634   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:41.695634   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:41.695634   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:41.695634   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:41.695634   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:41.695634   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:41.695634  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:41.695634  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:41.695634  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:41.695634  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:41.695634  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:41.695634  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:41.695634  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:41.695634  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:41.695634  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:41.695634  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.695634  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:41.695634  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.695634  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:41.695634  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.695634  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:41.695634  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.695634  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:41.695634  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:41.695634  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:41.695634  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:41.695634  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:41.695634  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:41.695634  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:41.695634  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:41.695634  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:41.695634  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:41.695634  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:41.695634  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:41.695634  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:41.695634  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:41.695634  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:41.695634  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:41.695634  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:41.695634  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:41.695634  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:41.695634  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:41.695634  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:41.695634  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:41.695634  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:41.695634  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:41.695634  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:41.695634  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:41.695634  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:41.695634  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:41.695634  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:41.695634  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:41.695634  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:41.695634  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:41.695634  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:41.695634  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:41.695634  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:41.695634  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:41.695634  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:41.695634  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:41.695634  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:41.695634  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:41.695634  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:41.695634  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:41.695634  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:41.695634  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:41.695634  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:41.695634  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:41.695634  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:41.695634  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:41.695634  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:41.695634  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:41.695634  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:41.695634  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:41.695634  78:     Ser                                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:41.695634  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:41.695634  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:41.695634  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:41.695634  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:41.695634  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:41.695634  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:41.695634  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:41.695634  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:41.695634  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:41.695634  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:41.695634  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:41.695634  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:41.696159  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:41.696159  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:41.696159  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:41.696159  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:41.696159  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:41.696159  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:41.696159  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:41.696159  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:41.696159  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:41.696159 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:41.696159 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:41.696159 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:41.696159 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:41.696159 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:41.696159 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:41.696159 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:41.696159 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:41.696159 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:41.696159 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:41.696159 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:41.696159 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:41.696159 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:41.696159 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:41.696159 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:41.696159 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:41.696159 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:41.696159 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:41.696159 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:41.696159 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:41.696159 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:41.696159 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:41.696159 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:41.696159 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:41.696159 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:41.696159 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:41.696159 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:41.696159 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:41.696159 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:41.696159 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:41.696159 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:41.696159 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:41.696159 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:41.696159 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:41.696159 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:41.696159 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:41.696159 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:41.696159 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:41.696159 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:41.696159 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:41.696159 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:41.696159 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:41.696159 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:41.696159 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:41.696159 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:41.696159 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:41.696159 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:41.696159 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:41.696159 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:41.696159 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:41.696159 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:41.696159 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:41.696159 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:41.696159 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:41.696159 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:41.696159 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:41.696159 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:41.696159 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:41.696159 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:41.696159 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:41.696159 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:41.696159 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:41.696159 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:41.696159 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:41.696159 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:41.696159 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:41.696159 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:41.696159 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@25)[0m
17:40:41.696159 [92m                 textDocument/didChange:             > 78:5-78:5 -> "er"[0m
17:40:41.696680 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:41.696680 OUT Elapsed: 0s
17:40:41.696680 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:41.696680 IN Elapsed: 0s
17:40:41.696680 [92mIDE --> LS REQU textDocument/completion 9[0m
17:40:41.696680 [92m                textDocument/completion 9: [93mread-locked[0m[0m
17:40:41.696918 [92m                textDocument/completion 9: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:41.697944 [92m                textDocument/completion 9: file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:7 -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:7[0m
17:40:41.697944 [91mIDE     LS --> Clangd REQU textDocument/completion 9[0m
17:40:41.697944 OUT Elapsed: 0s
17:40:41.716701 IN Elapsed: 206.9769ms
17:40:41.717918 [31mIDE     LS <-- Clangd RESP textDocument/completion 9[0m
17:40:41.718946 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.718946 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.719474 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.719474 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.719474 [92m                textDocument/completion 9: converted to:[0m
17:40:41.719474 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.719474 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.719474 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.719474 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.720800 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.720800 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.720800 [92m                textDocument/completion 9: converted to:[0m
17:40:41.720800 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.720800 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.721232 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.722365 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.723710 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.723710 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.724283 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.724283 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.724283 [92m                textDocument/completion 9: converted to:[0m
17:40:41.724283 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.724283 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.724790 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.724790 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.724790 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.724790 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.724790 [92m                textDocument/completion 9: converted to:[0m
17:40:41.724790 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.724790 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.725798 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.725798 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.727048 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.727048 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.727048 [92m                textDocument/completion 9: converted to:[0m
17:40:41.727048 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.727048 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.728569 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.728569 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.728569 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.728569 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.728569 [92m                textDocument/completion 9: converted to:[0m
17:40:41.728569 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.728569 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.728569 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.728569 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.730596 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.730596 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.730596 [92m                textDocument/completion 9: converted to:[0m
17:40:41.730596 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.730596 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.730933 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.730933 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.731996 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.731996 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.731996 [92m                textDocument/completion 9: converted to:[0m
17:40:41.731996 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.731996 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.732301 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.732301 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.733004 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.733004 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.733004 [92m                textDocument/completion 9: converted to:[0m
17:40:41.733004 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.733004 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.733510 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.733510 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.734120 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.734120 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.734120 [92m                textDocument/completion 9: converted to:[0m
17:40:41.734120 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.734120 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.734625 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.735180 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.735702 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.735702 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.735702 [92m                textDocument/completion 9: converted to:[0m
17:40:41.735702 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.735702 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.736234 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.736234 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.736234 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.736234 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.736234 [92m                textDocument/completion 9: converted to:[0m
17:40:41.736234 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.736234 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.736753 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.736753 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.737271 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.737271 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.737271 [92m                textDocument/completion 9: converted to:[0m
17:40:41.737271 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.737271 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.737789 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.737789 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.737892 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.737892 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.737892 [92m                textDocument/completion 9: converted to:[0m
17:40:41.737892 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.737892 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.738400 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.738400 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.738931 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.738931 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.738931 [92m                textDocument/completion 9: converted to:[0m
17:40:41.738931 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.738931 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.739457 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.739457 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.739982 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.739982 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.739982 [92m                textDocument/completion 9: converted to:[0m
17:40:41.739982 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.739982 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.739982 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.740503 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.740628 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.740628 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.740628 [92m                textDocument/completion 9: converted to:[0m
17:40:41.740628 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.740628 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.741326 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.741326 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.741831 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.741831 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.741831 [92m                textDocument/completion 9: converted to:[0m
17:40:41.741831 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.741831 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.742351 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.742351 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.742955 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.742955 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.742955 [92m                textDocument/completion 9: converted to:[0m
17:40:41.742955 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.742955 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.743586 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.743586 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.744151 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.744151 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.744151 [92m                textDocument/completion 9: converted to:[0m
17:40:41.744151 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.744151 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.744770 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.744770 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.745304 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.745304 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.745304 [92m                textDocument/completion 9: converted to:[0m
17:40:41.745304 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.745304 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.745962 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.745962 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.746466 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.746466 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.746466 [92m                textDocument/completion 9: converted to:[0m
17:40:41.746466 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.746466 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.747079 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.747079 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.747583 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.747583 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.747583 [92m                textDocument/completion 9: converted to:[0m
17:40:41.747583 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.747583 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.748105 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.748105 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.748105 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.748105 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.748105 [92m                textDocument/completion 9: converted to:[0m
17:40:41.748105 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.748105 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.749186 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.749186 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.749289 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.749289 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.749289 [92m                textDocument/completion 9: converted to:[0m
17:40:41.749289 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.749289 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.749853 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.749853 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.750359 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.750359 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.750359 [92m                textDocument/completion 9: converted to:[0m
17:40:41.750359 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.750359 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.750899 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.750899 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.750899 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.750899 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.750899 [92m                textDocument/completion 9: converted to:[0m
17:40:41.750899 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.750899 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.751569 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.751569 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.752154 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.752154 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.752154 [92m                textDocument/completion 9: converted to:[0m
17:40:41.752154 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.752154 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.752659 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.753290 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.753845 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.754349 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.754876 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.754876 [92m                textDocument/completion 9: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp clang/textEdit (1 elements)[0m
17:40:41.755777 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
17:40:41.755777 [92m                textDocument/completion 9:   > file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.755777 [92m                textDocument/completion 9: converted to:[0m
17:40:41.755777 [92m                textDocument/completion 9:   file:///not-ino ino/textEdit (1 elements)[0m
17:40:41.755777 [92m                textDocument/completion 9:     > file:///not-ino:0:0-0:0 -> "#include \"HardwareSerial.h\"\n"[0m
17:40:41.755777 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.756284 [92m                textDocument/completion 9: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.756284 [92m                textDocument/completion 9: <-- completion(37 items)[0m
17:40:41.756284 [92m                textDocument/completion 9: [93mread-unlocked[0m[0m
17:40:41.760488 [32mIDE <-- LS RESP textDocument/completion 9[0m
17:40:41.760488 OUT Elapsed: 0s
17:40:41.780717 IN Elapsed: 62.7988ms
17:40:41.780717 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:41.780717 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:41.780717 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (5 diagnostics):[0m
17:40:41.780717 [91m                            textDocument/publishDiagnostics:   > 78:4 - Error: "undeclared_var_use"[0m
17:40:41.780717 [91m                            textDocument/publishDiagnostics:   > 99:20 - Error: "undeclared_var_use"[0m
17:40:41.780717 [91m                            textDocument/publishDiagnostics:   > 101:12 - Error: "undeclared_var_use"[0m
17:40:41.780717 [91m                            textDocument/publishDiagnostics:   > 102:13 - Error: "undeclared_var_use"[0m
17:40:41.780717 [91m                            textDocument/publishDiagnostics:   > 103:13 - Error: "undeclared_var_use"[0m
17:40:41.781746 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:7 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:7 (.ino)[0m
17:40:41.782265 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:99:20-99:25 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:86:20-86:25 (.ino)[0m
17:40:41.782784 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:101:12-101:17 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:88:12-88:17 (.ino)[0m
17:40:41.782899 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:102:13-102:18 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:89:13-89:18 (.ino)[0m
17:40:41.783525 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:103:13-103:18 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:90:13-90:18 (.ino)[0m
17:40:41.783525 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:41.783525 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (5 diagnostics):[0m
17:40:41.783525 [91m                            textDocument/publishDiagnostics:     > 65:4 - Error: "undeclared_var_use"[0m
17:40:41.783525 [91m                            textDocument/publishDiagnostics:     > 86:20 - Error: "undeclared_var_use"[0m
17:40:41.783525 [91m                            textDocument/publishDiagnostics:     > 88:12 - Error: "undeclared_var_use"[0m
17:40:41.783525 [91m                            textDocument/publishDiagnostics:     > 89:13 - Error: "undeclared_var_use"[0m
17:40:41.783525 [91m                            textDocument/publishDiagnostics:     > 90:13 - Error: "undeclared_var_use"[0m
17:40:41.783525 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:41.783525 OUT Elapsed: 0s
17:40:41.783525 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:41.788920 IN Elapsed: 28.4324ms
17:40:41.788920 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:41.788920 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:41.788920 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@27)[0m
17:40:41.788920 [92m                 textDocument/didChange:   > 65:7-65:7 (len=0) -> "i"[0m
17:40:41.788920 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Seri
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:41.789427 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:41.790736 Ino Range: 65:7-65:7 -> Cpp Range:78:7-78:7
17:40:41.790736   > Current sketchmapper content:
17:40:41.790736   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:41.790736   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:41.790736   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:41.790736   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:41.790736   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:41.790736   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:41.790736   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:41.790736   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:41.790736   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:41.790736   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:41.790736  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:41.790736  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:41.790736  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:41.790736  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:41.790736  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:41.790736  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:41.790736  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:41.790736  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:41.790736  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:41.790736  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.790736  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:41.790736  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.790736  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:41.790736  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.790736  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:41.790736  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.790736  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:41.790736  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:41.790736  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:41.790736  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:41.790736  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:41.790736  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:41.790736  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:41.790736  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:41.790736  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:41.790736  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:41.790736  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:41.790736  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:41.790736  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:41.790736  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:41.790736  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:41.790736  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:41.790736  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:41.790736  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:41.790736  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:41.790736  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:41.790736  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:41.790736  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:41.790736  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:41.790736  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:41.790736  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:41.790736  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:41.790736  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:41.790736  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:41.790736  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:41.790736  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:41.790736  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:41.790736  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:41.790736  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:41.790736  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:41.790736  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:41.791240  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:41.791240  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:41.791240  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:41.791240  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:41.791240  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:41.791240  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:41.791240  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:41.791240  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:41.791240  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:41.791240  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:41.791240  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:41.791240  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:41.791240  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:41.791240  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:41.791240  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:41.791240  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:41.791240  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:41.791240  78:     Seri                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:41.791240  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:41.791240  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:41.791240  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:41.791240  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:41.791240  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:41.791240  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:41.791240  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:41.791352  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:41.791352  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:41.791352  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:41.791352  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:41.791352  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:41.791352  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:41.791352  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:41.791352  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:41.791352  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:41.791352  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:41.791352  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:41.791352  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:41.791352  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:41.791352  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:41.791352 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:41.791352 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:41.791352 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:41.791352 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:41.791352 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:41.791352 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:41.791352 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:41.791352 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:41.791352 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:41.791352 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:41.791352 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:41.791352 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:41.791352 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:41.791352 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:41.791352 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:41.791352 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:41.791352 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:41.791352 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:41.791352 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:41.791352 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:41.791352 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:41.791352 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:41.791352 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:41.791352 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:41.791352 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:41.791352 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:41.791352 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:41.791352 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:41.791352 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:41.791352 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:41.791352 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:41.791352 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:41.791352 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:41.791352 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:41.791352 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:41.791352 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:41.791352 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:41.791352 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:41.791352 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:41.791352 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:41.791352 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:41.791352 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:41.791352 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:41.791352 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:41.791352 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:41.791352 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:41.791352 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:41.791352 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:41.791352 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:41.791352 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:41.791352 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:41.791352 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:41.791352 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:41.791352 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:41.791352 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:41.791352 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:41.791352 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:41.791352 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:41.791352 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:41.791352 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:41.791352 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:41.791352 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:41.791352 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:41.791352 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:41.791352 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:41.791352 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:41.791352 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:41.791352 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@26)[0m
17:40:41.791352 [92m                 textDocument/didChange:             > 78:7-78:7 -> "i"[0m
17:40:41.791352 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:41.791352 OUT Elapsed: 0s
17:40:41.791352 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:41.866461 IN Elapsed: 85.7442ms
17:40:41.866461 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:41.866461 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:41.866461 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (5 diagnostics):[0m
17:40:41.866461 [91m                            textDocument/publishDiagnostics:   > 78:4 - Error: "undeclared_var_use"[0m
17:40:41.866461 [91m                            textDocument/publishDiagnostics:   > 99:20 - Error: "undeclared_var_use"[0m
17:40:41.866461 [91m                            textDocument/publishDiagnostics:   > 101:12 - Error: "undeclared_var_use"[0m
17:40:41.866461 [91m                            textDocument/publishDiagnostics:   > 102:13 - Error: "undeclared_var_use"[0m
17:40:41.866461 [91m                            textDocument/publishDiagnostics:   > 103:13 - Error: "undeclared_var_use"[0m
17:40:41.866966 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:8 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:8 (.ino)[0m
17:40:41.867509 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:99:20-99:25 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:86:20-86:25 (.ino)[0m
17:40:41.868058 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:101:12-101:17 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:88:12-88:17 (.ino)[0m
17:40:41.868058 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:102:13-102:18 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:89:13-89:18 (.ino)[0m
17:40:41.868612 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:103:13-103:18 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:90:13-90:18 (.ino)[0m
17:40:41.869149 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:41.869149 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (5 diagnostics):[0m
17:40:41.869149 [91m                            textDocument/publishDiagnostics:     > 65:4 - Error: "undeclared_var_use"[0m
17:40:41.869149 [91m                            textDocument/publishDiagnostics:     > 86:20 - Error: "undeclared_var_use"[0m
17:40:41.869149 [91m                            textDocument/publishDiagnostics:     > 88:12 - Error: "undeclared_var_use"[0m
17:40:41.869149 [91m                            textDocument/publishDiagnostics:     > 89:13 - Error: "undeclared_var_use"[0m
17:40:41.869149 [91m                            textDocument/publishDiagnostics:     > 90:13 - Error: "undeclared_var_use"[0m
17:40:41.869149 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:41.869149 OUT Elapsed: 0s
17:40:41.869149 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:41.885701 IN Elapsed: 94.3484ms
17:40:41.885701 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:41.885701 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:41.885701 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@28)[0m
17:40:41.885701 [92m                 textDocument/didChange:   > 65:8-65:8 (len=0) -> "a"[0m
17:40:41.892136 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Seria
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:41.892644 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:41.894236 Ino Range: 65:8-65:8 -> Cpp Range:78:8-78:8
17:40:41.894236   > Current sketchmapper content:
17:40:41.894748   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:41.894748   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:41.894748   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:41.894748   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:41.894748   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:41.894748   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:41.894748   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:41.894748   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:41.894748   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:41.894748   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:41.894748  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:41.894748  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:41.894748  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:41.894748  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:41.894748  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:41.894748  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:41.894748  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:41.894748  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:41.894748  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:41.894748  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.894748  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:41.894748  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.894748  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:41.894748  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.894748  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:41.894748  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:41.894748  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:41.894748  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:41.894748  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:41.894748  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:41.894748  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:41.894748  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:41.894748  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:41.894748  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:41.894748  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:41.894748  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:41.894748  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:41.894748  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:41.894748  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:41.894748  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:41.894748  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:41.894748  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:41.894748  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:41.894748  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:41.894748  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:41.894748  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:41.894748  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:41.894748  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:41.894748  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:41.894748  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:41.894748  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:41.894748  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:41.894748  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:41.894748  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:41.894748  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:41.894748  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:41.894748  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:41.894748  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:41.894748  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:41.894748  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:41.894748  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:41.894748  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:41.894748  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:41.894748  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:41.894748  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:41.894748  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:41.894748  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:41.894748  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:41.894748  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:41.894748  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:41.894748  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:41.894748  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:41.894748  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:41.894748  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:41.894748  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:41.894748  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:41.894748  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:41.894748  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:41.894748  78:     Seria                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:41.894748  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:41.894748  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:41.894748  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:41.894748  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:41.894748  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:41.894748  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:41.894748  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:41.894748  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:41.894748  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:41.894748  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:41.894748  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:41.894748  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:41.894748  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:41.894748  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:41.894748  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:41.894748  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:41.894748  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:41.894748  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:41.894748  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:41.894748  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:41.894748  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:41.894748 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:41.894748 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:41.894748 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:41.894748 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:41.894748 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:41.894748 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:41.894748 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:41.894748 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:41.894748 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:41.895294 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:41.895294 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:41.895294 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:41.895294 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:41.895294 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:41.895294 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:41.895294 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:41.895294 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:41.895294 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:41.895294 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:41.895294 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:41.895294 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:41.895294 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:41.895294 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:41.895294 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:41.895294 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:41.895294 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:41.895294 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:41.895294 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:41.895294 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:41.895294 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:41.895294 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:41.895294 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:41.895294 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:41.895294 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:41.895294 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:41.895294 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:41.895294 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:41.895294 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:41.895294 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:41.895294 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:41.895294 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:41.895294 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:41.895294 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:41.895294 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:41.895294 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:41.895294 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:41.895294 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:41.895294 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:41.895294 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:41.895294 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:41.895294 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:41.895294 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:41.895294 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:41.895294 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:41.895294 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:41.895294 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:41.895294 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:41.895294 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:41.895294 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:41.895294 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:41.895294 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:41.895294 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:41.895294 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:41.895294 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:41.895294 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:41.895294 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:41.895294 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:41.895294 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@27)[0m
17:40:41.895294 [92m                 textDocument/didChange:             > 78:8-78:8 -> "a"[0m
17:40:41.895294 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:41.895294 OUT Elapsed: 0s
17:40:41.895294 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:41.972386 IN Elapsed: 105.9246ms
17:40:41.972386 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:41.972386 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:41.972892 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (2 diagnostics):[0m
17:40:41.972892 [91m                            textDocument/publishDiagnostics:   > 78:4 - Error: "undeclared_var_use_suggest"[0m
17:40:41.972892 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_semi_after_expr"[0m
17:40:41.973468 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:9 (.ino)[0m
17:40:41.974645 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/HardwareSerial.h:142:24-142:30 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/HardwareSerial.h:142:24-142:30 (ext file)[0m
17:40:41.974645 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:41.975168 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:41.975168 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (2 diagnostics):[0m
17:40:41.975168 [91m                            textDocument/publishDiagnostics:     > 65:4 - Error: "undeclared_var_use_suggest"[0m
17:40:41.975168 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_semi_after_expr"[0m
17:40:41.975168 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:41.975168 OUT Elapsed: 0s
17:40:41.975168 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:42.002376 IN Elapsed: 107.0822ms
17:40:42.002376 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:42.002798 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:42.002798 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@29)[0m
17:40:42.002798 [92m                 textDocument/didChange:   > 65:9-65:9 (len=0) -> "l"[0m
17:40:42.002798 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:42.003305 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:42.004732 Ino Range: 65:9-65:9 -> Cpp Range:78:9-78:9
17:40:42.004732   > Current sketchmapper content:
17:40:42.004732   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:42.004732   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:42.004732   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:42.004732   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:42.004732   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:42.004732   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:42.004732   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:42.004732   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:42.004732   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:42.004732   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:42.004732  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:42.004732  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:42.004732  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:42.004732  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:42.004732  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:42.004732  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:42.004732  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:42.004732  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:42.004732  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:42.004732  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.004732  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:42.004732  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.004732  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:42.004732  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.004732  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:42.004732  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.004732  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:42.004732  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:42.004732  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.004732  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.004732  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:42.004732  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:42.004732  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:42.004732  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:42.004732  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:42.004732  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:42.004732  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:42.004732  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:42.004732  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:42.004732  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:42.004732  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:42.004732  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:42.004732  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:42.004732  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:42.004732  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:42.004732  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:42.004732  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:42.004732  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:42.004732  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:42.004732  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:42.004732  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:42.004732  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:42.004732  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:42.004732  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:42.004732  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:42.004732  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:42.004732  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:42.004732  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:42.004732  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:42.004732  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:42.004732  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:42.004732  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:42.004732  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:42.004732  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:42.004732  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:42.004732  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:42.004732  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:42.004732  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:42.004732  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:42.004732  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:42.004732  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:42.004732  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:42.004732  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:42.004732  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:42.004732  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:42.004732  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:42.004732  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:42.004732  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:42.004732  78:     Serial                                                   | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:42.004732  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:42.004732  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:42.004732  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:42.005236  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:42.005236  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:42.005236  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:42.005236  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:42.005236  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:42.005236  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:42.005236  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:42.005236  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:42.005236  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:42.005236  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:42.005236  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:42.005236  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:42.005236  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:42.005236  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:42.005236  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:42.005236  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:42.005236  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:42.005236  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:42.005236 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:42.005236 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:42.005236 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:42.005236 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:42.005236 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:42.005236 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:42.005236 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:42.005236 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:42.005236 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:42.005236 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:42.005236 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:42.005236 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:42.005236 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:42.005236 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:42.005236 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:42.005236 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:42.005236 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:42.005236 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:42.005236 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.005236 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.005236 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:42.005236 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:42.005236 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:42.005236 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:42.005236 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:42.005236 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:42.005236 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:42.005236 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:42.005236 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:42.005236 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:42.005236 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:42.005236 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:42.005236 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:42.005236 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:42.005236 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:42.005236 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:42.005236 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:42.005236 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:42.005236 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:42.005236 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:42.005236 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:42.005236 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:42.005236 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:42.005236 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:42.005236 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:42.005236 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:42.005236 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:42.005236 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:42.005236 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:42.005236 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:42.005236 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:42.005236 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:42.005236 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:42.005236 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:42.005236 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:42.005236 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:42.005236 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:42.005236 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:42.005236 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:42.005236 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:42.005236 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:42.005236 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:42.005236 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:42.005236 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:42.005236 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:42.005236 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:42.005236 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:42.005236 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@28)[0m
17:40:42.005236 [92m                 textDocument/didChange:             > 78:9-78:9 -> "l"[0m
17:40:42.005236 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:42.005236 OUT Elapsed: 0s
17:40:42.005236 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:42.085384 IN Elapsed: 112.9983ms
17:40:42.085384 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:42.085384 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:42.085384 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (1 diagnostics):[0m
17:40:42.085384 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_semi_after_expr"[0m
17:40:42.085891 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:42.086433 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:42.086433 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (1 diagnostics):[0m
17:40:42.086433 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_semi_after_expr"[0m
17:40:42.086433 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:42.086433 OUT Elapsed: 0s
17:40:42.086433 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:42.210605 IN Elapsed: 205.369ms
17:40:42.210605 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:42.210605 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:42.210605 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@30)[0m
17:40:42.210605 [92m                 textDocument/didChange:   > 65:10-65:10 (len=0) -> "."[0m
17:40:42.210605 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:42.210605 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:42.215841 Ino Range: 65:10-65:10 -> Cpp Range:78:10-78:10
17:40:42.215841   > Current sketchmapper content:
17:40:42.215841   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:42.215841   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:42.215841   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:42.216351   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:42.216351   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:42.216351   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:42.216351   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:42.216351   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:42.216351   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:42.216351   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:42.216351  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:42.216351  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:42.216351  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:42.216351  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:42.216351  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:42.216351  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:42.216351  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:42.216351  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:42.216685  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:42.216685  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.216685  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:42.216685  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.216685  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:42.216685  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.216685  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:42.216685  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.216685  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:42.216771  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:42.216771  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.216771  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.216771  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:42.216771  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:42.216771  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:42.216771  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:42.216771  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:42.216771  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:42.216771  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:42.216771  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:42.216771  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:42.216771  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:42.216771  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:42.216771  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:42.216771  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:42.216771  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:42.216771  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:42.216771  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:42.216771  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:42.216771  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:42.216771  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:42.216771  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:42.216771  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:42.216771  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:42.216771  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:42.216771  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:42.216771  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:42.216771  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:42.216771  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:42.216771  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:42.216771  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:42.216771  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:42.216771  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:42.216771  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:42.216771  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:42.216771  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:42.216771  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:42.216771  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:42.216771  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:42.216771  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:42.216771  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:42.216771  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:42.216771  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:42.216771  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:42.216771  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:42.216771  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:42.216771  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:42.216771  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:42.216771  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:42.216771  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:42.216771  78:     Serial.                                                  | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:42.216771  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:42.216771  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:42.216771  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:42.216771  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:42.216771  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:42.216771  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:42.216771  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:42.216771  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:42.216771  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:42.216771  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:42.216771  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:42.216771  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:42.216771  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:42.216771  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:42.216771  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:42.216771  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:42.216771  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:42.216771  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:42.216771  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:42.216771  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:42.216771  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:42.216771 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:42.216771 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:42.217383 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:42.217383 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:42.217383 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:42.217383 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:42.217383 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:42.217383 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:42.217383 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:42.217383 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:42.217383 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:42.217383 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:42.217383 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:42.217383 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:42.217383 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:42.217383 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:42.217383 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:42.217383 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:42.217383 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.217383 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.217383 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:42.217383 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:42.217383 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:42.217383 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:42.217383 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:42.217383 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:42.217383 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:42.217383 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:42.217383 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:42.217383 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:42.217383 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:42.217383 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:42.217383 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:42.217383 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:42.217383 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:42.217383 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:42.217383 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:42.217383 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:42.217383 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:42.217383 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:42.217383 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:42.217383 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:42.217383 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:42.217383 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:42.217383 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:42.217383 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:42.217383 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:42.217383 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:42.217383 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:42.217383 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:42.217383 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:42.217383 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:42.217383 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:42.217383 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:42.217383 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:42.217383 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:42.217383 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:42.217383 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:42.218025 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:42.218025 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:42.218025 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:42.218025 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:42.218025 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:42.218025 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:42.218025 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:42.218025 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:42.218025 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:42.218025 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@29)[0m
17:40:42.218025 [92m                 textDocument/didChange:             > 78:10-78:10 -> "."[0m
17:40:42.218290 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:42.218290 OUT Elapsed: 0s
17:40:42.218290 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:42.218290 IN Elapsed: 0s
17:40:42.218290 [92mIDE --> LS REQU textDocument/completion 10[0m
17:40:42.218290 [92m                textDocument/completion 10: [93mread-locked[0m[0m
17:40:42.218857 [92m                textDocument/completion 10: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:42.220751 [92m                textDocument/completion 10: file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11 -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11[0m
17:40:42.220751 [91mIDE     LS --> Clangd REQU textDocument/completion 10[0m
17:40:42.220751 OUT Elapsed: 0s
17:40:42.243500 IN Elapsed: 158.1162ms
17:40:42.255483 [31mIDE     LS <-- Clangd RESP textDocument/completion 10[0m
17:40:42.255989 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.255989 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.255989 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.255989 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.255989 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.258299 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.266686 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.266686 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.266686 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.268779 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.269490 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.269490 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.270044 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.270044 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.270044 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.270044 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.270044 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.272844 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.273350 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.273350 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.274364 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.274364 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.275123 [92m                textDocument/completion 10: Range: file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:11 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:11 (.ino)[0m
17:40:42.275123 [92m                textDocument/completion 10: <-- completion(23 items)[0m
17:40:42.275629 [92m                textDocument/completion 10: [93mread-unlocked[0m[0m
17:40:42.275629 [32mIDE <-- LS RESP textDocument/completion 10[0m
17:40:42.275629 OUT Elapsed: 0s
17:40:42.305020 IN Elapsed: 50.8717ms
17:40:42.305020 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:42.305020 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:42.305020 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (5 diagnostics):[0m
17:40:42.305020 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_unqualified_id"[0m
17:40:42.306043 [91m                            textDocument/publishDiagnostics:   > 99:20 - Error: "undeclared_var_use"[0m
17:40:42.306043 [91m                            textDocument/publishDiagnostics:   > 101:12 - Error: "undeclared_var_use"[0m
17:40:42.306043 [91m                            textDocument/publishDiagnostics:   > 102:13 - Error: "undeclared_var_use"[0m
17:40:42.306043 [91m                            textDocument/publishDiagnostics:   > 103:13 - Error: "undeclared_var_use"[0m
17:40:42.306610 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:42.307117 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:99:20-99:25 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:86:20-86:25 (.ino)[0m
17:40:42.307761 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:101:12-101:17 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:88:12-88:17 (.ino)[0m
17:40:42.308276 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:102:13-102:18 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:89:13-89:18 (.ino)[0m
17:40:42.308970 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:103:13-103:18 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:90:13-90:18 (.ino)[0m
17:40:42.309475 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:42.309475 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (5 diagnostics):[0m
17:40:42.309475 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_unqualified_id"[0m
17:40:42.309475 [91m                            textDocument/publishDiagnostics:     > 86:20 - Error: "undeclared_var_use"[0m
17:40:42.309475 [91m                            textDocument/publishDiagnostics:     > 88:12 - Error: "undeclared_var_use"[0m
17:40:42.309475 [91m                            textDocument/publishDiagnostics:     > 89:13 - Error: "undeclared_var_use"[0m
17:40:42.309475 [91m                            textDocument/publishDiagnostics:     > 90:13 - Error: "undeclared_var_use"[0m
17:40:42.309475 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:42.309475 OUT Elapsed: 0s
17:40:42.309475 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:42.481694 IN Elapsed: 206.0656ms
17:40:42.481694 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:42.481694 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:42.481694 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@31)[0m
17:40:42.481694 [92m                 textDocument/didChange:   > 65:11-65:11 (len=0) -> "p"[0m
17:40:42.482285 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.p
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:42.482794 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:42.484744 Ino Range: 65:11-65:11 -> Cpp Range:78:11-78:11
17:40:42.484744   > Current sketchmapper content:
17:40:42.484744   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:42.484744   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:42.484744   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:42.484744   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:42.484744   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:42.484744   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:42.484744   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:42.484744   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:42.484744   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:42.484744   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:42.484744  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:42.484744  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:42.484744  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:42.484744  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:42.484744  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:42.484744  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:42.484744  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:42.484744  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:42.484744  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:42.484744  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.484744  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:42.484744  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.484744  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:42.484744  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.484744  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:42.484744  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.484744  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:42.484744  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:42.484744  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.484744  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.484744  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:42.484744  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:42.484744  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:42.484744  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:42.484744  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:42.484744  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:42.484744  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:42.484744  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:42.484744  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:42.484744  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:42.484744  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:42.485251  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:42.485251  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:42.485251  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:42.485251  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:42.485251  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:42.485251  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:42.485251  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:42.485251  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:42.485251  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:42.485251  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:42.485251  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:42.485251  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:42.485251  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:42.485251  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:42.485251  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:42.485251  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:42.485251  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:42.485251  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:42.485251  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:42.485251  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:42.485251  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:42.485251  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:42.485251  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:42.485251  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:42.485251  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:42.485251  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:42.485251  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:42.485251  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:42.485251  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:42.485251  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:42.485251  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:42.485251  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:42.485251  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:42.485251  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:42.485251  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:42.485251  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:42.485251  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:42.485251  78:     Serial.p                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:42.485251  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:42.485251  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:42.485251  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:42.485251  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:42.485251  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:42.485251  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:42.485251  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:42.485251  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:42.485251  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:42.485251  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:42.485251  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:42.485251  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:42.485251  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:42.485251  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:42.485251  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:42.485251  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:42.485251  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:42.485251  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:42.485251  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:42.485251  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:42.485251  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:42.485251 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:42.485251 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:42.485251 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:42.485251 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:42.485251 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:42.485251 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:42.485251 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:42.485251 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:42.485251 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:42.485251 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:42.485251 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:42.485251 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:42.485792 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:42.485792 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:42.485792 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:42.485792 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:42.485792 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:42.485792 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:42.485792 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.485792 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.485792 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:42.485792 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:42.485792 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:42.485792 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:42.485792 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:42.485792 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:42.485792 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:42.485792 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:42.485792 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:42.485792 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:42.485792 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:42.485792 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:42.485792 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:42.485792 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:42.485792 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:42.485792 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:42.485792 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:42.485792 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:42.485792 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:42.485792 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:42.486007 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:42.486007 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:42.486007 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:42.486007 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:42.486007 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:42.486007 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:42.486007 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:42.486007 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:42.486007 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:42.486007 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:42.486007 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:42.486007 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:42.486007 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:42.486007 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:42.486007 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:42.486007 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:42.486007 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:42.486007 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:42.486007 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:42.486007 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:42.486007 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:42.486007 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:42.486007 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:42.486007 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:42.486007 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:42.486007 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:42.486007 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:42.486007 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@30)[0m
17:40:42.486007 [92m                 textDocument/didChange:             > 78:11-78:11 -> "p"[0m
17:40:42.486007 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:42.486007 OUT Elapsed: 0s
17:40:42.486007 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:42.568007 IN Elapsed: 262.9866ms
17:40:42.568007 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:42.568007 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:42.568007 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (2 diagnostics):[0m
17:40:42.568007 [91m                            textDocument/publishDiagnostics:   > 78:11 - Error: "no_member"[0m
17:40:42.568007 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_semi_after_expr"[0m
17:40:42.569103 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:12 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:12 (.ino)[0m
17:40:42.569605 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:42.570109 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:42.570109 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (2 diagnostics):[0m
17:40:42.570109 [91m                            textDocument/publishDiagnostics:     > 65:11 - Error: "no_member"[0m
17:40:42.570109 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_semi_after_expr"[0m
17:40:42.570109 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:42.570109 OUT Elapsed: 0s
17:40:42.570109 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:42.673412 IN Elapsed: 187.405ms
17:40:42.673412 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:42.673412 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:42.673412 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@32)[0m
17:40:42.673412 [92m                 textDocument/didChange:   > 65:12-65:12 (len=0) -> "r"[0m
17:40:42.673412 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.pr
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:42.673412 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:42.677663 Ino Range: 65:12-65:12 -> Cpp Range:78:12-78:12
17:40:42.677663   > Current sketchmapper content:
17:40:42.677663   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:42.677663   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:42.677663   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:42.677663   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:42.677663   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:42.677663   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:42.677663   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:42.677663   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:42.677663   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:42.678174   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:42.678174  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:42.678174  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:42.678174  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:42.678174  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:42.678174  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:42.678174  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:42.678174  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:42.678174  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:42.678174  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:42.678174  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.678174  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:42.678174  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.678174  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:42.678174  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.678174  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:42.678174  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.678174  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:42.678174  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:42.678174  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.678174  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.678174  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:42.679190  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:42.679190  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:42.679190  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:42.679190  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:42.679190  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:42.679190  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:42.679190  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:42.679190  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:42.679190  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:42.679190  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:42.679190  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:42.679190  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:42.679190  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:42.679190  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:42.679190  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:42.679190  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:42.679190  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:42.679190  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:42.679190  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:42.679190  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:42.679190  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:42.679190  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:42.679190  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:42.679190  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:42.679190  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:42.679190  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:42.679190  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:42.679190  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:42.679190  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:42.679190  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:42.679190  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:42.679190  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:42.679190  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:42.679190  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:42.679190  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:42.679190  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:42.679190  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:42.679190  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:42.679190  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:42.679190  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:42.679190  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:42.679190  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:42.679190  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:42.679190  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:42.679190  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:42.679190  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:42.679190  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:42.679190  78:     Serial.pr                                                | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:42.679190  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:42.679190  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:42.679190  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:42.679190  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:42.679190  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:42.679190  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:42.679190  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:42.679190  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:42.679190  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:42.679190  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:42.679190  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:42.679190  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:42.679190  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:42.679190  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:42.679190  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:42.679190  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:42.679190  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:42.679190  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:42.679190  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:42.679190  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:42.679190  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:42.679190 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:42.679190 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:42.679190 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:42.679190 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:42.679190 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:42.679190 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:42.679190 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:42.679190 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:42.679190 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:42.679190 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:42.679190 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:42.679190 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:42.679190 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:42.679982 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:42.679982 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:42.679982 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:42.679982 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:42.679982 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:42.679982 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.679982 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.679982 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:42.679982 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:42.679982 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:42.679982 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:42.679982 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:42.679982 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:42.679982 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:42.679982 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:42.679982 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:42.679982 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:42.679982 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:42.679982 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:42.679982 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:42.679982 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:42.679982 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:42.679982 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:42.679982 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:42.679982 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:42.679982 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:42.679982 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:42.679982 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:42.679982 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:42.679982 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:42.679982 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:42.680491 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:42.680491 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:42.680491 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:42.680491 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:42.680491 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:42.680491 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:42.680491 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:42.680491 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:42.680491 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:42.680491 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:42.680491 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:42.680491 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:42.680491 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:42.680491 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:42.680491 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:42.680491 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:42.680491 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:42.680491 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:42.680491 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:42.680491 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:42.680491 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:42.680491 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:42.680491 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:42.680491 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@31)[0m
17:40:42.680491 [92m                 textDocument/didChange:             > 78:12-78:12 -> "r"[0m
17:40:42.680491 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:42.680491 OUT Elapsed: 0s
17:40:42.680773 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:42.737667 IN Elapsed: 56.8938ms
17:40:42.737667 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:42.737667 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:42.737667 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@33)[0m
17:40:42.737667 [92m                 textDocument/didChange:   > 65:13-65:13 (len=0) -> "i"[0m
17:40:42.738582 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.pri
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:42.739221 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:42.740251 Ino Range: 65:13-65:13 -> Cpp Range:78:13-78:13
17:40:42.740251   > Current sketchmapper content:
17:40:42.740251   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:42.740251   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:42.740251   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:42.740251   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:42.740251   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:42.740251   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:42.740251   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:42.740251   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:42.740251   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:42.740251   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:42.740251  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:42.740251  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:42.740251  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:42.740251  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:42.740251  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:42.740251  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:42.740251  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:42.740251  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:42.740251  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:42.740251  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.740251  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:42.740251  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.740251  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:42.740797  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.740797  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:42.740797  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.740797  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:42.740797  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:42.740797  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.740797  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.740797  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:42.740797  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:42.740797  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:42.740797  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:42.740797  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:42.740797  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:42.740797  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:42.740797  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:42.740797  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:42.740797  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:42.740797  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:42.740797  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:42.740797  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:42.740797  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:42.740797  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:42.740797  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:42.740797  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:42.740797  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:42.740797  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:42.740797  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:42.740797  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:42.740797  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:42.740797  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:42.740797  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:42.740797  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:42.740797  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:42.740797  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:42.740797  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:42.740797  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:42.740797  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:42.740797  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:42.740797  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:42.740797  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:42.740797  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:42.740797  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:42.740797  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:42.740797  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:42.740797  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:42.740797  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:42.740797  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:42.740797  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:42.740797  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:42.740797  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:42.740797  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:42.740797  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:42.740797  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:42.740797  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:42.740797  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:42.740797  78:     Serial.pri                                               | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:42.740797  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:42.740797  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:42.740797  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:42.740797  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:42.740797  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:42.740797  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:42.740797  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:42.740797  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:42.740797  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:42.740797  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:42.740797  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:42.740797  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:42.740797  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:42.740797  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:42.740797  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:42.740797  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:42.740797  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:42.740797  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:42.741967  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:42.741967  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:42.741967  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:42.741967 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:42.741967 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:42.741967 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:42.741967 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:42.741967 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:42.741967 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:42.741967 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:42.741967 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:42.741967 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:42.741967 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:42.741967 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:42.741967 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:42.741967 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:42.741967 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:42.741967 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:42.741967 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:42.741967 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:42.741967 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:42.741967 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.741967 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.741967 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:42.741967 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:42.741967 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:42.741967 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:42.741967 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:42.741967 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:42.741967 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:42.741967 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:42.741967 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:42.741967 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:42.741967 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:42.741967 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:42.741967 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:42.741967 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:42.741967 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:42.741967 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:42.741967 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:42.741967 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:42.741967 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:42.741967 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:42.741967 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:42.741967 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:42.741967 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:42.741967 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:42.741967 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:42.741967 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:42.741967 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:42.741967 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:42.741967 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:42.741967 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:42.741967 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:42.741967 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:42.741967 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:42.741967 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:42.741967 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:42.741967 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:42.741967 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:42.741967 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:42.741967 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:42.741967 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:42.741967 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:42.741967 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:42.741967 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:42.741967 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:42.741967 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:42.741967 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:42.741967 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:42.741967 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@32)[0m
17:40:42.741967 [92m                 textDocument/didChange:             > 78:13-78:13 -> "i"[0m
17:40:42.741967 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:42.741967 OUT Elapsed: 0s
17:40:42.741967 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:42.758999 IN Elapsed: 190.9926ms
17:40:42.758999 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:42.760347 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:42.760347 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (2 diagnostics):[0m
17:40:42.760347 [91m                            textDocument/publishDiagnostics:   > 78:11 - Error: "no_member"[0m
17:40:42.760347 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_semi_after_expr"[0m
17:40:42.762454 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:13 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:13 (.ino)[0m
17:40:42.764194 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:42.764795 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:42.764795 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (2 diagnostics):[0m
17:40:42.764795 [91m                            textDocument/publishDiagnostics:     > 65:11 - Error: "no_member"[0m
17:40:42.764795 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_semi_after_expr"[0m
17:40:42.764795 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:42.764795 OUT Elapsed: 0s
17:40:42.765300 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:42.813998 IN Elapsed: 54.9985ms
17:40:42.813998 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:42.813998 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:42.813998 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (2 diagnostics):[0m
17:40:42.813998 [91m                            textDocument/publishDiagnostics:   > 78:11 - Error: "no_member"[0m
17:40:42.813998 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_semi_after_expr"[0m
17:40:42.814571 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:14 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:14 (.ino)[0m
17:40:42.815127 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:42.815127 IN Elapsed: 73.1599ms
17:40:42.815634 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:42.815700 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:42.815700 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (2 diagnostics):[0m
17:40:42.815700 [91m                            textDocument/publishDiagnostics:     > 65:11 - Error: "no_member"[0m
17:40:42.815700 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_semi_after_expr"[0m
17:40:42.815700 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:42.815700 OUT Elapsed: 0s
17:40:42.815700 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:42.815700 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:42.815700 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@34)[0m
17:40:42.815700 [92m                 textDocument/didChange:   > 65:14-65:14 (len=0) -> "n"[0m
17:40:42.815700 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.prin
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:42.816206 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:42.817284 Ino Range: 65:14-65:14 -> Cpp Range:78:14-78:14
17:40:42.817284   > Current sketchmapper content:
17:40:42.817284   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:42.817284   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:42.817284   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:42.817284   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:42.817284   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:42.817284   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:42.817284   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:42.817284   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:42.817284   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:42.817284   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:42.817284  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:42.817284  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:42.817284  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:42.817284  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:42.817284  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:42.817284  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:42.817284  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:42.817284  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:42.817284  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:42.817284  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.817284  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:42.817284  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.817284  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:42.817284  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.817284  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:42.817284  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.817284  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:42.817284  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:42.817284  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.817284  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.817284  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:42.817284  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:42.817284  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:42.817284  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:42.817284  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:42.817284  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:42.817284  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:42.817284  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:42.817284  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:42.817284  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:42.817284  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:42.817284  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:42.817284  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:42.817284  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:42.817822  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:42.817822  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:42.817822  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:42.817822  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:42.817822  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:42.817822  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:42.817822  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:42.817822  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:42.817822  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:42.817822  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:42.817822  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:42.817822  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:42.817822  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:42.817822  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:42.817822  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:42.817822  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:42.817822  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:42.817822  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:42.817822  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:42.817822  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:42.817822  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:42.817822  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:42.817822  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:42.817822  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:42.817822  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:42.817822  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:42.817822  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:42.817822  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:42.817822  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:42.817822  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:42.817822  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:42.817822  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:42.817822  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:42.817967  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:42.817967  78:     Serial.prin                                              | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:42.817967  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:42.817967  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:42.817967  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:42.817967  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:42.817967  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:42.817967  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:42.817967  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:42.817967  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:42.817967  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:42.817967  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:42.817967  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:42.817967  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:42.817967  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:42.817967  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:42.817967  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:42.817967  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:42.817967  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:42.817967  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:42.817967  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:42.817967  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:42.817967  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:42.817967 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:42.817967 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:42.817967 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:42.817967 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:42.817967 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:42.817967 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:42.817967 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:42.817967 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:42.817967 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:42.817967 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:42.817967 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:42.817967 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:42.817967 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:42.817967 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:42.817967 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:42.817967 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:42.817967 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:42.817967 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:42.817967 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.817967 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.817967 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:42.817967 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:42.817967 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:42.817967 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:42.817967 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:42.817967 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:42.817967 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:42.817967 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:42.817967 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:42.817967 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:42.817967 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:42.817967 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:42.817967 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:42.817967 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:42.817967 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:42.817967 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:42.817967 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:42.817967 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:42.817967 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:42.817967 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:42.817967 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:42.817967 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:42.817967 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:42.817967 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:42.817967 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:42.817967 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:42.817967 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:42.817967 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:42.817967 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:42.817967 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:42.817967 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:42.817967 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:42.817967 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:42.817967 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:42.817967 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:42.817967 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:42.817967 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:42.817967 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:42.817967 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:42.817967 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:42.818473 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:42.818473 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:42.818473 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:42.818473 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:42.818473 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:42.818473 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:42.818473 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:42.818473 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@33)[0m
17:40:42.818473 [92m                 textDocument/didChange:             > 78:14-78:14 -> "n"[0m
17:40:42.818473 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:42.818473 OUT Elapsed: 0s
17:40:42.818473 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:42.904566 IN Elapsed: 90.4385ms
17:40:42.904566 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:42.904566 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:42.904566 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (2 diagnostics):[0m
17:40:42.904566 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_semi_after_expr"[0m
17:40:42.904566 [91m                            textDocument/publishDiagnostics:   > 78:11 - Error: "no_member"[0m
17:40:42.905070 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:42.905616 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:15 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:15 (.ino)[0m
17:40:42.906174 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:42.906174 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (2 diagnostics):[0m
17:40:42.906174 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_semi_after_expr"[0m
17:40:42.906174 [91m                            textDocument/publishDiagnostics:     > 65:11 - Error: "no_member"[0m
17:40:42.906174 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:42.906174 OUT Elapsed: 0s
17:40:42.906174 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:42.919982 IN Elapsed: 101.5088ms
17:40:42.919982 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:42.919982 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:42.919982 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@35)[0m
17:40:42.919982 [92m                 textDocument/didChange:   > 65:15-65:15 (len=0) -> "t"[0m
17:40:42.919982 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.print
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:42.920486 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:42.921576 Ino Range: 65:15-65:15 -> Cpp Range:78:15-78:15
17:40:42.921576   > Current sketchmapper content:
17:40:42.921576   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:42.921576   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:42.921576   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:42.921576   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:42.921576   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:42.921576   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:42.921576   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:42.921576   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:42.921576   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:42.921576   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:42.922126  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:42.922126  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:42.922126  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:42.922126  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:42.922126  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:42.922126  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:42.922126  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:42.922126  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:42.922245  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:42.922245  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.922245  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:42.922245  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.922245  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:42.922245  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.922245  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:42.922245  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:42.922245  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:42.922245  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:42.922245  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.922245  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.922245  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:42.922245  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:42.922245  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:42.922245  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:42.922245  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:42.922245  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:42.922245  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:42.922245  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:42.922245  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:42.922245  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:42.922245  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:42.922245  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:42.922245  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:42.922245  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:42.922245  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:42.922245  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:42.922245  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:42.922245  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:42.922245  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:42.922245  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:42.922245  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:42.922245  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:42.922245  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:42.922245  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:42.922245  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:42.922245  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:42.922245  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:42.922245  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:42.922245  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:42.922245  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:42.922245  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:42.922245  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:42.922245  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:42.922245  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:42.922245  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:42.922245  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:42.922245  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:42.922245  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:42.922245  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:42.922245  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:42.922245  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:42.922245  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:42.922245  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:42.922245  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:42.922245  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:42.922245  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:42.922245  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:42.922245  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:42.922245  78:     Serial.print                                             | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:42.922245  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:42.922245  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:42.922245  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:42.922245  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:42.922245  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:42.922245  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:42.922245  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:42.922245  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:42.922245  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:42.922245  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:42.922245  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:42.922245  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:42.922245  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:42.922245  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:42.922245  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:42.922245  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:42.922245  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:42.922245  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:42.922245  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:42.922245  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:42.922767  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:42.922767 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:42.922767 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:42.922822 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:42.922822 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:42.922822 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:42.922822 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:42.922822 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:42.922822 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:42.922822 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:42.922822 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:42.922822 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:42.922822 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:42.922822 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:42.922822 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:42.922822 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:42.922822 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:42.922822 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:42.922822 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:42.922822 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:42.922822 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:42.922822 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:42.922822 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:42.922822 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:42.922822 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:42.922822 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:42.922822 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:42.922822 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:42.922822 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:42.922822 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:42.922822 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:42.922822 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:42.922822 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:42.922822 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:42.922822 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:42.922822 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:42.922822 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:42.922822 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:42.922822 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:42.922822 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:42.922822 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:42.922822 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:42.922822 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:42.922822 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:42.922822 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:42.922822 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:42.922822 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:42.922822 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:42.922822 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:42.922822 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:42.922822 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:42.922822 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:42.922822 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:42.922822 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:42.922822 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:42.922822 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:42.922822 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:42.922822 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:42.922822 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:42.922822 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:42.922822 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:42.922822 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:42.922822 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:42.922822 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:42.922822 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:42.922822 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:42.922822 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:42.922822 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:42.922822 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@34)[0m
17:40:42.922822 [92m                 textDocument/didChange:             > 78:15-78:15 -> "t"[0m
17:40:42.922822 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:42.922822 OUT Elapsed: 0s
17:40:42.922822 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:43.003901 IN Elapsed: 99.3353ms
17:40:43.003901 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:43.003901 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:43.003901 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (2 diagnostics):[0m
17:40:43.003901 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_semi_after_expr"[0m
17:40:43.003901 [91m                            textDocument/publishDiagnostics:   > 78:4 - Error: "bound_member_function"[0m
17:40:43.004490 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:43.004999 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:16 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:16 (.ino)[0m
17:40:43.006596 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:64:11-64:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:64:11-64:16 (ext file)[0m
17:40:43.007768 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:65:11-65:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:65:11-65:16 (ext file)[0m
17:40:43.008836 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:66:11-66:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:66:11-66:16 (ext file)[0m
17:40:43.009928 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:67:11-67:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:67:11-67:16 (ext file)[0m
17:40:43.011759 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:68:11-68:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:68:11-68:16 (ext file)[0m
17:40:43.012950 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:69:11-69:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:69:11-69:16 (ext file)[0m
17:40:43.014809 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:70:11-70:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:70:11-70:16 (ext file)[0m
17:40:43.015863 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:71:11-71:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:71:11-71:16 (ext file)[0m
17:40:43.016924 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:72:11-72:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:72:11-72:16 (ext file)[0m
17:40:43.017983 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:73:11-73:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:73:11-73:16 (ext file)[0m
17:40:43.019052 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:74:11-74:16 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:74:11-74:16 (ext file)[0m
17:40:43.019584 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:43.019584 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (2 diagnostics):[0m
17:40:43.019584 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_semi_after_expr"[0m
17:40:43.019584 [91m                            textDocument/publishDiagnostics:     > 65:4 - Error: "bound_member_function"[0m
17:40:43.019584 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:43.019584 OUT Elapsed: 0s
17:40:43.019584 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:43.072861 IN Elapsed: 150.0387ms
17:40:43.072861 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:43.072861 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:43.072861 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@36)[0m
17:40:43.072861 [92m                 textDocument/didChange:   > 65:16-65:16 (len=0) -> "l"[0m
17:40:43.073372 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.printl
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:43.073923 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:43.075898 Ino Range: 65:16-65:16 -> Cpp Range:78:16-78:16
17:40:43.075898   > Current sketchmapper content:
17:40:43.075898   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:43.075898   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:43.075898   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:43.075898   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:43.075898   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:43.075898   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:43.075898   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:43.075898   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:43.075898   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:43.075898   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:43.075898  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:43.075898  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:43.075898  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:43.075898  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:43.075898  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:43.075898  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:43.075898  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:43.075898  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:43.075898  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:43.075898  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.075898  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:43.075898  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.075898  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:43.075898  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.075898  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:43.075898  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.075898  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:43.075898  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:43.075898  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:43.075898  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:43.075898  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:43.075898  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:43.075898  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:43.075898  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:43.075898  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:43.075898  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:43.075898  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:43.075898  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:43.075898  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:43.075898  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:43.076428  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:43.076428  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:43.076428  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:43.076428  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:43.076428  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:43.076428  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:43.076428  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:43.076428  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:43.076428  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:43.076428  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:43.076428  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:43.076428  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:43.076428  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:43.076428  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:43.076428  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:43.076428  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:43.076428  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:43.076428  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:43.076428  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:43.076428  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:43.076428  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:43.076428  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:43.076428  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:43.076428  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:43.076428  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:43.076428  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:43.076428  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:43.076428  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:43.076428  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:43.076428  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:43.076428  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:43.076428  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:43.076428  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:43.076428  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:43.076428  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:43.076428  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:43.076428  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:43.076428  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:43.076428  78:     Serial.printl                                            | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:43.076428  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:43.076428  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:43.076428  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:43.076428  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:43.076428  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:43.076428  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:43.076428  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:43.076428  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:43.076428  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:43.076428  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:43.076428  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:43.076428  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:43.076428  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:43.076428  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:43.076428  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:43.076428  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:43.076428  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:43.076428  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:43.076985  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:43.076985  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:43.076985  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:43.076985 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:43.076985 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:43.076985 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:43.076985 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:43.076985 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:43.076985 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:43.076985 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:43.076985 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:43.076985 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:43.076985 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:43.076985 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:43.076985 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:43.076985 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:43.076985 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:43.076985 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:43.076985 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:43.076985 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:43.076985 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:43.076985 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:43.076985 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:43.076985 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:43.076985 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:43.076985 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:43.076985 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:43.076985 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:43.076985 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:43.076985 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:43.076985 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:43.076985 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:43.076985 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:43.076985 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:43.076985 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:43.076985 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:43.076985 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:43.076985 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:43.076985 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:43.076985 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:43.076985 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:43.076985 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:43.076985 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:43.076985 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:43.076985 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:43.076985 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:43.076985 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:43.076985 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:43.076985 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:43.076985 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:43.076985 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:43.076985 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:43.076985 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:43.076985 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:43.076985 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:43.076985 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:43.076985 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:43.076985 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:43.076985 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:43.077537 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:43.077537 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:43.077537 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:43.077537 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:43.077632 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:43.077632 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:43.077632 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:43.077632 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:43.077632 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:43.077632 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:43.077632 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:43.077632 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@35)[0m
17:40:43.077632 [92m                 textDocument/didChange:             > 78:16-78:16 -> "l"[0m
17:40:43.077632 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:43.077632 OUT Elapsed: 0s
17:40:43.077632 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:43.152746 IN Elapsed: 148.8451ms
17:40:43.152746 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:43.152746 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:43.152746 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (2 diagnostics):[0m
17:40:43.152746 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_semi_after_expr"[0m
17:40:43.152746 [91m                            textDocument/publishDiagnostics:   > 78:11 - Error: "no_member"[0m
17:40:43.153321 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:43.153882 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:11-78:17 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:11-65:17 (.ino)[0m
17:40:43.153882 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:43.153882 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (2 diagnostics):[0m
17:40:43.153882 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_semi_after_expr"[0m
17:40:43.153882 [91m                            textDocument/publishDiagnostics:     > 65:11 - Error: "no_member"[0m
17:40:43.153882 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:43.154386 OUT Elapsed: 504.3µs
17:40:43.154386 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:43.187462 IN Elapsed: 109.8295ms
17:40:43.187462 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:43.187462 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:43.187462 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@37)[0m
17:40:43.187462 [92m                 textDocument/didChange:   > 65:17-65:17 (len=0) -> "n"[0m
17:40:43.191757 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.println
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:43.191757 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:43.191757 Ino Range: 65:17-65:17 -> Cpp Range:78:17-78:17
17:40:43.194743   > Current sketchmapper content:
17:40:43.194743   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:43.194743   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:43.194743   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:43.194743   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:43.194743   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:43.194743   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:43.194743   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:43.194743   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:43.194743   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:43.194743   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:43.194743  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:43.194743  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:43.194743  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:43.194743  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:43.194743  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:43.194743  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:43.194743  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:43.194743  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:43.194743  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:43.194743  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.194743  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:43.194743  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.194743  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:43.194743  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.194743  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:43.194743  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.194743  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:43.195274  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:43.195274  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:43.195274  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:43.196013  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:43.196013  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:43.196013  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:43.196013  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:43.196013  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:43.196013  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:43.196013  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:43.196013  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:43.196013  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:43.196013  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:43.196013  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:43.196013  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:43.196128  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:43.196128  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:43.196128  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:43.196128  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:43.196128  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:43.196128  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:43.196128  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:43.196128  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:43.196128  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:43.196128  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:43.196128  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:43.196128  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:43.196128  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:43.196128  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:43.196128  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:43.196128  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:43.196128  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:43.196128  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:43.196128  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:43.196128  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:43.196128  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:43.196128  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:43.196128  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:43.196128  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:43.196128  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:43.196128  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:43.196128  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:43.196128  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:43.196128  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:43.196128  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:43.196128  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:43.196128  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:43.196128  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:43.196128  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:43.196128  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:43.196128  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:43.196128  78:     Serial.println                                           | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:43.196128  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:43.196128  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:43.196128  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:43.196128  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:43.196128  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:43.196128  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:43.196128  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:43.196128  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:43.196128  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:43.196128  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:43.196128  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:43.196128  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:43.196128  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:43.196128  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:43.196128  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:43.196128  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:43.196128  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:43.196128  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:43.196128  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:43.196128  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:43.196128  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:43.196128 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:43.196128 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:43.196128 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:43.196128 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:43.196128 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:43.196128 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:43.196128 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:43.196128 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:43.196128 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:43.196128 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:43.196128 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:43.196128 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:43.196128 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:43.196128 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:43.196128 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:43.196128 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:43.196128 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:43.196128 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:43.196128 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:43.196128 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:43.196128 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:43.196128 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:43.196128 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:43.196128 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:43.196128 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:43.196128 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:43.196128 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:43.196128 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:43.196128 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:43.196128 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:43.196128 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:43.196128 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:43.196128 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:43.196128 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:43.196128 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:43.196128 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:43.196128 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:43.196128 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:43.196128 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:43.196128 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:43.196128 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:43.196128 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:43.196128 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:43.196128 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:43.196128 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:43.196635 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:43.196635 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:43.196635 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:43.196635 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:43.196635 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:43.196635 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:43.196635 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:43.196635 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:43.196635 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:43.196635 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:43.196635 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:43.196635 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:43.196635 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:43.196635 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:43.196635 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:43.196635 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:43.196635 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:43.196635 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:43.196635 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:43.196635 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:43.196635 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:43.196635 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:43.196746 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@36)[0m
17:40:43.196746 [92m                 textDocument/didChange:             > 78:17-78:17 -> "n"[0m
17:40:43.196746 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:43.196746 OUT Elapsed: 0s
17:40:43.197253 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:43.274970 IN Elapsed: 122.2243ms
17:40:43.274970 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:43.275477 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:43.275477 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (2 diagnostics):[0m
17:40:43.275477 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_semi_after_expr"[0m
17:40:43.275477 [91m                            textDocument/publishDiagnostics:   > 78:4 - Error: "bound_member_function"[0m
17:40:43.275995 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:43.276170 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:4-78:18 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:4-65:18 (.ino)[0m
17:40:43.277346 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:76:11-76:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:76:11-76:18 (ext file)[0m
17:40:43.278897 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:77:11-77:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:77:11-77:18 (ext file)[0m
17:40:43.280152 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:78:11-78:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:78:11-78:18 (ext file)[0m
17:40:43.281350 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:79:11-79:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:79:11-79:18 (ext file)[0m
17:40:43.282527 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:80:11-80:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:80:11-80:18 (ext file)[0m
17:40:43.283146 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:81:11-81:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:81:11-81:18 (ext file)[0m
17:40:43.284432 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:82:11-82:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:82:11-82:18 (ext file)[0m
17:40:43.285494 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:83:11-83:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:83:11-83:18 (ext file)[0m
17:40:43.286229 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:84:11-84:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:84:11-84:18 (ext file)[0m
17:40:43.287858 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:85:11-85:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:85:11-85:18 (ext file)[0m
17:40:43.289027 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:86:11-86:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:86:11-86:18 (ext file)[0m
17:40:43.290837 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:87:11-87:18 -> file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h:87:11-87:18 (ext file)[0m
17:40:43.291694 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:43.291694 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (2 diagnostics):[0m
17:40:43.291694 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_semi_after_expr"[0m
17:40:43.291694 [91m                            textDocument/publishDiagnostics:     > 65:4 - Error: "bound_member_function"[0m
17:40:43.291694 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:43.291694 OUT Elapsed: 0s
17:40:43.291694 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:43.438074 IN Elapsed: 240.8212ms
17:40:43.438074 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:43.438074 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:43.438074 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@38)[0m
17:40:43.438074 [92m                 textDocument/didChange:   > 65:18-65:18 (len=0) -> "("[0m
17:40:43.444882 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.println(
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:43.445494 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:43.448112 Ino Range: 65:18-65:18 -> Cpp Range:78:18-78:18
17:40:43.448112   > Current sketchmapper content:
17:40:43.448112   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:43.448112   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:43.448112   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:43.448112   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:43.448112   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:43.448112   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:43.448112   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:43.448112   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:43.448112   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:43.448112   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:43.448112  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:43.448112  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:43.448112  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:43.448621  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:43.448621  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:43.448621  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:43.448621  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:43.448621  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:43.448621  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:43.448621  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.448621  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:43.448621  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.448621  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:43.448621  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.448621  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:43.448621  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:43.448621  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:43.448621  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:43.448621  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:43.448621  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:43.448621  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:43.448621  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:43.448621  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:43.448621  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:43.448621  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:43.448621  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:43.448621  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:43.448621  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:43.448621  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:43.448621  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:43.448621  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:43.448621  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:43.448621  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:43.448621  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:43.448621  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:43.448621  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:43.448621  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:43.448621  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:43.448621  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:43.448621  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:43.448621  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:43.448621  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:43.448621  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:43.448621  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:43.448621  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:43.448621  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:43.448621  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:43.448621  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:43.448621  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:43.448621  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:43.448621  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:43.448621  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:43.448621  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:43.448621  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:43.448621  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:43.448621  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:43.448621  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:43.448621  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:43.448621  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:43.448621  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:43.448621  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:43.448621  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:43.448621  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:43.448621  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:43.448621  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:43.448621  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:43.448621  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:43.448621  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:43.448621  78:     Serial.println(                                          | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:43.448621  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:43.448621  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:43.448621  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:43.448621  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:43.448621  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:43.448621  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:43.448621  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:43.448621  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:43.448621  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:43.448621  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:43.448621  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:43.448621  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:43.448621  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:43.448621  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:43.448621  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:43.448621  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:43.448621  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:43.448621  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:43.448621  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:43.448621  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:43.448621  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:43.448621 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:43.448621 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:43.448621 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:43.448621 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:43.448621 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:43.448621 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:43.448621 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:43.448621 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:43.448621 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:43.448621 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:43.448621 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:43.448621 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:43.448621 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:43.448621 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:43.448621 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:43.448621 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:43.448621 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:43.448621 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:43.450097 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:43.450097 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:43.450097 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:43.450097 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:43.450097 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:43.450097 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:43.450097 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:43.450097 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:43.450097 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:43.450097 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:43.450097 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:43.450097 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:43.450097 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:43.450097 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:43.450097 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:43.450097 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:43.450097 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:43.450097 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:43.450097 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:43.450097 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:43.450097 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:43.450097 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:43.450097 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:43.450097 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:43.450097 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:43.450097 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:43.450097 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:43.450097 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:43.450097 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:43.450097 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:43.450097 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:43.450097 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:43.450097 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:43.450097 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:43.450097 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:43.450097 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:43.450097 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:43.450097 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:43.450097 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:43.450097 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:43.450097 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:43.450097 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:43.450097 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:43.450097 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:43.450097 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:43.450097 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:43.450097 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:43.450097 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:43.450097 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:43.450097 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@37)[0m
17:40:43.450097 [92m                 textDocument/didChange:             > 78:18-78:18 -> "("[0m
17:40:43.450606 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:43.450606 OUT Elapsed: 0s
17:40:43.450606 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:43.521127 IN Elapsed: 246.157ms
17:40:43.521127 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:43.524195 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:43.524195 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (3 diagnostics):[0m
17:40:43.524195 [91m                            textDocument/publishDiagnostics:   > 79:4 - Error: "expected_expression"[0m
17:40:43.524195 [91m                            textDocument/publishDiagnostics:   > 120:12 - Error: "function_definition_not_allowed"[0m
17:40:43.524195 [91m                            textDocument/publishDiagnostics:   > 166:0 - Error: "expected"[0m
17:40:43.525308 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:79:4-79:9 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:66:4-66:9 (.ino)[0m
17:40:43.525308 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:120:12-120:13 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:107:12-107:13 (.ino)[0m
17:40:43.525892 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:166:0-166:0 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:153:0-153:0 (.ino)[0m
17:40:43.526398 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:70:13-70:14 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:57:13-57:14 (.ino)[0m
17:40:43.526943 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:43.526943 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (3 diagnostics):[0m
17:40:43.526943 [91m                            textDocument/publishDiagnostics:     > 66:4 - Error: "expected_expression"[0m
17:40:43.526943 [91m                            textDocument/publishDiagnostics:     > 107:12 - Error: "function_definition_not_allowed"[0m
17:40:43.526943 [91m                            textDocument/publishDiagnostics:     > 153:0 - Error: "expected"[0m
17:40:43.526943 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:43.526943 OUT Elapsed: 0s
17:40:43.526943 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:44.107339 IN Elapsed: 656.7323ms
17:40:44.107339 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:44.107339 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:44.107339 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@39)[0m
17:40:44.107339 [92m                 textDocument/didChange:   > 65:19-65:19 (len=0) -> "\""[0m
17:40:44.107339 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.println("
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:44.107339 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:44.107339 Ino Range: 65:19-65:19 -> Cpp Range:78:19-78:19
17:40:44.107339   > Current sketchmapper content:
17:40:44.107339   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:44.107339   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:44.107339   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:44.107339   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:44.107339   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:44.107339   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:44.107339   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:44.107339   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:44.107339   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:44.107339   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:44.107339  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:44.107339  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:44.107339  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:44.107339  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:44.107339  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:44.107339  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:44.107339  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:44.107339  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:44.107339  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:44.107339  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.107339  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:44.107339  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.107339  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:44.107339  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.107339  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:44.107339  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.107339  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:44.107339  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:44.107339  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:44.107339  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:44.107339  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:44.107339  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:44.107339  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:44.107339  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:44.107339  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:44.107339  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:44.107339  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:44.107339  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:44.107339  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:44.107339  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:44.107339  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:44.107339  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:44.107339  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:44.107339  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:44.107339  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:44.107339  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:44.107339  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:44.107339  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:44.107339  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:44.107339  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:44.107339  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:44.107339  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:44.107339  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:44.107339  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:44.107339  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:44.107339  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:44.107339  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:44.107339  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:44.107339  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:44.107339  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:44.107339  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:44.107339  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:44.107339  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:44.107339  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:44.107339  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:44.107339  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:44.107339  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:44.107339  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:44.107339  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:44.107339  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:44.107339  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:44.107339  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:44.107339  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:44.107339  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:44.107339  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:44.107339  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:44.107339  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:44.107339  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:44.107339  78:     Serial.println("                                         | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:44.107339  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:44.107339  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:44.107339  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:44.107339  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:44.107339  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:44.107339  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:44.107339  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:44.107339  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:44.107339  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:44.107339  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:44.107339  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:44.107339  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:44.107339  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:44.107339  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:44.107339  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:44.107339  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:44.107339  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:44.107339  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:44.107339  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:44.107339  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:44.107339  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:44.107339 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:44.107339 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:44.107339 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:44.107339 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:44.107339 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:44.107339 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:44.107339 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:44.107339 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:44.107339 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:44.107339 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:44.107339 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:44.107339 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:44.107339 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:44.107339 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:44.115325 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:44.115325 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:44.115325 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:44.115325 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:44.115325 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:44.115325 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:44.115325 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:44.115325 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:44.115325 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:44.115325 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:44.115325 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:44.115325 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:44.115325 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:44.115325 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:44.115325 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:44.115325 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:44.115325 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:44.115325 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:44.115325 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:44.115325 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:44.115325 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:44.115325 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:44.115325 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:44.115325 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:44.115325 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:44.115325 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:44.115325 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:44.115325 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:44.115325 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:44.115325 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:44.115325 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:44.115325 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:44.115325 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:44.115325 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:44.115325 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:44.115325 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:44.115325 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:44.115325 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:44.115325 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:44.115325 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:44.115325 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:44.115325 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:44.115325 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:44.115325 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:44.115325 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:44.115325 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:44.115325 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:44.115325 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:44.115325 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:44.115325 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:44.115325 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:44.115325 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:44.115325 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:44.115325 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@38)[0m
17:40:44.115325 [92m                 textDocument/didChange:             > 78:19-78:19 -> "\""[0m
17:40:44.115325 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:44.115325 OUT Elapsed: 0s
17:40:44.115325 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:44.115325 IN Elapsed: 0s
17:40:44.115325 [92mIDE --> LS REQU textDocument/completion 11[0m
17:40:44.115325 [92m                textDocument/completion 11: [93mread-locked[0m[0m
17:40:44.115325 [92m                textDocument/completion 11: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:44.115325 [92m                textDocument/completion 11: file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:20 -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:20[0m
17:40:44.115325 [91mIDE     LS --> Clangd REQU textDocument/completion 11[0m
17:40:44.115325 OUT Elapsed: 0s
17:40:44.133548 IN Elapsed: 612.421ms
17:40:44.135306 [31mIDE     LS <-- Clangd RESP textDocument/completion 11[0m
17:40:44.135763 [92m                textDocument/completion 11: <-- completion(0 items)[0m
17:40:44.135763 [92m                textDocument/completion 11: [93mread-unlocked[0m[0m
17:40:44.135763 [32mIDE <-- LS RESP textDocument/completion 11[0m
17:40:44.135763 OUT Elapsed: 0s
17:40:44.193128 IN Elapsed: 59.5794ms
17:40:44.193704 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:44.194215 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:44.194215 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (3 diagnostics):[0m
17:40:44.194215 [91m                            textDocument/publishDiagnostics:   > 78:19 - Error: "expected_expression"[0m
17:40:44.194215 [91m                            textDocument/publishDiagnostics:   > 120:12 - Error: "function_definition_not_allowed"[0m
17:40:44.194954 [91m                            textDocument/publishDiagnostics:   > 166:0 - Error: "expected"[0m
17:40:44.195460 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:19-78:20 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:19-65:20 (.ino)[0m
17:40:44.196154 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:120:12-120:13 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:107:12-107:13 (.ino)[0m
17:40:44.196659 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:166:0-166:0 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:153:0-153:0 (.ino)[0m
17:40:44.197739 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:70:13-70:14 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:57:13-57:14 (.ino)[0m
17:40:44.198679 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:44.198679 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (3 diagnostics):[0m
17:40:44.198679 [91m                            textDocument/publishDiagnostics:     > 65:19 - Error: "expected_expression"[0m
17:40:44.198679 [91m                            textDocument/publishDiagnostics:     > 107:12 - Error: "function_definition_not_allowed"[0m
17:40:44.198679 [91m                            textDocument/publishDiagnostics:     > 153:0 - Error: "expected"[0m
17:40:44.198679 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:44.198679 OUT Elapsed: 0s
17:40:44.198679 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:44.575479 IN Elapsed: 439.7152ms
17:40:44.575479 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:44.575479 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:44.575479 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@40)[0m
17:40:44.575479 [92m                 textDocument/didChange:   > 65:20-65:20 (len=0) -> "M"[0m
17:40:44.577176 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.println("M
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:44.577786 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:44.579889 Ino Range: 65:20-65:20 -> Cpp Range:78:20-78:20
17:40:44.579889   > Current sketchmapper content:
17:40:44.579889   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:44.579889   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:44.579889   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:44.579889   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:44.579889   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:44.579889   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:44.579889   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:44.579889   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:44.579889   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:44.579889   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:44.579889  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:44.579889  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:44.579889  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:44.579889  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:44.579889  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:44.579889  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:44.579889  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:44.579889  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:44.579889  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:44.579889  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.579889  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:44.579889  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.579889  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:44.579889  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.579889  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:44.579889  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.579889  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:44.579889  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:44.579889  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:44.579889  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:44.579889  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:44.579889  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:44.579889  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:44.579889  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:44.579889  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:44.579889  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:44.579889  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:44.579889  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:44.579889  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:44.579889  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:44.579889  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:44.579889  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:44.579889  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:44.580536  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:44.580536  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:44.580536  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:44.580536  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:44.580746  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:44.580746  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:44.580746  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:44.580746  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:44.580746  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:44.580746  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:44.580746  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:44.580746  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:44.580746  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:44.580746  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:44.580746  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:44.580746  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:44.580746  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:44.580746  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:44.580746  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:44.580746  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:44.580746  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:44.580746  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:44.580746  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:44.580746  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:44.580746  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:44.580746  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:44.580746  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:44.580746  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:44.580746  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:44.580746  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:44.580746  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:44.580746  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:44.580746  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:44.580746  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:44.580746  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:44.580746  78:     Serial.println("M                                        | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:44.580746  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:44.580746  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:44.580746  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:44.580746  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:44.580746  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:44.580746  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:44.580746  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:44.580746  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:44.580746  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:44.580746  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:44.580746  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:44.580746  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:44.580746  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:44.580746  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:44.580746  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:44.580746  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:44.580746  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:44.580746  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:44.580746  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:44.580746  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:44.580746  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:44.580746 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:44.580746 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:44.580746 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:44.580746 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:44.581359 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:44.581359 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:44.581359 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:44.581359 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:44.581359 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:44.581359 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:44.581359 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:44.581359 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:44.581359 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:44.581359 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:44.581359 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:44.581359 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:44.581359 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:44.581359 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:44.581359 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:44.581359 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:44.581359 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:44.581359 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:44.581359 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:44.581359 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:44.581359 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:44.581359 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:44.581359 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:44.581359 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:44.581359 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:44.581359 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:44.581359 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:44.581359 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:44.581359 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:44.581359 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:44.581359 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:44.581359 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:44.581359 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:44.581359 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:44.581359 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:44.581359 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:44.581359 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:44.581359 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:44.581359 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:44.581359 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:44.581359 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:44.581359 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:44.581359 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:44.581359 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:44.581359 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:44.581359 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:44.581359 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:44.581359 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:44.581359 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:44.581359 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:44.581359 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:44.581359 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:44.581359 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:44.581359 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:44.581359 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:44.581359 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:44.581359 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:44.581359 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:44.581359 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:44.581359 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:44.581359 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:44.581359 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:44.581359 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:44.581359 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@39)[0m
17:40:44.581359 [92m                 textDocument/didChange:             > 78:20-78:20 -> "M"[0m
17:40:44.581989 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:44.582040 OUT Elapsed: 50.6µs
17:40:44.582040 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:44.582040 IN Elapsed: 0s
17:40:44.582040 [92mIDE --> LS REQU textDocument/completion 12[0m
17:40:44.582040 [92m                textDocument/completion 12: [93mread-locked[0m[0m
17:40:44.582662 [92m                textDocument/completion 12: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:44.584459 [92m                textDocument/completion 12: file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:21 -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:21[0m
17:40:44.584459 [91mIDE     LS --> Clangd REQU textDocument/completion 12[0m
17:40:44.584459 OUT Elapsed: 0s
17:40:44.602549 IN Elapsed: 408.8445ms
17:40:44.606238 [31mIDE     LS <-- Clangd RESP textDocument/completion 12[0m
17:40:44.606238 [92m                textDocument/completion 12: <-- completion(0 items)[0m
17:40:44.606746 [92m                textDocument/completion 12: [93mread-unlocked[0m[0m
17:40:44.606746 [32mIDE <-- LS RESP textDocument/completion 12[0m
17:40:44.606746 OUT Elapsed: 0s
17:40:44.654139 IN Elapsed: 47.9009ms
17:40:44.654139 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:44.654707 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:44.654707 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (3 diagnostics):[0m
17:40:44.654707 [91m                            textDocument/publishDiagnostics:   > 78:19 - Error: "expected_expression"[0m
17:40:44.654707 [91m                            textDocument/publishDiagnostics:   > 120:12 - Error: "function_definition_not_allowed"[0m
17:40:44.654707 [91m                            textDocument/publishDiagnostics:   > 166:0 - Error: "expected"[0m
17:40:44.655213 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:19-78:21 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:19-65:21 (.ino)[0m
17:40:44.655213 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:120:12-120:13 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:107:12-107:13 (.ino)[0m
17:40:44.655213 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:166:0-166:0 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:153:0-153:0 (.ino)[0m
17:40:44.655213 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:70:13-70:14 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:57:13-57:14 (.ino)[0m
17:40:44.655213 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:44.655213 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (3 diagnostics):[0m
17:40:44.655213 [91m                            textDocument/publishDiagnostics:     > 65:19 - Error: "expected_expression"[0m
17:40:44.655213 [91m                            textDocument/publishDiagnostics:     > 107:12 - Error: "function_definition_not_allowed"[0m
17:40:44.655213 [91m                            textDocument/publishDiagnostics:     > 153:0 - Error: "expected"[0m
17:40:44.655213 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:44.655213 OUT Elapsed: 0s
17:40:44.655213 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:44.762593 IN Elapsed: 155.8472ms
17:40:44.762593 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:44.762593 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:44.762593 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@41)[0m
17:40:44.762593 [92m                 textDocument/didChange:   > 65:21-65:21 (len=0) -> "s"[0m
17:40:44.762593 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.println("Ms
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:44.763100 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:44.763625 Ino Range: 65:21-65:21 -> Cpp Range:78:21-78:21
17:40:44.763625   > Current sketchmapper content:
17:40:44.763625   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:44.763625   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:44.763625   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:44.764177   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:44.764177   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:44.764177   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:44.764177   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:44.764177   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:44.764177   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:44.764177   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:44.764177  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:44.764177  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:44.764177  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:44.764177  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:44.764177  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:44.764177  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:44.764177  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:44.764177  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:44.764177  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:44.764245  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.764245  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:44.764245  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.764245  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:44.764245  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.764245  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:44.764245  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.764245  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:44.764245  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:44.764245  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:44.764245  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:44.764245  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:44.764245  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:44.764245  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:44.764245  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:44.764245  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:44.764245  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:44.764245  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:44.764245  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:44.764245  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:44.764245  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:44.764245  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:44.764245  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:44.764245  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:44.764245  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:44.764245  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:44.764245  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:44.764245  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:44.764245  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:44.764245  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:44.764245  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:44.764245  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:44.764245  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:44.764245  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:44.764245  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:44.764245  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:44.764245  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:44.764245  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:44.764245  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:44.764245  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:44.764245  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:44.764245  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:44.764245  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:44.764245  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:44.764245  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:44.764245  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:44.764245  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:44.764245  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:44.764245  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:44.764245  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:44.764245  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:44.764245  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:44.764245  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:44.764245  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:44.764245  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:44.764245  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:44.764245  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:44.764245  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:44.764245  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:44.764245  78:     Serial.println("Ms                                       | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:44.764245  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:44.764245  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:44.764245  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:44.764245  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:44.764245  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:44.764245  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:44.764245  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:44.764245  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:44.764245  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:44.764245  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:44.764245  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:44.764245  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:44.764245  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:44.764245  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:44.764245  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:44.764245  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:44.764245  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:44.764245  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:44.764245  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:44.764245  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:44.764245  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:44.764245 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:44.764245 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:44.764245 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:44.764245 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:44.764245 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:44.764245 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:44.764245 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:44.764245 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:44.764245 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:44.764245 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:44.764245 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:44.764245 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:44.764245 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:44.764245 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:44.764245 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:44.764245 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:44.764245 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:44.764245 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:44.764245 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:44.764245 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:44.764245 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:44.764245 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:44.764245 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:44.764245 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:44.764245 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:44.764245 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:44.764245 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:44.764245 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:44.764245 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:44.764245 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:44.764245 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:44.764245 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:44.764245 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:44.764245 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:44.764245 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:44.764245 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:44.764750 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:44.764750 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:44.764750 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:44.764750 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:44.764750 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:44.764750 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:44.764750 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:44.764750 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:44.764750 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:44.764750 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:44.764750 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:44.764750 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:44.764750 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:44.764750 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:44.764750 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:44.764750 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:44.764750 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:44.764750 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:44.764750 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:44.764750 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:44.764750 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:44.764750 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:44.764750 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:44.764750 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:44.764750 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:44.764750 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:44.764750 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:44.764750 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:44.764750 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:44.764868 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:44.764868 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:44.764868 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@40)[0m
17:40:44.764868 [92m                 textDocument/didChange:             > 78:21-78:21 -> "s"[0m
17:40:44.764868 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:44.764868 OUT Elapsed: 0s
17:40:44.764868 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:44.839420 IN Elapsed: 185.2811ms
17:40:44.839420 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:44.839420 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:44.839420 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (3 diagnostics):[0m
17:40:44.839420 [91m                            textDocument/publishDiagnostics:   > 78:19 - Error: "expected_expression"[0m
17:40:44.839420 [91m                            textDocument/publishDiagnostics:   > 120:12 - Error: "function_definition_not_allowed"[0m
17:40:44.839420 [91m                            textDocument/publishDiagnostics:   > 166:0 - Error: "expected"[0m
17:40:44.840669 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:19-78:22 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:19-65:22 (.ino)[0m
17:40:44.841649 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:120:12-120:13 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:107:12-107:13 (.ino)[0m
17:40:44.842155 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:166:0-166:0 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:153:0-153:0 (.ino)[0m
17:40:44.842155 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:70:13-70:14 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:57:13-57:14 (.ino)[0m
17:40:44.842752 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:44.842752 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (3 diagnostics):[0m
17:40:44.842752 [91m                            textDocument/publishDiagnostics:     > 65:19 - Error: "expected_expression"[0m
17:40:44.842752 [91m                            textDocument/publishDiagnostics:     > 107:12 - Error: "function_definition_not_allowed"[0m
17:40:44.842752 [91m                            textDocument/publishDiagnostics:     > 153:0 - Error: "expected"[0m
17:40:44.842752 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:44.842752 OUT Elapsed: 0s
17:40:44.842752 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:44.850797 IN Elapsed: 85.9284ms
17:40:44.850797 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:44.855306 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:44.855306 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@42)[0m
17:40:44.855306 [92m                 textDocument/didChange:   > 65:22-65:22 (len=0) -> "g"[0m
17:40:44.855306 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.println("Msg
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}

-----------------------------[0m
17:40:44.855670 [92m                 textDocument/didChange: URI: file:///C:/Users/woodc/TrshProto/TrshProto.ino -> file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp[0m
17:40:44.857291 Ino Range: 65:22-65:22 -> Cpp Range:78:22-78:22
17:40:44.857291   > Current sketchmapper content:
17:40:44.857291   0: #include <Arduino.h>                                         | /not-ino:0                                         
17:40:44.857291   1: #line 1 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"         | /not-ino:0                                         
17:40:44.857291   2: #include <Adafruit_ADXL345_U.h>                              | C:\Users\woodc\TrshProto\TrshProto.ino:0                          
17:40:44.857291   3: #include <Adafruit_Sensor.h>                                 | C:\Users\woodc\TrshProto\TrshProto.ino:1                          
17:40:44.857291   4: #include <MPU6050.h>                                         | C:\Users\woodc\TrshProto\TrshProto.ino:2                          
17:40:44.857291   5: #include <SoftwareSerial.h>                                  | C:\Users\woodc\TrshProto\TrshProto.ino:3                          
17:40:44.857291   6: #include <Wire.h>                                            | C:\Users\woodc\TrshProto\TrshProto.ino:4                          
17:40:44.857291   7: struct Vector3D {                                            | C:\Users\woodc\TrshProto\TrshProto.ino:5                          
17:40:44.857291   8:     double x = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:6                          
17:40:44.857291   9:     double y = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:7                          
17:40:44.857291  10:     double z = 0.0;                                          | C:\Users\woodc\TrshProto\TrshProto.ino:8                          
17:40:44.857291  11:     double mag() {                                           | C:\Users\woodc\TrshProto\TrshProto.ino:9                          
17:40:44.857291  12:         return sqrt(x * x + y * y + z * z);                  | C:\Users\woodc\TrshProto\TrshProto.ino:10                          
17:40:44.857291  13:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:11                          
17:40:44.857291  14: };                                                           | C:\Users\woodc\TrshProto\TrshProto.ino:12                          
17:40:44.857291  15: MPU6050 mpu;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:13                          
17:40:44.857291  16: SoftwareSerial mySerial(3, 2); // RX, TX                     | C:\Users\woodc\TrshProto\TrshProto.ino:14                          
17:40:44.857291  17: Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(); | C:\Users\woodc\TrshProto\TrshProto.ino:15                          
17:40:44.857291  18: void checkGyroSettings();                                    | C:\Users\woodc\TrshProto\TrshProto.ino:16                          
17:40:44.857291  19: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.857291  20: void updateSerial();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:17 C:\Users\woodc\TrshProto\TrshProto.ino:17
17:40:44.857291  21: #line 34 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.857291  22: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33 C:\Users\woodc\TrshProto\TrshProto.ino:33
17:40:44.857291  23: #line 48 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.857291  24: void initSimThing();                                         | C:\Users\woodc\TrshProto\TrshProto.ino:47 C:\Users\woodc\TrshProto\TrshProto.ino:47
17:40:44.857291  25: #line 58 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | /not-ino:0                                         
17:40:44.857291  26: void setup();                                                | C:\Users\woodc\TrshProto\TrshProto.ino:57 C:\Users\woodc\TrshProto\TrshProto.ino:57
17:40:44.857291  27: #line 107 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"       | /not-ino:0                                         
17:40:44.857291  28: void loop();                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:44.857291  29: #line 18 "C:\\Users\\woodc\\TrshProto\\TrshProto.ino"        | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:44.857291  30: void updateSerial() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:107 C:\Users\woodc\TrshProto\TrshProto.ino:107
17:40:44.857291  31:     delay(500);                                              | C:\Users\woodc\TrshProto\TrshProto.ino:18                          
17:40:44.857291  32:     while (Serial.available()) {                             | C:\Users\woodc\TrshProto\TrshProto.ino:19                          
17:40:44.857291  33:         String serialIn = Serial.readString();               | C:\Users\woodc\TrshProto\TrshProto.ino:20                          
17:40:44.857291  34:         Serial.print("Serial in: ");                         | C:\Users\woodc\TrshProto\TrshProto.ino:21                          
17:40:44.857291  35:         Serial.println(serialIn);                            | C:\Users\woodc\TrshProto\TrshProto.ino:22                          
17:40:44.857291  36:         mySerial.println(serialIn); // Forward what Serial r | C:\Users\woodc\TrshProto\TrshProto.ino:23                          
17:40:44.857291  37:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:24                          
17:40:44.857291  38:     int i = 2000;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:25                          
17:40:44.857291  39:     while (mySerial.available() || i < 100) {                | C:\Users\woodc\TrshProto\TrshProto.ino:26                          
17:40:44.857291  40:         String serialOut = mySerial.readString();            | C:\Users\woodc\TrshProto\TrshProto.ino:27                          
17:40:44.857291  41:         Serial.println(serialOut); // Forward what Software  | C:\Users\woodc\TrshProto\TrshProto.ino:28                          
17:40:44.857291  42:         i++;                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:29                          
17:40:44.857819  43:         delay(50);                                           | C:\Users\woodc\TrshProto\TrshProto.ino:30                          
17:40:44.857819  44:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:31                          
17:40:44.857819  45: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:32                          
17:40:44.857819  46: void etPhoneHome(char* countrycode, char* phonenumber, char* | C:\Users\woodc\TrshProto\TrshProto.ino:33                          
17:40:44.857819  47:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:34                          
17:40:44.857819  48:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:35                          
17:40:44.857819  49:     mySerial.println("AT+CMGF=1"); // Configuring TEXT mode  | C:\Users\woodc\TrshProto\TrshProto.ino:36                          
17:40:44.857819  50:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:37                          
17:40:44.857819  51:     mySerial.print("AT+CMGS=\"+"); // change ZZ with country | C:\Users\woodc\TrshProto\TrshProto.ino:38                          
17:40:44.857819  52:     mySerial.print(countrycode);                             | C:\Users\woodc\TrshProto\TrshProto.ino:39                          
17:40:44.857819  53:     mySerial.print(phonenumber);                             | C:\Users\woodc\TrshProto\TrshProto.ino:40                          
17:40:44.857819  54:     mySerial.println("\"");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:41                          
17:40:44.857819  55:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:42                          
17:40:44.857819  56:     mySerial.print(message); // text content                 | C:\Users\woodc\TrshProto\TrshProto.ino:43                          
17:40:44.857819  57:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:44                          
17:40:44.857819  58:     mySerial.write(26);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:45                          
17:40:44.857819  59: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:46                          
17:40:44.857819  60: void initSimThing() {                                        | C:\Users\woodc\TrshProto\TrshProto.ino:47                          
17:40:44.857819  61:     mySerial.println("AT"); // Once the handshake test is su | C:\Users\woodc\TrshProto\TrshProto.ino:48                          
17:40:44.857819  62:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:49                          
17:40:44.857819  63:     mySerial.println("AT+CSQ"); // Signal quality test, valu | C:\Users\woodc\TrshProto\TrshProto.ino:50                          
17:40:44.857819  64:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:51                          
17:40:44.857819  65:     mySerial.println("AT+CCID"); // Read SIM information to  | C:\Users\woodc\TrshProto\TrshProto.ino:52                          
17:40:44.857819  66:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:53                          
17:40:44.857819  67:     mySerial.println("AT+CREG?"); // Check whether it has re | C:\Users\woodc\TrshProto\TrshProto.ino:54                          
17:40:44.857819  68:     updateSerial();                                          | C:\Users\woodc\TrshProto\TrshProto.ino:55                          
17:40:44.857819  69: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:56                          
17:40:44.857819  70: void setup() {                                               | C:\Users\woodc\TrshProto\TrshProto.ino:57                          
17:40:44.857819  71:     mySerial.begin(9600);                                    | C:\Users\woodc\TrshProto\TrshProto.ino:58                          
17:40:44.857819  72:     Serial.begin(9600);                                      | C:\Users\woodc\TrshProto\TrshProto.ino:59                          
17:40:44.857819  73:     Serial.println("Hello World");                           | C:\Users\woodc\TrshProto\TrshProto.ino:60                          
17:40:44.857819  74:     Serial.println("Init MPU");                              | C:\Users\woodc\TrshProto\TrshProto.ino:61                          
17:40:44.857819  75:     delay(1000);                                             | C:\Users\woodc\TrshProto\TrshProto.ino:62                          
17:40:44.857819  76:     int i = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:63                          
17:40:44.857819  77:     etPhoneHome("01", "7038250271", "Hello World");          | C:\Users\woodc\TrshProto\TrshProto.ino:64                          
17:40:44.857819  78:     Serial.println("Msg                                      | C:\Users\woodc\TrshProto\TrshProto.ino:65                          
17:40:44.857819  79:     while (1) {                                              | C:\Users\woodc\TrshProto\TrshProto.ino:66                          
17:40:44.857819  80:         updateSerial();                                      | C:\Users\woodc\TrshProto\TrshProto.ino:67                          
17:40:44.857819  81:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:68                          
17:40:44.857819  82:     // mySerial.println("AT"); // Once the handshake test is | C:\Users\woodc\TrshProto\TrshProto.ino:69                          
17:40:44.857819  83:     // delay(2000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:70                          
17:40:44.857819  84:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:71                          
17:40:44.857819  85:     // mySerial.println("AT+CSQ"); // Signal quality test, v | C:\Users\woodc\TrshProto\TrshProto.ino:72                          
17:40:44.857819  86:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:73                          
17:40:44.857819  87:     // mySerial.println("AT+CCID"); // Read SIM information  | C:\Users\woodc\TrshProto\TrshProto.ino:74                          
17:40:44.857819  88:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:75                          
17:40:44.857819  89:     // mySerial.println("AT+CREG?"); // Check whether it has | C:\Users\woodc\TrshProto\TrshProto.ino:76                          
17:40:44.857819  90:     // updateSerial();                                       | C:\Users\woodc\TrshProto\TrshProto.ino:77                          
17:40:44.857819  91:     // etPhoneHome("01", "7038250271", "Hello World");       | C:\Users\woodc\TrshProto\TrshProto.ino:78                          
17:40:44.857819  92:     // mpu.calibrateGyro();                                  | C:\Users\woodc\TrshProto\TrshProto.ino:79                          
17:40:44.857819  93:     if (!accel.begin()) {                                    | C:\Users\woodc\TrshProto\TrshProto.ino:80                          
17:40:44.857819  94:         Serial.println("no acc :(");                         | C:\Users\woodc\TrshProto\TrshProto.ino:81                          
17:40:44.857819  95:     } else {                                                 | C:\Users\woodc\TrshProto\TrshProto.ino:82                          
17:40:44.857819  96:         Serial.println("acc :)");                            | C:\Users\woodc\TrshProto\TrshProto.ino:83                          
17:40:44.857819  97:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:84                          
17:40:44.857819  98:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:85                          
17:40:44.857819  99:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:86                          
17:40:44.857819 100:     Vector3D sdf;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:87                          
17:40:44.857819 101:     sdf.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:88                          
17:40:44.857819 102:     sdf.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:89                          
17:40:44.857819 103:     sdf.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:90                          
17:40:44.857819 104:     if (abs(10 - sdf.z) > 2) {                               | C:\Users\woodc\TrshProto\TrshProto.ino:91                          
17:40:44.857819 105:         Serial.println("Incorrect acc orientation");         | C:\Users\woodc\TrshProto\TrshProto.ino:92                          
17:40:44.857819 106:         Serial.print("X: ");                                 | C:\Users\woodc\TrshProto\TrshProto.ino:93                          
17:40:44.857819 107:         Serial.print(sdf.x);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:94                          
17:40:44.857819 108:         Serial.print(", Y: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:95                          
17:40:44.857819 109:         Serial.print(sdf.y);                                 | C:\Users\woodc\TrshProto\TrshProto.ino:96                          
17:40:44.857819 110:         Serial.print(", Z: ");                               | C:\Users\woodc\TrshProto\TrshProto.ino:97                          
17:40:44.857819 111:         Serial.println(sdf.z);                               | C:\Users\woodc\TrshProto\TrshProto.ino:98                          
17:40:44.857819 112:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:99                          
17:40:44.857819 113: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:100                          
17:40:44.857819 114:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:101                          
17:40:44.857819 115: long time = 0;                                               | C:\Users\woodc\TrshProto\TrshProto.ino:102                          
17:40:44.857819 116: int sleep = 50;                                              | C:\Users\woodc\TrshProto\TrshProto.ino:103                          
17:40:44.857819 117: long lastFallTime = -10000;                                  | C:\Users\woodc\TrshProto\TrshProto.ino:104                          
17:40:44.857819 118: long fallBreak = 4000;                                       | C:\Users\woodc\TrshProto\TrshProto.ino:105                          
17:40:44.857819 119: const char* message = "u good bro?";                         | C:\Users\woodc\TrshProto\TrshProto.ino:106                          
17:40:44.857819 120: void loop() {                                                | C:\Users\woodc\TrshProto\TrshProto.ino:107                          
17:40:44.857819 121:     // if (time % 10000 == 0) {                              | C:\Users\woodc\TrshProto\TrshProto.ino:108                          
17:40:44.857819 122:     //     updateSerial();                                   | C:\Users\woodc\TrshProto\TrshProto.ino:109                          
17:40:44.857819 123:     //     Serial.println("update bro");                     | C:\Users\woodc\TrshProto\TrshProto.ino:110                          
17:40:44.857819 124:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:111                          
17:40:44.857819 125:     // if (time == 30000) {                                  | C:\Users\woodc\TrshProto\TrshProto.ino:112                          
17:40:44.857819 126:     //     Serial.println("sdfaksd");                        | C:\Users\woodc\TrshProto\TrshProto.ino:113                          
17:40:44.857819 127:     //     etPhoneHome("01", "7038250271", "Hello World");   | C:\Users\woodc\TrshProto\TrshProto.ino:114                          
17:40:44.857819 128:     // }                                                     | C:\Users\woodc\TrshProto\TrshProto.ino:115                          
17:40:44.857819 129:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:116                          
17:40:44.857819 130:     // Serial.println("ur mom");                             | C:\Users\woodc\TrshProto\TrshProto.ino:117                          
17:40:44.857819 131:     // delay(1000);                                          | C:\Users\woodc\TrshProto\TrshProto.ino:118                          
17:40:44.857819 132:     sensors_event_t event;                                   | C:\Users\woodc\TrshProto\TrshProto.ino:119                          
17:40:44.857819 133:     accel.getEvent(&event);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:120                          
17:40:44.857819 134:     // Serial.print("X: ");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:121                          
17:40:44.857819 135:     // Serial.println("m/s^2 ");                             | C:\Users\woodc\TrshProto\TrshProto.ino:122                          
17:40:44.857819 136:     Vector3D acc;                                            | C:\Users\woodc\TrshProto\TrshProto.ino:123                          
17:40:44.857819 137:     acc.x = event.acceleration.x;                            | C:\Users\woodc\TrshProto\TrshProto.ino:124                          
17:40:44.857819 138:     acc.y = -event.acceleration.z;                           | C:\Users\woodc\TrshProto\TrshProto.ino:125                          
17:40:44.857819 139:     acc.z = -event.acceleration.y;                           | C:\Users\woodc\TrshProto\TrshProto.ino:126                          
17:40:44.857819 140:     // Serial.print(sdf.x);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:127                          
17:40:44.857819 141:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:128                          
17:40:44.857819 142:     // // Serial.print(" Y: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:129                          
17:40:44.857819 143:     // Serial.print(sdf.y);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:130                          
17:40:44.857819 144:     // Serial.print(", ");                                   | C:\Users\woodc\TrshProto\TrshProto.ino:131                          
17:40:44.857819 145:     // // Serial.print(" Z: ");                              | C:\Users\woodc\TrshProto\TrshProto.ino:132                          
17:40:44.857819 146:     // Serial.print(sdf.z);                                  | C:\Users\woodc\TrshProto\TrshProto.ino:133                          
17:40:44.857819 147:     // Serial.print(",\n");                                  | C:\Users\woodc\TrshProto\TrshProto.ino:134                          
17:40:44.857819 148:     // Serial.print("mag: ");                                | C:\Users\woodc\TrshProto\TrshProto.ino:135                          
17:40:44.857819 149:     // Serial.println(sdf.mag() - 9.8);                      | C:\Users\woodc\TrshProto\TrshProto.ino:136                          
17:40:44.857819 150:     if (acc.mag() - 10.0 > 3.0) {                            | C:\Users\woodc\TrshProto\TrshProto.ino:137                          
17:40:44.857819 151:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:138                          
17:40:44.857819 152:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:139                          
17:40:44.857819 153:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:140                          
17:40:44.857819 154:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:141                          
17:40:44.857819 155:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:142                          
17:40:44.857819 156:     if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc. | C:\Users\woodc\TrshProto\TrshProto.ino:143                          
17:40:44.857819 157:         if (time - lastFallTime > fallBreak) {               | C:\Users\woodc\TrshProto\TrshProto.ino:144                          
17:40:44.857819 158:             Serial.println(message);                         | C:\Users\woodc\TrshProto\TrshProto.ino:145                          
17:40:44.857819 159:             lastFallTime = time;                             | C:\Users\woodc\TrshProto\TrshProto.ino:146                          
17:40:44.857819 160:         }                                                    | C:\Users\woodc\TrshProto\TrshProto.ino:147                          
17:40:44.858342 161:     }                                                        | C:\Users\woodc\TrshProto\TrshProto.ino:148                          
17:40:44.858342 162:     delay(sleep);                                            | C:\Users\woodc\TrshProto\TrshProto.ino:149                          
17:40:44.858342 163:     time += sleep;                                           | C:\Users\woodc\TrshProto\TrshProto.ino:150                          
17:40:44.858342 164: }                                                            | C:\Users\woodc\TrshProto\TrshProto.ino:151                          
17:40:44.858342 165:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:152                          
17:40:44.858342 166:                                                              | C:\Users\woodc\TrshProto\TrshProto.ino:153                          
17:40:44.858342 [92m                 textDocument/didChange: to Clang: didChange(file:///c%3A/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp@41)[0m
17:40:44.858342 [92m                 textDocument/didChange:             > 78:22-78:22 -> "g"[0m
17:40:44.858342 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
17:40:44.858342 OUT Elapsed: 0s
17:40:44.858342 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
17:40:44.930654 IN Elapsed: 91.2342ms
17:40:44.930654 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
17:40:44.930654 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
17:40:44.930654 [91m                            textDocument/publishDiagnostics: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp (3 diagnostics):[0m
17:40:44.930654 [91m                            textDocument/publishDiagnostics:   > 78:19 - Error: "expected_expression"[0m
17:40:44.930654 [91m                            textDocument/publishDiagnostics:   > 120:12 - Error: "function_definition_not_allowed"[0m
17:40:44.930654 [91m                            textDocument/publishDiagnostics:   > 166:0 - Error: "expected"[0m
17:40:44.931214 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:78:19-78:23 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:65:19-65:23 (.ino)[0m
17:40:44.931718 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:120:12-120:13 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:107:12-107:13 (.ino)[0m
17:40:44.931718 [91m                            textDocument/publishDiagnostics: Range: file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:166:0-166:0 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:153:0-153:0 (.ino)[0m
17:40:44.932290 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/sketch/TrshProto.ino.cpp:70:13-70:14 -> file:///C:/Users/woodc/TrshProto/TrshProto.ino:57:13-57:14 (.ino)[0m
17:40:44.932794 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
17:40:44.932794 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/woodc/TrshProto/TrshProto.ino (3 diagnostics):[0m
17:40:44.932794 [91m                            textDocument/publishDiagnostics:     > 65:19 - Error: "expected_expression"[0m
17:40:44.932794 [91m                            textDocument/publishDiagnostics:     > 107:12 - Error: "function_definition_not_allowed"[0m
17:40:44.932794 [91m                            textDocument/publishDiagnostics:     > 153:0 - Error: "expected"[0m
17:40:44.932794 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
17:40:44.932794 OUT Elapsed: 0s
17:40:44.932794 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
17:40:45.859523 [95mSKETCH REBUILD: : Sketch rebuild started[0m
17:40:45.859523 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
17:40:45.859523 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
17:40:45.859523 [95mSKETCH REBUILD: : Dumping TrshProto.ino override:
#include <Adafruit_ADXL345_U.h>
#include <Adafruit_Sensor.h>
#include <MPU6050.h>
#include <SoftwareSerial.h>
#include <Wire.h>
struct Vector3D {
    double x = 0.0;
    double y = 0.0;
    double z = 0.0;
    double mag() {
        return sqrt(x * x + y * y + z * z);
    }
};
MPU6050 mpu;
SoftwareSerial mySerial(3, 2); // RX, TX
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
void checkGyroSettings();
void updateSerial() {
    delay(500);
    while (Serial.available()) {
        String serialIn = Serial.readString();
        Serial.print("Serial in: ");
        Serial.println(serialIn);
        mySerial.println(serialIn); // Forward what Serial received to Software Serial Port
    }
    int i = 2000;
    while (mySerial.available() || i < 100) {
        String serialOut = mySerial.readString();
        Serial.println(serialOut); // Forward what Software Serial received to Serial Port
        i++;
        delay(50);
    }
}
void etPhoneHome(char* countrycode, char* phonenumber, char* message) {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
    updateSerial();
    mySerial.print("AT+CMGS=\"+"); // change ZZ with country code and xxxxxxxxxxx with phone number to sms
    mySerial.print(countrycode);
    mySerial.print(phonenumber);
    mySerial.println("\"");
    updateSerial();
    mySerial.print(message); // text content
    updateSerial();
    mySerial.write(26);
}
void initSimThing() {
    mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    updateSerial();
    mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    updateSerial();
    mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    updateSerial();
    mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    updateSerial();
}
void setup() {
    mySerial.begin(9600);
    Serial.begin(9600);
    Serial.println("Hello World");
    Serial.println("Init MPU");
    delay(1000);
    int i = 0;
    etPhoneHome("01", "7038250271", "Hello World");
    Serial.println("Msg
    while (1) {
        updateSerial();
    }
    // mySerial.println("AT"); // Once the handshake test is successful, it will back to OK
    // delay(2000);
    // updateSerial();
    // mySerial.println("AT+CSQ"); // Signal quality test, value range is 0-31 , 31 is the best
    // updateSerial();
    // mySerial.println("AT+CCID"); // Read SIM information to confirm whether the SIM is plugged
    // updateSerial();
    // mySerial.println("AT+CREG?"); // Check whether it has registered in the network
    // updateSerial();
    // etPhoneHome("01", "7038250271", "Hello World");
    // mpu.calibrateGyro();
    if (!accel.begin()) {
        Serial.println("no acc :(");
    } else {
        Serial.println("acc :)");
    }
    sensors_event_t event;
    accel.getEvent(&event);
    Vector3D sdf;
    sdf.x = event.acceleration.x;
    sdf.y = -event.acceleration.z;
    sdf.z = -event.acceleration.y;
    if (abs(10 - sdf.z) > 2) {
        Serial.println("Incorrect acc orientation");
        Serial.print("X: ");
        Serial.print(sdf.x);
        Serial.print(", Y: ");
        Serial.print(sdf.y);
        Serial.print(", Z: ");
        Serial.println(sdf.z);
    }
}

long time = 0;
int sleep = 50;
long lastFallTime = -10000;
long fallBreak = 4000;
const char* message = "u good bro?";
void loop() {
    // if (time % 10000 == 0) {
    //     updateSerial();
    //     Serial.println("update bro");
    // }
    // if (time == 30000) {
    //     Serial.println("sdfaksd");
    //     etPhoneHome("01", "7038250271", "Hello World");
    // }

    // Serial.println("ur mom");
    // delay(1000);
    sensors_event_t event;
    accel.getEvent(&event);
    // Serial.print("X: ");
    // Serial.println("m/s^2 ");
    Vector3D acc;
    acc.x = event.acceleration.x;
    acc.y = -event.acceleration.z;
    acc.z = -event.acceleration.y;
    // Serial.print(sdf.x);
    // Serial.print(", ");
    // // Serial.print(" Y: ");
    // Serial.print(sdf.y);
    // Serial.print(", ");
    // // Serial.print(" Z: ");
    // Serial.print(sdf.z);
    // Serial.print(",\n");
    // Serial.print("mag: ");
    // Serial.println(sdf.mag() - 9.8);
    if (acc.mag() - 10.0 > 3.0) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {
        if (time - lastFallTime > fallBreak) {
            Serial.println(message);
            lastFallTime = time;
        }
    }
    delay(sleep);
    time += sleep;
}
[0m
17:40:45.860713 [92mIDE <-- LS REQU window/workDoneProgress/create 7[0m
17:40:45.861219 OUT Elapsed: 0s
17:40:45.861219 IN Elapsed: 1.0028766s
17:40:45.861219 [32mIDE --> LS RESP window/workDoneProgress/create 7[0m
17:40:45.866496 [95mSKETCH REBUILD: : running: C:\ProgramData\chocolatey\bin\arduino-cli.exe --config-file C:\Users\woodc\appdata\local\arduino15\arduino-cli.yaml compile --fqbn arduino:avr:pro --only-compilation-database --source-override C:\Users\woodc\AppData\Local\Temp\3123935015 --build-path C:\Users\woodc\AppData\Local\Temp\arduino-language-server1235177802\fullbuild --format json C:\Users\woodc\TrshProto[0m
17:40:45.866496 [92mIDE <-- LS NOTIF $/progress[0m
17:40:45.866496 OUT Elapsed: 0s
17:40:45.868824 IN Elapsed: 7.6056ms
17:40:45.868824 [92mIDE --> LS NOTIF textDocument/didChange[0m
17:40:45.868824 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
17:40:45.868824 [92m                 textDocument/didChange: didChange(file:///C:/Users/woodc/TrshProto/TrshProto.ino@43)[0m
17:40:45.868824 [92m                 textDocument/didChange:   > 65:23-65:23 (len=0) -> " sent\");"[0m
