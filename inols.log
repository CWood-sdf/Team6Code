






Started logging.

<<<
Content-Length: 2927

{"jsonrpc":"2.0","method":"initialize","params":{"rootPath":"C:\\Users\\woodc\\TrshProto","clientInfo":{"name":"Neovim","version":"0.10.0-dev+684e930"},"trace":"off","processId":38116,"initializationOptions":{},"capabilities":{"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true},"workDoneProgress":true},"textDocument":{"typeDefinition":{"linkSupport":true},"completion":{"contextSupport":false,"dynamicRegistration":false,"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionItem":{"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false}},"implementation":{"linkSupport":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":[]}},"declaration":{"linkSupport":true},"rangeFormatting":{"dynamicRegistration":true},"synchronization":{"didSave":true,"willSave":true,"dynamicRegistration":false,"willSaveWaitUntil":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true},"semanticTokens":null,"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"diagnostic":{"dynamicRegistration":false},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true}},"definition":{"linkSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"publishDiagnostics":{"dataSupport":true,"tagSupport":{"valueSet":[1,2]},"relatedInformation":true},"callHierarchy":{"dynamicRegistration":false}},"general":{"positionEncodings":["utf-16"]},"workspace":{"configuration":true,"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true},"applyEdit":true,"semanticTokens":null,"inlayHint":{"refreshSupport":true},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"workspaceFolders":true,"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}}}},"workspaceFolders":[{"name":"C:\/Users\/woodc\/TrshProto","uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto"}],"rootUri":"file:\/\/\/C:\/Users\/woodc\/TrshProto"},"id":1}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.5"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 5203

{"jsonrpc":"2.0","method":"textDocument\/didOpen","params":{"textDocument":{"languageId":"arduino","uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","text":"#include <Adafruit_ADXL345_U.h>\n#include <Adafruit_Sensor.h>\n#include <MPU6050.h>\n#include <SoftwareSerial.h>\n#include <Wire.h>\nstruct Vector3D {\n    double x = 0.0;\n    double y = 0.0;\n    double z = 0.0;\n    double mag() {\n        return sqrt(x * x + y * y + z * z);\n    }\n};\nMPU6050 mpu;\nSoftwareSerial mySerial(3, 2); \/\/ RX, TX\nAdafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();\nvoid checkGyroSettings();\nvoid updateSerial() {\n    delay(500);\n    while (Serial.available()) {\n        String serialIn = Serial.readString();\n        Serial.print(\"Serial in: \");\n        Serial.println(serialIn);\n        mySerial.println(serialIn); \/\/ Forward what Serial received to Software Serial Port\n    }\n    int i = 2000;\n    while (mySerial.available() || i < 100) {\n        String serialOut = mySerial.readString();\n        Serial.println(serialOut); \/\/ Forward what Software Serial received to Serial Port\n        i++;\n        delay(50);\n    }\n}\nvoid etPhoneHome(char* countrycode, char* phonenumber, char* message) {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CMGF=1\"); \/\/ Configuring TEXT mode\n    updateSerial();\n    mySerial.print(\"AT+CMGS=\\\"+\"); \/\/ change ZZ with country code and xxxxxxxxxxx with phone number to sms\n    mySerial.print(countrycode);\n    mySerial.print(phonenumber);\n    mySerial.println(\"\\\"\");\n    updateSerial();\n    mySerial.print(message); \/\/ text content\n    updateSerial();\n    mySerial.write(26);\n}\nvoid initSimThing() {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    updateSerial();\n    mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    updateSerial();\n    mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    updateSerial();\n}\nvoid setup() {\n    mySerial.begin(9600);\n    Serial.begin(9600);\n    Serial.println(\"Hello World\");\n    Serial.println(\"Init MPU\");\n    delay(1000);\n    int i = 0;\n    while (1) {\n        updateSerial();\n    }\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    delay(2000);\n    updateSerial();\n    mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    updateSerial();\n    mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    updateSerial();\n    mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    updateSerial();\n    \/\/ etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ mpu.calibrateGyro();\n    if (!accel.begin()) {\n        Serial.println(\"no acc :(\");\n    } else {\n        Serial.println(\"acc :)\");\n    }\n    sensors_event_t event;\n    accel.getEvent(&event);\n    Vector3D sdf;\n    sdf.x = event.acceleration.x;\n    sdf.y = -event.acceleration.z;\n    sdf.z = -event.acceleration.y;\n    if (abs(10 - sdf.z) > 2) {\n        Serial.println(\"Incorrect acc orientation\");\n        Serial.print(\"X: \");\n        Serial.print(sdf.x);\n        Serial.print(\", Y: \");\n        Serial.print(sdf.y);\n        Serial.print(\", Z: \");\n        Serial.println(sdf.z);\n    }\n}\n\nlong time = 0;\nint sleep = 50;\nlong lastFallTime = -10000;\nlong fallBreak = 4000;\nconst char* message = \"u good bro?\";\nvoid loop() {\n    if (time % 10000 == 0) {\n        updateSerial();\n        Serial.println(\"update bro\");\n    }\n    if (time == 30000) {\n        Serial.println(\"sdfaksd\");\n        etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    }\n\n    \/\/ Serial.println(\"ur mom\");\n    \/\/ delay(1000);\n    sensors_event_t event;\n    accel.getEvent(&event);\n    \/\/ Serial.print(\"X: \");\n    \/\/ Serial.println(\"m\/s^2 \");\n    Vector3D acc;\n    acc.x = event.acceleration.x;\n    acc.y = -event.acceleration.z;\n    acc.z = -event.acceleration.y;\n    \/\/ Serial.print(sdf.x);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Y: \");\n    \/\/ Serial.print(sdf.y);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Z: \");\n    \/\/ Serial.print(sdf.z);\n    \/\/ Serial.print(\",\\n\");\n    \/\/ Serial.print(\"mag: \");\n    \/\/ Serial.println(sdf.mag() - 9.8);\n    if (acc.mag() - 10.0 > 3.0) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    delay(sleep);\n    time += sleep;\n}\n","version":0}}}Content-Length: 785

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"\/\/ mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    \/\/ delay(2000);\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    \/\/","rangeLength":437,"range":{"start":{"character":4,"line":67},"end":{"character":3,"line":75}}}],"textDocument":{"version":3,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}
>>>
Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/.clangd","diagnostics":[]}}Content-Length: 152

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/AppData/Local/clangd/config.yaml","diagnostics":[]}}Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"1"}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server3752077128/build/.clangd","diagnostics":[]}}Content-Length: 155

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":1,"diagnostics":[]}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument\/formatting","params":{"options":{"tabSize":4,"insertSpaces":true},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}},"id":2}
>>>
Content-Length: 155

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":2,"diagnostics":[]}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 130

{"jsonrpc":"2.0","id":2,"result":[{"range":{"start":{"line":149,"character":1},"end":{"line":151,"character":0}},"newText":"\n"}]}
<<<
Content-Length: 281

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"\n","rangeLength":0,"range":{"start":{"character":1,"line":149},"end":{"character":1,"line":149}}}],"textDocument":{"version":4,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}Content-Length: 279

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":0,"line":150},"end":{"character":0,"line":151}}}],"textDocument":{"version":5,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}Content-Length: 5213

{"jsonrpc":"2.0","method":"textDocument\/didSave","params":{"text":"#include <Adafruit_ADXL345_U.h>\n#include <Adafruit_Sensor.h>\n#include <MPU6050.h>\n#include <SoftwareSerial.h>\n#include <Wire.h>\nstruct Vector3D {\n    double x = 0.0;\n    double y = 0.0;\n    double z = 0.0;\n    double mag() {\n        return sqrt(x * x + y * y + z * z);\n    }\n};\nMPU6050 mpu;\nSoftwareSerial mySerial(3, 2); \/\/ RX, TX\nAdafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();\nvoid checkGyroSettings();\nvoid updateSerial() {\n    delay(500);\n    while (Serial.available()) {\n        String serialIn = Serial.readString();\n        Serial.print(\"Serial in: \");\n        Serial.println(serialIn);\n        mySerial.println(serialIn); \/\/ Forward what Serial received to Software Serial Port\n    }\n    int i = 2000;\n    while (mySerial.available() || i < 100) {\n        String serialOut = mySerial.readString();\n        Serial.println(serialOut); \/\/ Forward what Software Serial received to Serial Port\n        i++;\n        delay(50);\n    }\n}\nvoid etPhoneHome(char* countrycode, char* phonenumber, char* message) {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CMGF=1\"); \/\/ Configuring TEXT mode\n    updateSerial();\n    mySerial.print(\"AT+CMGS=\\\"+\"); \/\/ change ZZ with country code and xxxxxxxxxxx with phone number to sms\n    mySerial.print(countrycode);\n    mySerial.print(phonenumber);\n    mySerial.println(\"\\\"\");\n    updateSerial();\n    mySerial.print(message); \/\/ text content\n    updateSerial();\n    mySerial.write(26);\n}\nvoid initSimThing() {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    updateSerial();\n    mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    updateSerial();\n    mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    updateSerial();\n}\nvoid setup() {\n    mySerial.begin(9600);\n    Serial.begin(9600);\n    Serial.println(\"Hello World\");\n    Serial.println(\"Init MPU\");\n    delay(1000);\n    int i = 0;\n    while (1) {\n        updateSerial();\n    }\n    \/\/ mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    \/\/ delay(2000);\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    \/\/ updateSerial();\n    \/\/ etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ mpu.calibrateGyro();\n    if (!accel.begin()) {\n        Serial.println(\"no acc :(\");\n    } else {\n        Serial.println(\"acc :)\");\n    }\n    sensors_event_t event;\n    accel.getEvent(&event);\n    Vector3D sdf;\n    sdf.x = event.acceleration.x;\n    sdf.y = -event.acceleration.z;\n    sdf.z = -event.acceleration.y;\n    if (abs(10 - sdf.z) > 2) {\n        Serial.println(\"Incorrect acc orientation\");\n        Serial.print(\"X: \");\n        Serial.print(sdf.x);\n        Serial.print(\", Y: \");\n        Serial.print(sdf.y);\n        Serial.print(\", Z: \");\n        Serial.println(sdf.z);\n    }\n}\n\nlong time = 0;\nint sleep = 50;\nlong lastFallTime = -10000;\nlong fallBreak = 4000;\nconst char* message = \"u good bro?\";\nvoid loop() {\n    if (time % 10000 == 0) {\n        updateSerial();\n        Serial.println(\"update bro\");\n    }\n    if (time == 30000) {\n        Serial.println(\"sdfaksd\");\n        etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    }\n\n    \/\/ Serial.println(\"ur mom\");\n    \/\/ delay(1000);\n    sensors_event_t event;\n    accel.getEvent(&event);\n    \/\/ Serial.print(\"X: \");\n    \/\/ Serial.println(\"m\/s^2 \");\n    Vector3D acc;\n    acc.x = event.acceleration.x;\n    acc.y = -event.acceleration.z;\n    acc.z = -event.acceleration.y;\n    \/\/ Serial.print(sdf.x);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Y: \");\n    \/\/ Serial.print(sdf.y);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Z: \");\n    \/\/ Serial.print(sdf.z);\n    \/\/ Serial.print(\",\\n\");\n    \/\/ Serial.print(\"mag: \");\n    \/\/ Serial.println(sdf.mag() - 9.8);\n    if (acc.mag() - 10.0 > 3.0) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    delay(sleep);\n    time += sleep;\n}\n","textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}
>>>
Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"2"}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"3"}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 550

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"\/\/ if (time % 10000 == 0) {\n    \/\/     updateSerial();\n    \/\/     Serial.println(\"update bro\");\n    \/\/ }\n    \/\/ if (time == 30000) {\n    \/\/     Serial.println(\"sdfaksd\");\n    \/\/     etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/","rangeLength":212,"range":{"start":{"character":4,"line":106},"end":{"character":3,"line":113}}}],"textDocument":{"version":7,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}
>>>
Content-Length: 155

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":6,"diagnostics":[]}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument\/formatting","params":{"options":{"tabSize":4,"insertSpaces":true},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}},"id":3}
>>>
Content-Length: 130

{"jsonrpc":"2.0","id":3,"result":[{"range":{"start":{"line":149,"character":1},"end":{"line":151,"character":0}},"newText":"\n"}]}
<<<
Content-Length: 281

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"\n","rangeLength":0,"range":{"start":{"character":1,"line":149},"end":{"character":1,"line":149}}}],"textDocument":{"version":8,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}Content-Length: 279

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":0,"line":150},"end":{"character":0,"line":151}}}],"textDocument":{"version":9,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}Content-Length: 5253

{"jsonrpc":"2.0","method":"textDocument\/didSave","params":{"text":"#include <Adafruit_ADXL345_U.h>\n#include <Adafruit_Sensor.h>\n#include <MPU6050.h>\n#include <SoftwareSerial.h>\n#include <Wire.h>\nstruct Vector3D {\n    double x = 0.0;\n    double y = 0.0;\n    double z = 0.0;\n    double mag() {\n        return sqrt(x * x + y * y + z * z);\n    }\n};\nMPU6050 mpu;\nSoftwareSerial mySerial(3, 2); \/\/ RX, TX\nAdafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();\nvoid checkGyroSettings();\nvoid updateSerial() {\n    delay(500);\n    while (Serial.available()) {\n        String serialIn = Serial.readString();\n        Serial.print(\"Serial in: \");\n        Serial.println(serialIn);\n        mySerial.println(serialIn); \/\/ Forward what Serial received to Software Serial Port\n    }\n    int i = 2000;\n    while (mySerial.available() || i < 100) {\n        String serialOut = mySerial.readString();\n        Serial.println(serialOut); \/\/ Forward what Software Serial received to Serial Port\n        i++;\n        delay(50);\n    }\n}\nvoid etPhoneHome(char* countrycode, char* phonenumber, char* message) {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CMGF=1\"); \/\/ Configuring TEXT mode\n    updateSerial();\n    mySerial.print(\"AT+CMGS=\\\"+\"); \/\/ change ZZ with country code and xxxxxxxxxxx with phone number to sms\n    mySerial.print(countrycode);\n    mySerial.print(phonenumber);\n    mySerial.println(\"\\\"\");\n    updateSerial();\n    mySerial.print(message); \/\/ text content\n    updateSerial();\n    mySerial.write(26);\n}\nvoid initSimThing() {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    updateSerial();\n    mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    updateSerial();\n    mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    updateSerial();\n}\nvoid setup() {\n    mySerial.begin(9600);\n    Serial.begin(9600);\n    Serial.println(\"Hello World\");\n    Serial.println(\"Init MPU\");\n    delay(1000);\n    int i = 0;\n    while (1) {\n        updateSerial();\n    }\n    \/\/ mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    \/\/ delay(2000);\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    \/\/ updateSerial();\n    \/\/ etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ mpu.calibrateGyro();\n    if (!accel.begin()) {\n        Serial.println(\"no acc :(\");\n    } else {\n        Serial.println(\"acc :)\");\n    }\n    sensors_event_t event;\n    accel.getEvent(&event);\n    Vector3D sdf;\n    sdf.x = event.acceleration.x;\n    sdf.y = -event.acceleration.z;\n    sdf.z = -event.acceleration.y;\n    if (abs(10 - sdf.z) > 2) {\n        Serial.println(\"Incorrect acc orientation\");\n        Serial.print(\"X: \");\n        Serial.print(sdf.x);\n        Serial.print(\", Y: \");\n        Serial.print(sdf.y);\n        Serial.print(\", Z: \");\n        Serial.println(sdf.z);\n    }\n}\n\nlong time = 0;\nint sleep = 50;\nlong lastFallTime = -10000;\nlong fallBreak = 4000;\nconst char* message = \"u good bro?\";\nvoid loop() {\n    \/\/ if (time % 10000 == 0) {\n    \/\/     updateSerial();\n    \/\/     Serial.println(\"update bro\");\n    \/\/ }\n    \/\/ if (time == 30000) {\n    \/\/     Serial.println(\"sdfaksd\");\n    \/\/     etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ }\n\n    \/\/ Serial.println(\"ur mom\");\n    \/\/ delay(1000);\n    sensors_event_t event;\n    accel.getEvent(&event);\n    \/\/ Serial.print(\"X: \");\n    \/\/ Serial.println(\"m\/s^2 \");\n    Vector3D acc;\n    acc.x = event.acceleration.x;\n    acc.y = -event.acceleration.z;\n    acc.z = -event.acceleration.y;\n    \/\/ Serial.print(sdf.x);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Y: \");\n    \/\/ Serial.print(sdf.y);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Z: \");\n    \/\/ Serial.print(sdf.z);\n    \/\/ Serial.print(\",\\n\");\n    \/\/ Serial.print(\"mag: \");\n    \/\/ Serial.println(sdf.mag() - 9.8);\n    if (acc.mag() - 10.0 > 3.0) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    delay(sleep);\n    time += sleep;\n}\n","textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"4"}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"5"}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument\/formatting","params":{"options":{"tabSize":4,"insertSpaces":true},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}},"id":4}
>>>
Content-Length: 130

{"jsonrpc":"2.0","id":4,"result":[{"range":{"start":{"line":149,"character":1},"end":{"line":151,"character":0}},"newText":"\n"}]}
<<<
Content-Length: 282

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"\n","rangeLength":0,"range":{"start":{"character":1,"line":149},"end":{"character":1,"line":149}}}],"textDocument":{"version":11,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}Content-Length: 280

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":0,"line":150},"end":{"character":0,"line":151}}}],"textDocument":{"version":12,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}Content-Length: 5253

{"jsonrpc":"2.0","method":"textDocument\/didSave","params":{"text":"#include <Adafruit_ADXL345_U.h>\n#include <Adafruit_Sensor.h>\n#include <MPU6050.h>\n#include <SoftwareSerial.h>\n#include <Wire.h>\nstruct Vector3D {\n    double x = 0.0;\n    double y = 0.0;\n    double z = 0.0;\n    double mag() {\n        return sqrt(x * x + y * y + z * z);\n    }\n};\nMPU6050 mpu;\nSoftwareSerial mySerial(3, 2); \/\/ RX, TX\nAdafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();\nvoid checkGyroSettings();\nvoid updateSerial() {\n    delay(500);\n    while (Serial.available()) {\n        String serialIn = Serial.readString();\n        Serial.print(\"Serial in: \");\n        Serial.println(serialIn);\n        mySerial.println(serialIn); \/\/ Forward what Serial received to Software Serial Port\n    }\n    int i = 2000;\n    while (mySerial.available() || i < 100) {\n        String serialOut = mySerial.readString();\n        Serial.println(serialOut); \/\/ Forward what Software Serial received to Serial Port\n        i++;\n        delay(50);\n    }\n}\nvoid etPhoneHome(char* countrycode, char* phonenumber, char* message) {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CMGF=1\"); \/\/ Configuring TEXT mode\n    updateSerial();\n    mySerial.print(\"AT+CMGS=\\\"+\"); \/\/ change ZZ with country code and xxxxxxxxxxx with phone number to sms\n    mySerial.print(countrycode);\n    mySerial.print(phonenumber);\n    mySerial.println(\"\\\"\");\n    updateSerial();\n    mySerial.print(message); \/\/ text content\n    updateSerial();\n    mySerial.write(26);\n}\nvoid initSimThing() {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    updateSerial();\n    mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    updateSerial();\n    mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    updateSerial();\n}\nvoid setup() {\n    mySerial.begin(9600);\n    Serial.begin(9600);\n    Serial.println(\"Hello World\");\n    Serial.println(\"Init MPU\");\n    delay(1000);\n    int i = 0;\n    while (1) {\n        updateSerial();\n    }\n    \/\/ mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    \/\/ delay(2000);\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    \/\/ updateSerial();\n    \/\/ etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ mpu.calibrateGyro();\n    if (!accel.begin()) {\n        Serial.println(\"no acc :(\");\n    } else {\n        Serial.println(\"acc :)\");\n    }\n    sensors_event_t event;\n    accel.getEvent(&event);\n    Vector3D sdf;\n    sdf.x = event.acceleration.x;\n    sdf.y = -event.acceleration.z;\n    sdf.z = -event.acceleration.y;\n    if (abs(10 - sdf.z) > 2) {\n        Serial.println(\"Incorrect acc orientation\");\n        Serial.print(\"X: \");\n        Serial.print(sdf.x);\n        Serial.print(\", Y: \");\n        Serial.print(sdf.y);\n        Serial.print(\", Z: \");\n        Serial.println(sdf.z);\n    }\n}\n\nlong time = 0;\nint sleep = 50;\nlong lastFallTime = -10000;\nlong fallBreak = 4000;\nconst char* message = \"u good bro?\";\nvoid loop() {\n    \/\/ if (time % 10000 == 0) {\n    \/\/     updateSerial();\n    \/\/     Serial.println(\"update bro\");\n    \/\/ }\n    \/\/ if (time == 30000) {\n    \/\/     Serial.println(\"sdfaksd\");\n    \/\/     etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ }\n\n    \/\/ Serial.println(\"ur mom\");\n    \/\/ delay(1000);\n    sensors_event_t event;\n    accel.getEvent(&event);\n    \/\/ Serial.print(\"X: \");\n    \/\/ Serial.println(\"m\/s^2 \");\n    Vector3D acc;\n    acc.x = event.acceleration.x;\n    acc.y = -event.acceleration.z;\n    acc.z = -event.acceleration.y;\n    \/\/ Serial.print(sdf.x);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Y: \");\n    \/\/ Serial.print(sdf.y);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Z: \");\n    \/\/ Serial.print(sdf.z);\n    \/\/ Serial.print(\",\\n\");\n    \/\/ Serial.print(\"mag: \");\n    \/\/ Serial.println(sdf.mag() - 9.8);\n    if (acc.mag() - 10.0 > 3.0) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    delay(sleep);\n    time += sleep;\n}\n","textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"6"}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"7"}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 286

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"\n    \n","rangeLength":1,"range":{"start":{"character":5,"line":66},"end":{"character":0,"line":67}}}],"textDocument":{"version":14,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}
>>>
Content-Length: 156

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":13,"diagnostics":[]}}Content-Length: 118

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"8"}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 278

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":3,"line":67},"end":{"character":4,"line":67}}}],"textDocument":{"version":15,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}Content-Length: 590

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":2,"line":67},"end":{"character":3,"line":67}}},{"text":"","rangeLength":1,"range":{"start":{"character":1,"line":67},"end":{"character":2,"line":67}}},{"text":"","rangeLength":1,"range":{"start":{"character":0,"line":67},"end":{"character":1,"line":67}}},{"text":"","rangeLength":1,"range":{"start":{"character":0,"line":67},"end":{"character":0,"line":68}}}],"textDocument":{"version":19,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}
>>>
Content-Length: 156

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":18,"diagnostics":[]}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","method":"textDocument\/formatting","params":{"options":{"tabSize":4,"insertSpaces":true},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}},"id":5}
>>>
Content-Length: 130

{"jsonrpc":"2.0","id":5,"result":[{"range":{"start":{"line":149,"character":1},"end":{"line":151,"character":0}},"newText":"\n"}]}
<<<
Content-Length: 282

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"\n","rangeLength":0,"range":{"start":{"character":1,"line":149},"end":{"character":1,"line":149}}}],"textDocument":{"version":21,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}Content-Length: 280

{"jsonrpc":"2.0","method":"textDocument\/didChange","params":{"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":0,"line":150},"end":{"character":0,"line":151}}}],"textDocument":{"version":22,"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}Content-Length: 5253

{"jsonrpc":"2.0","method":"textDocument\/didSave","params":{"text":"#include <Adafruit_ADXL345_U.h>\n#include <Adafruit_Sensor.h>\n#include <MPU6050.h>\n#include <SoftwareSerial.h>\n#include <Wire.h>\nstruct Vector3D {\n    double x = 0.0;\n    double y = 0.0;\n    double z = 0.0;\n    double mag() {\n        return sqrt(x * x + y * y + z * z);\n    }\n};\nMPU6050 mpu;\nSoftwareSerial mySerial(3, 2); \/\/ RX, TX\nAdafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();\nvoid checkGyroSettings();\nvoid updateSerial() {\n    delay(500);\n    while (Serial.available()) {\n        String serialIn = Serial.readString();\n        Serial.print(\"Serial in: \");\n        Serial.println(serialIn);\n        mySerial.println(serialIn); \/\/ Forward what Serial received to Software Serial Port\n    }\n    int i = 2000;\n    while (mySerial.available() || i < 100) {\n        String serialOut = mySerial.readString();\n        Serial.println(serialOut); \/\/ Forward what Software Serial received to Serial Port\n        i++;\n        delay(50);\n    }\n}\nvoid etPhoneHome(char* countrycode, char* phonenumber, char* message) {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CMGF=1\"); \/\/ Configuring TEXT mode\n    updateSerial();\n    mySerial.print(\"AT+CMGS=\\\"+\"); \/\/ change ZZ with country code and xxxxxxxxxxx with phone number to sms\n    mySerial.print(countrycode);\n    mySerial.print(phonenumber);\n    mySerial.println(\"\\\"\");\n    updateSerial();\n    mySerial.print(message); \/\/ text content\n    updateSerial();\n    mySerial.write(26);\n}\nvoid initSimThing() {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    updateSerial();\n    mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    updateSerial();\n    mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    updateSerial();\n}\nvoid setup() {\n    mySerial.begin(9600);\n    Serial.begin(9600);\n    Serial.println(\"Hello World\");\n    Serial.println(\"Init MPU\");\n    delay(1000);\n    int i = 0;\n    while (1) {\n        updateSerial();\n    }\n    \/\/ mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    \/\/ delay(2000);\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    \/\/ updateSerial();\n    \/\/ etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ mpu.calibrateGyro();\n    if (!accel.begin()) {\n        Serial.println(\"no acc :(\");\n    } else {\n        Serial.println(\"acc :)\");\n    }\n    sensors_event_t event;\n    accel.getEvent(&event);\n    Vector3D sdf;\n    sdf.x = event.acceleration.x;\n    sdf.y = -event.acceleration.z;\n    sdf.z = -event.acceleration.y;\n    if (abs(10 - sdf.z) > 2) {\n        Serial.println(\"Incorrect acc orientation\");\n        Serial.print(\"X: \");\n        Serial.print(sdf.x);\n        Serial.print(\", Y: \");\n        Serial.print(sdf.y);\n        Serial.print(\", Z: \");\n        Serial.println(sdf.z);\n    }\n}\n\nlong time = 0;\nint sleep = 50;\nlong lastFallTime = -10000;\nlong fallBreak = 4000;\nconst char* message = \"u good bro?\";\nvoid loop() {\n    \/\/ if (time % 10000 == 0) {\n    \/\/     updateSerial();\n    \/\/     Serial.println(\"update bro\");\n    \/\/ }\n    \/\/ if (time == 30000) {\n    \/\/     Serial.println(\"sdfaksd\");\n    \/\/     etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ }\n\n    \/\/ Serial.println(\"ur mom\");\n    \/\/ delay(1000);\n    sensors_event_t event;\n    accel.getEvent(&event);\n    \/\/ Serial.print(\"X: \");\n    \/\/ Serial.println(\"m\/s^2 \");\n    Vector3D acc;\n    acc.x = event.acceleration.x;\n    acc.y = -event.acceleration.z;\n    acc.z = -event.acceleration.y;\n    \/\/ Serial.print(sdf.x);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Y: \");\n    \/\/ Serial.print(sdf.y);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Z: \");\n    \/\/ Serial.print(sdf.z);\n    \/\/ Serial.print(\",\\n\");\n    \/\/ Serial.print(\"mag: \");\n    \/\/ Serial.println(sdf.mag() - 9.8);\n    if (acc.mag() - 10.0 > 3.0) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    delay(sleep);\n    time += sleep;\n}\n","textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"}}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"9"}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","result":null,"id":"10"}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 44

{"jsonrpc":"2.0","method":"shutdown","id":6}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 33

{"jsonrpc":"2.0","method":"exit"}<<< Read Error: EOF
<<< Read Error: EOF
<<< Read Error: EOF







Started logging.

<<<
Content-Length: 2927

{"jsonrpc":"2.0","id":1,"params":{"processId":18044,"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto","name":"C:\/Users\/woodc\/TrshProto"}],"rootUri":"file:\/\/\/C:\/Users\/woodc\/TrshProto","rootPath":"C:\\Users\\woodc\\TrshProto","clientInfo":{"version":"0.10.0-dev+684e930","name":"Neovim"},"capabilities":{"workspace":{"semanticTokens":null,"inlayHint":{"refreshSupport":true},"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":true},"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"applyEdit":true,"configuration":true,"workspaceFolders":true},"window":{"showDocument":{"support":true},"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}}},"textDocument":{"semanticTokens":null,"references":{"dynamicRegistration":false},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"]}},"typeDefinition":{"linkSupport":true},"implementation":{"linkSupport":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"declaration":{"linkSupport":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"inlayHint":{"resolveSupport":{"properties":[]},"dynamicRegistration":true},"completion":{"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]},"dynamicRegistration":false,"contextSupport":false,"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"tagSupport":{"valueSet":[1,2]},"relatedInformation":true,"dataSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"documentHighlight":{"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"diagnostic":{"dynamicRegistration":false},"documentSymbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"synchronization":{"willSave":true,"dynamicRegistration":false,"willSaveWaitUntil":true,"didSave":true},"rangeFormatting":{"dynamicRegistration":true}},"general":{"positionEncodings":["utf-16"]}}},"method":"initialize"}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.5"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","params":{},"method":"initialized"}Content-Length: 5288

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":0,"text":"#include <Adafruit_ADXL345_U.h>\n#include <Adafruit_Sensor.h>\n#include <MPU6050.h>\n#include <SoftwareSerial.h>\n#include <Wire.h>\nstruct Vector3D {\n    double x = 0.0;\n    double y = 0.0;\n    double z = 0.0;\n    double mag() {\n        return sqrt(x * x + y * y + z * z);\n    }\n};\nMPU6050 mpu;\nSoftwareSerial mySerial(3, 2); \/\/ RX, TX\nAdafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();\nvoid checkGyroSettings();\nvoid updateSerial() {\n    delay(500);\n    while (Serial.available()) {\n        String serialIn = Serial.readString();\n        Serial.print(\"Serial in: \");\n        Serial.println(serialIn);\n        mySerial.println(serialIn); \/\/ Forward what Serial received to Software Serial Port\n    }\n    int i = 2000;\n    while (mySerial.available() || i < 100) {\n        String serialOut = mySerial.readString();\n        Serial.println(serialOut); \/\/ Forward what Software Serial received to Serial Port\n        i++;\n        delay(50);\n    }\n}\nvoid etPhoneHome(char* countrycode, char* phonenumber, char* message) {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CMGF=1\"); \/\/ Configuring TEXT mode\n    updateSerial();\n    mySerial.print(\"AT+CMGS=\\\"+\"); \/\/ change ZZ with country code and xxxxxxxxxxx with phone number to sms\n    mySerial.print(countrycode);\n    mySerial.print(phonenumber);\n    mySerial.println(\"\\\"\");\n    updateSerial();\n    mySerial.print(message); \/\/ text content\n    updateSerial();\n    mySerial.write(26);\n}\nvoid initSimThing() {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    updateSerial();\n    mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    updateSerial();\n    mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    updateSerial();\n}\nvoid setup() {\n    mySerial.begin(9600);\n    Serial.begin(9600);\n    Serial.println(\"Hello World\");\n    Serial.println(\"Init MPU\");\n    delay(1000);\n    int i = 0;\n    while (1) {\n        updateSerial();\n    }\n    \/\/ mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    \/\/ delay(2000);\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    \/\/ updateSerial();\n    \/\/ etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ mpu.calibrateGyro();\n    if (!accel.begin()) {\n        Serial.println(\"no acc :(\");\n    } else {\n        Serial.println(\"acc :)\");\n    }\n    sensors_event_t event;\n    accel.getEvent(&event);\n    Vector3D sdf;\n    sdf.x = event.acceleration.x;\n    sdf.y = -event.acceleration.z;\n    sdf.z = -event.acceleration.y;\n    if (abs(10 - sdf.z) > 2) {\n        Serial.println(\"Incorrect acc orientation\");\n        Serial.print(\"X: \");\n        Serial.print(sdf.x);\n        Serial.print(\", Y: \");\n        Serial.print(sdf.y);\n        Serial.print(\", Z: \");\n        Serial.println(sdf.z);\n    }\n}\n\nlong time = 0;\nint sleep = 50;\nlong lastFallTime = -10000;\nlong fallBreak = 4000;\nconst char* message = \"u good bro?\";\nvoid loop() {\n    \/\/ if (time % 10000 == 0) {\n    \/\/     updateSerial();\n    \/\/     Serial.println(\"update bro\");\n    \/\/ }\n    \/\/ if (time == 30000) {\n    \/\/     Serial.println(\"sdfaksd\");\n    \/\/     etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ }\n\n    \/\/ Serial.println(\"ur mom\");\n    \/\/ delay(1000);\n    sensors_event_t event;\n    accel.getEvent(&event);\n    \/\/ Serial.print(\"X: \");\n    \/\/ Serial.println(\"m\/s^2 \");\n    Vector3D acc;\n    acc.x = event.acceleration.x;\n    acc.y = -event.acceleration.z;\n    acc.z = -event.acceleration.y;\n    \/\/ Serial.print(sdf.x);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Y: \");\n    \/\/ Serial.print(sdf.y);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Z: \");\n    \/\/ Serial.print(sdf.z);\n    \/\/ Serial.print(\",\\n\");\n    \/\/ Serial.print(\"mag: \");\n    \/\/ Serial.println(sdf.mag() - 9.8);\n    if (acc.mag() - 10.0 > 3.0) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    delay(sleep);\n    time += sleep;\n}\n","languageId":"arduino"}},"method":"textDocument\/didOpen"}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"1"}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 152

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/AppData/Local/clangd/config.yaml","diagnostics":[]}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/.clangd","diagnostics":[]}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 186

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/AppData/Local/Temp/arduino-language-server1235177802/build/.clangd","diagnostics":[]}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 155

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":1,"diagnostics":[]}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 286

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":3},"contentChanges":[{"text":"\n    \n","rangeLength":1,"range":{"start":{"character":16,"line":62},"end":{"character":0,"line":63}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 155

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":2,"diagnostics":[]}}
<<<
Content-Length: 279

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":4},"contentChanges":[{"text":"ET","rangeLength":0,"range":{"start":{"character":4,"line":63},"end":{"character":4,"line":63}}}]},"method":"textDocument\/didChange"}Content-Length: 215

{"jsonrpc":"2.0","id":2,"params":{"position":{"character":6,"line":63},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"context":{"triggerKind":1}},"method":"textDocument\/completion"}
>>>
Content-Length: 849

{"jsonrpc":"2.0","id":2,"result":{"isIncomplete":true,"items":[{"label":" etPhoneHome(char *countrycode, char *phonenumber, char *message)","kind":3,"detail":"void","sortText":"409e07cfetPhoneHome","filterText":"etPhoneHome","insertText":"etPhoneHome","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":6}},"newText":"etPhoneHome"}},{"label":" sensors_event_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`  \nSensor event (36 bytes) struct sensor_event_s is used to provide a single sensor event in a common format."},"sortText":"41afbbdesensors_event_t","filterText":"sensors_event_t","insertText":"sensors_event_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":6}},"newText":"sensors_event_t"}}]}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'ET'"}]}}
<<<
Content-Length: 277

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":5},"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":5,"line":63},"end":{"character":6,"line":63}}}]},"method":"textDocument\/didChange"}Content-Length: 215

{"jsonrpc":"2.0","id":3,"params":{"position":{"character":5,"line":63},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"context":{"triggerKind":3}},"method":"textDocument\/completion"}
>>>
Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'E'"}]}}Content-Length: 22421

{"jsonrpc":"2.0","id":3,"result":{"isIncomplete":true,"items":[{"label":" EULER","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eEULER","filterText":"EULER","insertText":"EULER","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EULER"}},{"label":" EXTERNAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eEXTERNAL","filterText":"EXTERNAL","insertText":"EXTERNAL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EXTERNAL"}},{"label":" etPhoneHome(char *countrycode, char *phonenumber, char *message)","kind":3,"detail":"void","sortText":"407edfe4etPhoneHome","filterText":"etPhoneHome","insertText":"etPhoneHome","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"etPhoneHome"}},{"label":" enum","kind":14,"sortText":"40a9a1f8enum","filterText":"enum","insertText":"enum","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"enum"}},{"label":" extern","kind":14,"sortText":"40a9a1f8extern","filterText":"extern","insertText":"extern","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"extern"}},{"label":" EOF","kind":1,"sortText":"40f2a950EOF","filterText":"EOF","insertText":"EOF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EOF"}},{"label":" EXIT_FAILURE","kind":1,"sortText":"40f2a950EXIT_FAILURE","filterText":"EXIT_FAILURE","insertText":"EXIT_FAILURE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EXIT_FAILURE"}},{"label":" EXIT_SUCCESS","kind":1,"sortText":"40f2a950EXIT_SUCCESS","filterText":"EXIT_SUCCESS","insertText":"EXIT_SUCCESS","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EXIT_SUCCESS"}},{"label":" expf","kind":1,"sortText":"40f2a950expf","filterText":"expf","insertText":"expf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"expf"}},{"label":" E2END","kind":1,"sortText":"41138ff8E2END","filterText":"E2END","insertText":"E2END","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"E2END"}},{"label":" E2PAGESIZE","kind":1,"sortText":"41138ff8E2PAGESIZE","filterText":"E2PAGESIZE","insertText":"E2PAGESIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"E2PAGESIZE"}},{"label":" EEAR","kind":1,"sortText":"41138ff8EEAR","filterText":"EEAR","insertText":"EEAR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR"}},{"label":" EEAR0","kind":1,"sortText":"41138ff8EEAR0","filterText":"EEAR0","insertText":"EEAR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR0"}},{"label":" EEAR1","kind":1,"sortText":"41138ff8EEAR1","filterText":"EEAR1","insertText":"EEAR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR1"}},{"label":" EEAR2","kind":1,"sortText":"41138ff8EEAR2","filterText":"EEAR2","insertText":"EEAR2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR2"}},{"label":" EEAR3","kind":1,"sortText":"41138ff8EEAR3","filterText":"EEAR3","insertText":"EEAR3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR3"}},{"label":" EEAR4","kind":1,"sortText":"41138ff8EEAR4","filterText":"EEAR4","insertText":"EEAR4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR4"}},{"label":" EEAR5","kind":1,"sortText":"41138ff8EEAR5","filterText":"EEAR5","insertText":"EEAR5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR5"}},{"label":" EEAR6","kind":1,"sortText":"41138ff8EEAR6","filterText":"EEAR6","insertText":"EEAR6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR6"}},{"label":" EEAR7","kind":1,"sortText":"41138ff8EEAR7","filterText":"EEAR7","insertText":"EEAR7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR7"}},{"label":" EEAR8","kind":1,"sortText":"41138ff8EEAR8","filterText":"EEAR8","insertText":"EEAR8","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR8"}},{"label":" EEAR9","kind":1,"sortText":"41138ff8EEAR9","filterText":"EEAR9","insertText":"EEAR9","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR9"}},{"label":" EEARH","kind":1,"sortText":"41138ff8EEARH","filterText":"EEARH","insertText":"EEARH","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEARH"}},{"label":" EEARL","kind":1,"sortText":"41138ff8EEARL","filterText":"EEARL","insertText":"EEARL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEARL"}},{"label":" EECR","kind":1,"sortText":"41138ff8EECR","filterText":"EECR","insertText":"EECR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EECR"}},{"label":" EEDR","kind":1,"sortText":"41138ff8EEDR","filterText":"EEDR","insertText":"EEDR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR"}},{"label":" EEDR0","kind":1,"sortText":"41138ff8EEDR0","filterText":"EEDR0","insertText":"EEDR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR0"}},{"label":" EEDR1","kind":1,"sortText":"41138ff8EEDR1","filterText":"EEDR1","insertText":"EEDR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR1"}},{"label":" EEDR2","kind":1,"sortText":"41138ff8EEDR2","filterText":"EEDR2","insertText":"EEDR2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR2"}},{"label":" EEDR3","kind":1,"sortText":"41138ff8EEDR3","filterText":"EEDR3","insertText":"EEDR3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR3"}},{"label":" EEDR4","kind":1,"sortText":"41138ff8EEDR4","filterText":"EEDR4","insertText":"EEDR4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR4"}},{"label":" EEDR5","kind":1,"sortText":"41138ff8EEDR5","filterText":"EEDR5","insertText":"EEDR5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR5"}},{"label":" EEDR6","kind":1,"sortText":"41138ff8EEDR6","filterText":"EEDR6","insertText":"EEDR6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR6"}},{"label":" EEDR7","kind":1,"sortText":"41138ff8EEDR7","filterText":"EEDR7","insertText":"EEDR7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR7"}},{"label":" EEMEM","kind":1,"sortText":"41138ff8EEMEM","filterText":"EEMEM","insertText":"EEMEM","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEMEM"}},{"label":" EEMPE","kind":1,"sortText":"41138ff8EEMPE","filterText":"EEMPE","insertText":"EEMPE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEMPE"}},{"label":" EEPE","kind":1,"sortText":"41138ff8EEPE","filterText":"EEPE","insertText":"EEPE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEPE"}},{"label":" EEPM0","kind":1,"sortText":"41138ff8EEPM0","filterText":"EEPM0","insertText":"EEPM0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEPM0"}},{"label":" EEPM1","kind":1,"sortText":"41138ff8EEPM1","filterText":"EEPM1","insertText":"EEPM1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEPM1"}},{"label":" EERE","kind":1,"sortText":"41138ff8EERE","filterText":"EERE","insertText":"EERE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EERE"}},{"label":" EERIE","kind":1,"sortText":"41138ff8EERIE","filterText":"EERIE","insertText":"EERIE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EERIE"}},{"label":" EE_READY_vect","kind":1,"sortText":"41138ff8EE_READY_vect","filterText":"EE_READY_vect","insertText":"EE_READY_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EE_READY_vect"}},{"label":" EE_READY_vect_num","kind":1,"sortText":"41138ff8EE_READY_vect_num","filterText":"EE_READY_vect_num","insertText":"EE_READY_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EE_READY_vect_num"}},{"label":" EFUSE_DEFAULT","kind":1,"sortText":"41138ff8EFUSE_DEFAULT","filterText":"EFUSE_DEFAULT","insertText":"EFUSE_DEFAULT","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EFUSE_DEFAULT"}},{"label":" EICRA","kind":1,"sortText":"41138ff8EICRA","filterText":"EICRA","insertText":"EICRA","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EICRA"}},{"label":" EIFR","kind":1,"sortText":"41138ff8EIFR","filterText":"EIFR","insertText":"EIFR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EIFR"}},{"label":" EIMSK","kind":1,"sortText":"41138ff8EIMSK","filterText":"EIMSK","insertText":"EIMSK","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EIMSK"}},{"label":" EMPTY_INTERRUPT(vector)","kind":1,"sortText":"41138ff8EMPTY_INTERRUPT","filterText":"EMPTY_INTERRUPT","insertText":"EMPTY_INTERRUPT","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EMPTY_INTERRUPT"}},{"label":" EXCLK","kind":1,"sortText":"41138ff8EXCLK","filterText":"EXCLK","insertText":"EXCLK","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EXCLK"}},{"label":" EXTRF","kind":1,"sortText":"41138ff8EXTRF","filterText":"EXTRF","insertText":"EXTRF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EXTRF"}},{"label":" eeprom_busy_wait()","kind":1,"sortText":"41138ff8eeprom_busy_wait","filterText":"eeprom_busy_wait","insertText":"eeprom_busy_wait","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_busy_wait"}},{"label":" eeprom_is_ready()","kind":1,"sortText":"41138ff8eeprom_is_ready","filterText":"eeprom_is_ready","insertText":"eeprom_is_ready","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_is_ready"}},{"label":" exit(int status)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The exit() function terminates the application. Since there is no environment to return to, \\\\c status is ignored, and code execution will eventually reach an infinite loop, thereby effectively halting all code processing. Before entering the infinite loop, interrupts are globally disabled.  \nIn a C++ context, global destructors will be called before halting execution."},"sortText":"41675d28exit","filterText":"exit","insertText":"exit","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"exit"}},{"label":" exp(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The exp() function returns the exponential value of \\\\a \\_\\_x."},"sortText":"41675d28exp","filterText":"exp","insertText":"exp","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"exp"}},{"label":" eeprom_read_block(void *dst, const void *src, size_t n)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Read a block of \\\\a \\_\\_n bytes from EEPROM address \\\\a \\_\\_src to SRAM  \n\\\\a \\_\\_dst."},"sortText":"417b3463eeprom_read_block","filterText":"eeprom_read_block","insertText":"eeprom_read_block","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_read_block"}},{"label":" eeprom_read_byte(const uint8_t *p)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Read one byte from EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_read_byte","filterText":"eeprom_read_byte","insertText":"eeprom_read_byte","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_read_byte"}},{"label":" eeprom_read_dword(const uint32_t *p)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Read one 32-bit double word (little endian) from EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_read_dword","filterText":"eeprom_read_dword","insertText":"eeprom_read_dword","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_read_dword"}},{"label":" eeprom_read_float(const float *p)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Read one float value (little endian) from EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_read_float","filterText":"eeprom_read_float","insertText":"eeprom_read_float","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_read_float"}},{"label":" eeprom_read_word(const uint16_t *p)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Read one 16-bit word (little endian) from EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_read_word","filterText":"eeprom_read_word","insertText":"eeprom_read_word","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_read_word"}},{"label":" eeprom_update_block(const void *src, void *dst, size_t n)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Update a block of \\\\a \\_\\_n bytes to EEPROM address \\\\a \\_\\_dst from \\\\a \\_\\_src.  \n\\\\note The argument order is mismatch with common functions like strcpy()."},"sortText":"417b3463eeprom_update_block","filterText":"eeprom_update_block","insertText":"eeprom_update_block","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_update_block"}},{"label":" eeprom_update_byte(uint8_t *p, uint8_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Update a byte \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_update_byte","filterText":"eeprom_update_byte","insertText":"eeprom_update_byte","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_update_byte"}},{"label":" eeprom_update_dword(uint32_t *p, uint32_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Update a 32-bit double word \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_update_dword","filterText":"eeprom_update_dword","insertText":"eeprom_update_dword","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_update_dword"}},{"label":" eeprom_update_float(float *p, float value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Update a float \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_update_float","filterText":"eeprom_update_float","insertText":"eeprom_update_float","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_update_float"}},{"label":" eeprom_update_word(uint16_t *p, uint16_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Update a word \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_update_word","filterText":"eeprom_update_word","insertText":"eeprom_update_word","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_update_word"}},{"label":" eeprom_write_block(const void *src, void *dst, size_t n)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Write a block of \\\\a \\_\\_n bytes to EEPROM address \\\\a \\_\\_dst from \\\\a \\_\\_src.  \n\\\\note The argument order is mismatch with common functions like strcpy()."},"sortText":"417b3463eeprom_write_block","filterText":"eeprom_write_block","insertText":"eeprom_write_block","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_write_block"}},{"label":" eeprom_write_byte(uint8_t *p, uint8_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Write a byte \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_write_byte","filterText":"eeprom_write_byte","insertText":"eeprom_write_byte","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_write_byte"}},{"label":" eeprom_write_dword(uint32_t *p, uint32_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Write a 32-bit double word \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_write_dword","filterText":"eeprom_write_dword","insertText":"eeprom_write_dword","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_write_dword"}},{"label":" eeprom_write_float(float *p, float value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Write a float \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_write_float","filterText":"eeprom_write_float","insertText":"eeprom_write_float","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_write_float"}},{"label":" eeprom_write_word(uint16_t *p, uint16_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Write a word \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_write_word","filterText":"eeprom_write_word","insertText":"eeprom_write_word","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_write_word"}},{"label":" MPU6050_RANGE_2G","kind":20,"detail":"mpu6050_range_t","sortText":"80000000MPU6050_RANGE_2G","filterText":"MPU6050_RANGE_2G","insertText":"MPU6050_RANGE_2G","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"MPU6050_RANGE_2G"}},{"label":" MPU6050_SCALE_2000DPS","kind":20,"detail":"mpu6050_dps_t","sortText":"80000000MPU6050_SCALE_2000DPS","filterText":"MPU6050_SCALE_2000DPS","insertText":"MPU6050_SCALE_2000DPS","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"MPU6050_SCALE_2000DPS"}},{"label":" sensors_event_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`  \nSensor event (36 bytes) struct sensor_event_s is used to provide a single sensor event in a common format."},"sortText":"80000000sensors_event_t","filterText":"sensors_event_t","insertText":"sensors_event_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"sensors_event_t"}},{"label":"•serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"80000000serialEventRun","filterText":"serialEventRun","insertText":"serialEventRun","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"serialEventRun"}},{"label":" wdt_enable(const uint8_t value)","kind":3,"detail":"void","sortText":"80000000wdt_enable","filterText":"wdt_enable","insertText":"wdt_enable","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"wdt_enable"}}]}}
<<<
Content-Length: 277

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":6},"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":4,"line":63},"end":{"character":5,"line":63}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 155

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":5,"diagnostics":[]}}
<<<
Content-Length: 278

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":7},"contentChanges":[{"text":"e","rangeLength":0,"range":{"start":{"character":4,"line":63},"end":{"character":4,"line":63}}}]},"method":"textDocument\/didChange"}Content-Length: 215

{"jsonrpc":"2.0","id":4,"params":{"position":{"character":5,"line":63},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"context":{"triggerKind":1}},"method":"textDocument\/completion"}
>>>
Content-Length: 22421

{"jsonrpc":"2.0","id":4,"result":{"isIncomplete":true,"items":[{"label":" EULER","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eEULER","filterText":"EULER","insertText":"EULER","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EULER"}},{"label":" EXTERNAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eEXTERNAL","filterText":"EXTERNAL","insertText":"EXTERNAL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EXTERNAL"}},{"label":" etPhoneHome(char *countrycode, char *phonenumber, char *message)","kind":3,"detail":"void","sortText":"407edfe4etPhoneHome","filterText":"etPhoneHome","insertText":"etPhoneHome","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"etPhoneHome"}},{"label":" enum","kind":14,"sortText":"40a9a1f8enum","filterText":"enum","insertText":"enum","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"enum"}},{"label":" extern","kind":14,"sortText":"40a9a1f8extern","filterText":"extern","insertText":"extern","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"extern"}},{"label":" EOF","kind":1,"sortText":"40f2a950EOF","filterText":"EOF","insertText":"EOF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EOF"}},{"label":" EXIT_FAILURE","kind":1,"sortText":"40f2a950EXIT_FAILURE","filterText":"EXIT_FAILURE","insertText":"EXIT_FAILURE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EXIT_FAILURE"}},{"label":" EXIT_SUCCESS","kind":1,"sortText":"40f2a950EXIT_SUCCESS","filterText":"EXIT_SUCCESS","insertText":"EXIT_SUCCESS","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EXIT_SUCCESS"}},{"label":" expf","kind":1,"sortText":"40f2a950expf","filterText":"expf","insertText":"expf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"expf"}},{"label":" E2END","kind":1,"sortText":"41138ff8E2END","filterText":"E2END","insertText":"E2END","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"E2END"}},{"label":" E2PAGESIZE","kind":1,"sortText":"41138ff8E2PAGESIZE","filterText":"E2PAGESIZE","insertText":"E2PAGESIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"E2PAGESIZE"}},{"label":" EEAR","kind":1,"sortText":"41138ff8EEAR","filterText":"EEAR","insertText":"EEAR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR"}},{"label":" EEAR0","kind":1,"sortText":"41138ff8EEAR0","filterText":"EEAR0","insertText":"EEAR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR0"}},{"label":" EEAR1","kind":1,"sortText":"41138ff8EEAR1","filterText":"EEAR1","insertText":"EEAR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR1"}},{"label":" EEAR2","kind":1,"sortText":"41138ff8EEAR2","filterText":"EEAR2","insertText":"EEAR2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR2"}},{"label":" EEAR3","kind":1,"sortText":"41138ff8EEAR3","filterText":"EEAR3","insertText":"EEAR3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR3"}},{"label":" EEAR4","kind":1,"sortText":"41138ff8EEAR4","filterText":"EEAR4","insertText":"EEAR4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR4"}},{"label":" EEAR5","kind":1,"sortText":"41138ff8EEAR5","filterText":"EEAR5","insertText":"EEAR5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR5"}},{"label":" EEAR6","kind":1,"sortText":"41138ff8EEAR6","filterText":"EEAR6","insertText":"EEAR6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR6"}},{"label":" EEAR7","kind":1,"sortText":"41138ff8EEAR7","filterText":"EEAR7","insertText":"EEAR7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR7"}},{"label":" EEAR8","kind":1,"sortText":"41138ff8EEAR8","filterText":"EEAR8","insertText":"EEAR8","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR8"}},{"label":" EEAR9","kind":1,"sortText":"41138ff8EEAR9","filterText":"EEAR9","insertText":"EEAR9","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEAR9"}},{"label":" EEARH","kind":1,"sortText":"41138ff8EEARH","filterText":"EEARH","insertText":"EEARH","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEARH"}},{"label":" EEARL","kind":1,"sortText":"41138ff8EEARL","filterText":"EEARL","insertText":"EEARL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEARL"}},{"label":" EECR","kind":1,"sortText":"41138ff8EECR","filterText":"EECR","insertText":"EECR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EECR"}},{"label":" EEDR","kind":1,"sortText":"41138ff8EEDR","filterText":"EEDR","insertText":"EEDR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR"}},{"label":" EEDR0","kind":1,"sortText":"41138ff8EEDR0","filterText":"EEDR0","insertText":"EEDR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR0"}},{"label":" EEDR1","kind":1,"sortText":"41138ff8EEDR1","filterText":"EEDR1","insertText":"EEDR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR1"}},{"label":" EEDR2","kind":1,"sortText":"41138ff8EEDR2","filterText":"EEDR2","insertText":"EEDR2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR2"}},{"label":" EEDR3","kind":1,"sortText":"41138ff8EEDR3","filterText":"EEDR3","insertText":"EEDR3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR3"}},{"label":" EEDR4","kind":1,"sortText":"41138ff8EEDR4","filterText":"EEDR4","insertText":"EEDR4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR4"}},{"label":" EEDR5","kind":1,"sortText":"41138ff8EEDR5","filterText":"EEDR5","insertText":"EEDR5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR5"}},{"label":" EEDR6","kind":1,"sortText":"41138ff8EEDR6","filterText":"EEDR6","insertText":"EEDR6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR6"}},{"label":" EEDR7","kind":1,"sortText":"41138ff8EEDR7","filterText":"EEDR7","insertText":"EEDR7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEDR7"}},{"label":" EEMEM","kind":1,"sortText":"41138ff8EEMEM","filterText":"EEMEM","insertText":"EEMEM","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEMEM"}},{"label":" EEMPE","kind":1,"sortText":"41138ff8EEMPE","filterText":"EEMPE","insertText":"EEMPE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEMPE"}},{"label":" EEPE","kind":1,"sortText":"41138ff8EEPE","filterText":"EEPE","insertText":"EEPE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEPE"}},{"label":" EEPM0","kind":1,"sortText":"41138ff8EEPM0","filterText":"EEPM0","insertText":"EEPM0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEPM0"}},{"label":" EEPM1","kind":1,"sortText":"41138ff8EEPM1","filterText":"EEPM1","insertText":"EEPM1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EEPM1"}},{"label":" EERE","kind":1,"sortText":"41138ff8EERE","filterText":"EERE","insertText":"EERE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EERE"}},{"label":" EERIE","kind":1,"sortText":"41138ff8EERIE","filterText":"EERIE","insertText":"EERIE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EERIE"}},{"label":" EE_READY_vect","kind":1,"sortText":"41138ff8EE_READY_vect","filterText":"EE_READY_vect","insertText":"EE_READY_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EE_READY_vect"}},{"label":" EE_READY_vect_num","kind":1,"sortText":"41138ff8EE_READY_vect_num","filterText":"EE_READY_vect_num","insertText":"EE_READY_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EE_READY_vect_num"}},{"label":" EFUSE_DEFAULT","kind":1,"sortText":"41138ff8EFUSE_DEFAULT","filterText":"EFUSE_DEFAULT","insertText":"EFUSE_DEFAULT","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EFUSE_DEFAULT"}},{"label":" EICRA","kind":1,"sortText":"41138ff8EICRA","filterText":"EICRA","insertText":"EICRA","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EICRA"}},{"label":" EIFR","kind":1,"sortText":"41138ff8EIFR","filterText":"EIFR","insertText":"EIFR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EIFR"}},{"label":" EIMSK","kind":1,"sortText":"41138ff8EIMSK","filterText":"EIMSK","insertText":"EIMSK","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EIMSK"}},{"label":" EMPTY_INTERRUPT(vector)","kind":1,"sortText":"41138ff8EMPTY_INTERRUPT","filterText":"EMPTY_INTERRUPT","insertText":"EMPTY_INTERRUPT","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EMPTY_INTERRUPT"}},{"label":" EXCLK","kind":1,"sortText":"41138ff8EXCLK","filterText":"EXCLK","insertText":"EXCLK","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EXCLK"}},{"label":" EXTRF","kind":1,"sortText":"41138ff8EXTRF","filterText":"EXTRF","insertText":"EXTRF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"EXTRF"}},{"label":" eeprom_busy_wait()","kind":1,"sortText":"41138ff8eeprom_busy_wait","filterText":"eeprom_busy_wait","insertText":"eeprom_busy_wait","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_busy_wait"}},{"label":" eeprom_is_ready()","kind":1,"sortText":"41138ff8eeprom_is_ready","filterText":"eeprom_is_ready","insertText":"eeprom_is_ready","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_is_ready"}},{"label":" exit(int status)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The exit() function terminates the application. Since there is no environment to return to, \\\\c status is ignored, and code execution will eventually reach an infinite loop, thereby effectively halting all code processing. Before entering the infinite loop, interrupts are globally disabled.  \nIn a C++ context, global destructors will be called before halting execution."},"sortText":"41675d28exit","filterText":"exit","insertText":"exit","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"exit"}},{"label":" exp(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The exp() function returns the exponential value of \\\\a \\_\\_x."},"sortText":"41675d28exp","filterText":"exp","insertText":"exp","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"exp"}},{"label":" eeprom_read_block(void *dst, const void *src, size_t n)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Read a block of \\\\a \\_\\_n bytes from EEPROM address \\\\a \\_\\_src to SRAM  \n\\\\a \\_\\_dst."},"sortText":"417b3463eeprom_read_block","filterText":"eeprom_read_block","insertText":"eeprom_read_block","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_read_block"}},{"label":" eeprom_read_byte(const uint8_t *p)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Read one byte from EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_read_byte","filterText":"eeprom_read_byte","insertText":"eeprom_read_byte","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_read_byte"}},{"label":" eeprom_read_dword(const uint32_t *p)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Read one 32-bit double word (little endian) from EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_read_dword","filterText":"eeprom_read_dword","insertText":"eeprom_read_dword","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_read_dword"}},{"label":" eeprom_read_float(const float *p)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Read one float value (little endian) from EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_read_float","filterText":"eeprom_read_float","insertText":"eeprom_read_float","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_read_float"}},{"label":" eeprom_read_word(const uint16_t *p)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Read one 16-bit word (little endian) from EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_read_word","filterText":"eeprom_read_word","insertText":"eeprom_read_word","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_read_word"}},{"label":" eeprom_update_block(const void *src, void *dst, size_t n)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Update a block of \\\\a \\_\\_n bytes to EEPROM address \\\\a \\_\\_dst from \\\\a \\_\\_src.  \n\\\\note The argument order is mismatch with common functions like strcpy()."},"sortText":"417b3463eeprom_update_block","filterText":"eeprom_update_block","insertText":"eeprom_update_block","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_update_block"}},{"label":" eeprom_update_byte(uint8_t *p, uint8_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Update a byte \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_update_byte","filterText":"eeprom_update_byte","insertText":"eeprom_update_byte","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_update_byte"}},{"label":" eeprom_update_dword(uint32_t *p, uint32_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Update a 32-bit double word \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_update_dword","filterText":"eeprom_update_dword","insertText":"eeprom_update_dword","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_update_dword"}},{"label":" eeprom_update_float(float *p, float value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Update a float \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_update_float","filterText":"eeprom_update_float","insertText":"eeprom_update_float","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_update_float"}},{"label":" eeprom_update_word(uint16_t *p, uint16_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Update a word \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_update_word","filterText":"eeprom_update_word","insertText":"eeprom_update_word","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_update_word"}},{"label":" eeprom_write_block(const void *src, void *dst, size_t n)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Write a block of \\\\a \\_\\_n bytes to EEPROM address \\\\a \\_\\_dst from \\\\a \\_\\_src.  \n\\\\note The argument order is mismatch with common functions like strcpy()."},"sortText":"417b3463eeprom_write_block","filterText":"eeprom_write_block","insertText":"eeprom_write_block","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_write_block"}},{"label":" eeprom_write_byte(uint8_t *p, uint8_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Write a byte \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_write_byte","filterText":"eeprom_write_byte","insertText":"eeprom_write_byte","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_write_byte"}},{"label":" eeprom_write_dword(uint32_t *p, uint32_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Write a 32-bit double word \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_write_dword","filterText":"eeprom_write_dword","insertText":"eeprom_write_dword","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_write_dword"}},{"label":" eeprom_write_float(float *p, float value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Write a float \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_write_float","filterText":"eeprom_write_float","insertText":"eeprom_write_float","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_write_float"}},{"label":" eeprom_write_word(uint16_t *p, uint16_t value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_eeprom Write a word \\\\a \\_\\_value to EEPROM address \\\\a \\_\\_p."},"sortText":"417b3463eeprom_write_word","filterText":"eeprom_write_word","insertText":"eeprom_write_word","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"eeprom_write_word"}},{"label":" MPU6050_RANGE_2G","kind":20,"detail":"mpu6050_range_t","sortText":"80000000MPU6050_RANGE_2G","filterText":"MPU6050_RANGE_2G","insertText":"MPU6050_RANGE_2G","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"MPU6050_RANGE_2G"}},{"label":" MPU6050_SCALE_2000DPS","kind":20,"detail":"mpu6050_dps_t","sortText":"80000000MPU6050_SCALE_2000DPS","filterText":"MPU6050_SCALE_2000DPS","insertText":"MPU6050_SCALE_2000DPS","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"MPU6050_SCALE_2000DPS"}},{"label":" sensors_event_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`  \nSensor event (36 bytes) struct sensor_event_s is used to provide a single sensor event in a common format."},"sortText":"80000000sensors_event_t","filterText":"sensors_event_t","insertText":"sensors_event_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"sensors_event_t"}},{"label":"•serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"80000000serialEventRun","filterText":"serialEventRun","insertText":"serialEventRun","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"serialEventRun"}},{"label":" wdt_enable(const uint8_t value)","kind":3,"detail":"void","sortText":"80000000wdt_enable","filterText":"wdt_enable","insertText":"wdt_enable","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"newText":"wdt_enable"}}]}}Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'e'"}]}}
<<<
Content-Length: 278

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":8},"contentChanges":[{"text":"t","rangeLength":0,"range":{"start":{"character":5,"line":63},"end":{"character":5,"line":63}}}]},"method":"textDocument\/didChange"}Content-Length: 215

{"jsonrpc":"2.0","id":5,"params":{"position":{"character":6,"line":63},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"context":{"triggerKind":3}},"method":"textDocument\/completion"}
>>>
Content-Length: 849

{"jsonrpc":"2.0","id":5,"result":{"isIncomplete":true,"items":[{"label":" etPhoneHome(char *countrycode, char *phonenumber, char *message)","kind":3,"detail":"void","sortText":"407edfe4etPhoneHome","filterText":"etPhoneHome","insertText":"etPhoneHome","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":6}},"newText":"etPhoneHome"}},{"label":" sensors_event_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`  \nSensor event (36 bytes) struct sensor_event_s is used to provide a single sensor event in a common format."},"sortText":"41afbbdesensors_event_t","filterText":"sensors_event_t","insertText":"sensors_event_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":6}},"newText":"sensors_event_t"}}]}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'et'"}]}}
<<<
Content-Length: 278

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":9},"contentChanges":[{"text":"p","rangeLength":0,"range":{"start":{"character":6,"line":63},"end":{"character":6,"line":63}}}]},"method":"textDocument\/didChange"}Content-Length: 215

{"jsonrpc":"2.0","id":6,"params":{"position":{"character":7,"line":63},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"context":{"triggerKind":3}},"method":"textDocument\/completion"}
>>>
Content-Length: 2812

{"jsonrpc":"2.0","id":6,"result":{"isIncomplete":false,"items":[{"label":" etPhoneHome(char *countrycode, char *phonenumber, char *message)","kind":3,"detail":"void","sortText":"407edfe4etPhoneHome","filterText":"etPhoneHome","insertText":"etPhoneHome","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":7}},"newText":"etPhoneHome"}},{"label":" SENSOR_TYPE_PM100_ENV","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"80000000SENSOR_TYPE_PM100_ENV","filterText":"SENSOR_TYPE_PM100_ENV","insertText":"SENSOR_TYPE_PM100_ENV","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":7}},"newText":"SENSOR_TYPE_PM100_ENV"}},{"label":" SENSOR_TYPE_PM100_STD","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"80000000SENSOR_TYPE_PM100_STD","filterText":"SENSOR_TYPE_PM100_STD","insertText":"SENSOR_TYPE_PM100_STD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":7}},"newText":"SENSOR_TYPE_PM100_STD"}},{"label":" SENSOR_TYPE_PM10_ENV","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"80000000SENSOR_TYPE_PM10_ENV","filterText":"SENSOR_TYPE_PM10_ENV","insertText":"SENSOR_TYPE_PM10_ENV","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":7}},"newText":"SENSOR_TYPE_PM10_ENV"}},{"label":" SENSOR_TYPE_PM10_STD","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"80000000SENSOR_TYPE_PM10_STD","filterText":"SENSOR_TYPE_PM10_STD","insertText":"SENSOR_TYPE_PM10_STD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":7}},"newText":"SENSOR_TYPE_PM10_STD"}},{"label":" SENSOR_TYPE_PM25_ENV","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"80000000SENSOR_TYPE_PM25_ENV","filterText":"SENSOR_TYPE_PM25_ENV","insertText":"SENSOR_TYPE_PM25_ENV","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":7}},"newText":"SENSOR_TYPE_PM25_ENV"}},{"label":" SENSOR_TYPE_PM25_STD","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"80000000SENSOR_TYPE_PM25_STD","filterText":"SENSOR_TYPE_PM25_STD","insertText":"SENSOR_TYPE_PM25_STD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":7}},"newText":"SENSOR_TYPE_PM25_STD"}}]}}Content-Length: 851

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":7}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'etp'; did you mean 'exp'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/math.h","range":{"start":{"line":248,"character":14},"end":{"line":248,"character":17}}},"message":"'exp' declared here"}]},{"range":{"start":{"line":64,"character":4},"end":{"line":64,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}}
<<<
Content-Length: 278

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":10},"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":6,"line":63},"end":{"character":7,"line":63}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'et'"}]}}
<<<
Content-Length: 279

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":11},"contentChanges":[{"text":"P","rangeLength":0,"range":{"start":{"character":6,"line":63},"end":{"character":6,"line":63}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'etP'"}]}}
<<<
Content-Length: 279

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":12},"contentChanges":[{"text":"H","rangeLength":0,"range":{"start":{"character":7,"line":63},"end":{"character":7,"line":63}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'etPH'"}]}}
<<<
Content-Length: 279

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":13},"contentChanges":[{"text":"O","rangeLength":0,"range":{"start":{"character":8,"line":63},"end":{"character":8,"line":63}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":9}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'etPHO'"}]}}
<<<
Content-Length: 278

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":14},"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":8,"line":63},"end":{"character":9,"line":63}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'etPH'"}]}}
<<<
Content-Length: 278

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":15},"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":7,"line":63},"end":{"character":8,"line":63}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":63,"character":4},"end":{"line":63,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'etP'"}]}}
<<<
Content-Length: 278

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":16},"contentChanges":[{"text":"","rangeLength":3,"range":{"start":{"character":4,"line":63},"end":{"character":7,"line":63}}}]},"method":"textDocument\/didChange"}Content-Length: 278

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":17},"contentChanges":[{"text":"","rangeLength":5,"range":{"start":{"character":0,"line":63},"end":{"character":0,"line":64}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 156

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":16,"diagnostics":[]}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"2"}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"3"}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 345

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":19},"contentChanges":[{"text":"\n    \/\/ etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n","rangeLength":1,"range":{"start":{"character":14,"line":63},"end":{"character":0,"line":64}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 156

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":18,"diagnostics":[]}}Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"4"}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 278

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":20},"contentChanges":[{"text":"","rangeLength":3,"range":{"start":{"character":4,"line":64},"end":{"character":7,"line":64}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 156

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":19,"diagnostics":[]}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":7,"params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"options":{"insertSpaces":true,"tabSize":4}},"method":"textDocument\/formatting"}
>>>
Content-Length: 130

{"jsonrpc":"2.0","id":7,"result":[{"range":{"start":{"line":150,"character":1},"end":{"line":152,"character":0}},"newText":"\n"}]}
<<<
Content-Length: 282

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":21},"contentChanges":[{"text":"\n","rangeLength":0,"range":{"start":{"character":1,"line":150},"end":{"character":1,"line":150}}}]},"method":"textDocument\/didChange"}Content-Length: 280

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":22},"contentChanges":[{"text":"","rangeLength":1,"range":{"start":{"character":0,"line":151},"end":{"character":0,"line":152}}}]},"method":"textDocument\/didChange"}Content-Length: 5312

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"text":"#include <Adafruit_ADXL345_U.h>\n#include <Adafruit_Sensor.h>\n#include <MPU6050.h>\n#include <SoftwareSerial.h>\n#include <Wire.h>\nstruct Vector3D {\n    double x = 0.0;\n    double y = 0.0;\n    double z = 0.0;\n    double mag() {\n        return sqrt(x * x + y * y + z * z);\n    }\n};\nMPU6050 mpu;\nSoftwareSerial mySerial(3, 2); \/\/ RX, TX\nAdafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();\nvoid checkGyroSettings();\nvoid updateSerial() {\n    delay(500);\n    while (Serial.available()) {\n        String serialIn = Serial.readString();\n        Serial.print(\"Serial in: \");\n        Serial.println(serialIn);\n        mySerial.println(serialIn); \/\/ Forward what Serial received to Software Serial Port\n    }\n    int i = 2000;\n    while (mySerial.available() || i < 100) {\n        String serialOut = mySerial.readString();\n        Serial.println(serialOut); \/\/ Forward what Software Serial received to Serial Port\n        i++;\n        delay(50);\n    }\n}\nvoid etPhoneHome(char* countrycode, char* phonenumber, char* message) {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CMGF=1\"); \/\/ Configuring TEXT mode\n    updateSerial();\n    mySerial.print(\"AT+CMGS=\\\"+\"); \/\/ change ZZ with country code and xxxxxxxxxxx with phone number to sms\n    mySerial.print(countrycode);\n    mySerial.print(phonenumber);\n    mySerial.println(\"\\\"\");\n    updateSerial();\n    mySerial.print(message); \/\/ text content\n    updateSerial();\n    mySerial.write(26);\n}\nvoid initSimThing() {\n    mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    updateSerial();\n    mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    updateSerial();\n    mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    updateSerial();\n    mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    updateSerial();\n}\nvoid setup() {\n    mySerial.begin(9600);\n    Serial.begin(9600);\n    Serial.println(\"Hello World\");\n    Serial.println(\"Init MPU\");\n    delay(1000);\n    int i = 0;\n    etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    while (1) {\n        updateSerial();\n    }\n    \/\/ mySerial.println(\"AT\"); \/\/ Once the handshake test is successful, it will back to OK\n    \/\/ delay(2000);\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CSQ\"); \/\/ Signal quality test, value range is 0-31 , 31 is the best\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CCID\"); \/\/ Read SIM information to confirm whether the SIM is plugged\n    \/\/ updateSerial();\n    \/\/ mySerial.println(\"AT+CREG?\"); \/\/ Check whether it has registered in the network\n    \/\/ updateSerial();\n    \/\/ etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ mpu.calibrateGyro();\n    if (!accel.begin()) {\n        Serial.println(\"no acc :(\");\n    } else {\n        Serial.println(\"acc :)\");\n    }\n    sensors_event_t event;\n    accel.getEvent(&event);\n    Vector3D sdf;\n    sdf.x = event.acceleration.x;\n    sdf.y = -event.acceleration.z;\n    sdf.z = -event.acceleration.y;\n    if (abs(10 - sdf.z) > 2) {\n        Serial.println(\"Incorrect acc orientation\");\n        Serial.print(\"X: \");\n        Serial.print(sdf.x);\n        Serial.print(\", Y: \");\n        Serial.print(sdf.y);\n        Serial.print(\", Z: \");\n        Serial.println(sdf.z);\n    }\n}\n\nlong time = 0;\nint sleep = 50;\nlong lastFallTime = -10000;\nlong fallBreak = 4000;\nconst char* message = \"u good bro?\";\nvoid loop() {\n    \/\/ if (time % 10000 == 0) {\n    \/\/     updateSerial();\n    \/\/     Serial.println(\"update bro\");\n    \/\/ }\n    \/\/ if (time == 30000) {\n    \/\/     Serial.println(\"sdfaksd\");\n    \/\/     etPhoneHome(\"01\", \"7038250271\", \"Hello World\");\n    \/\/ }\n\n    \/\/ Serial.println(\"ur mom\");\n    \/\/ delay(1000);\n    sensors_event_t event;\n    accel.getEvent(&event);\n    \/\/ Serial.print(\"X: \");\n    \/\/ Serial.println(\"m\/s^2 \");\n    Vector3D acc;\n    acc.x = event.acceleration.x;\n    acc.y = -event.acceleration.z;\n    acc.z = -event.acceleration.y;\n    \/\/ Serial.print(sdf.x);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Y: \");\n    \/\/ Serial.print(sdf.y);\n    \/\/ Serial.print(\", \");\n    \/\/ \/\/ Serial.print(\" Z: \");\n    \/\/ Serial.print(sdf.z);\n    \/\/ Serial.print(\",\\n\");\n    \/\/ Serial.print(\"mag: \");\n    \/\/ Serial.println(sdf.mag() - 9.8);\n    if (acc.mag() - 10.0 > 3.0) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    if (abs(acc.mag() - 9.8) < 1.5 && (abs(acc.x) > abs(acc.z) || abs(acc.y) > abs(acc.z) || (abs(acc.z) > 4.5 && acc.z < 0))) {\n        if (time - lastFallTime > fallBreak) {\n            Serial.println(message);\n            lastFallTime = time;\n        }\n    }\n    delay(sleep);\n    time += sleep;\n}\n"},"method":"textDocument\/didSave"}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"5"}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"6"}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 156

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":22,"diagnostics":[]}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 287

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":24},"contentChanges":[{"text":"\n    \n","rangeLength":1,"range":{"start":{"character":51,"line":64},"end":{"character":0,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 156

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","version":23,"diagnostics":[]}}
<<<
Content-Length: 279

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":25},"contentChanges":[{"text":"S","rangeLength":0,"range":{"start":{"character":4,"line":65},"end":{"character":4,"line":65}}}]},"method":"textDocument\/didChange"}Content-Length: 215

{"jsonrpc":"2.0","id":8,"params":{"position":{"character":5,"line":65},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"context":{"triggerKind":1}},"method":"textDocument\/completion"}
>>>
Content-Length: 1071

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'S'"},{"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":88,"character":12},"end":{"line":88,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":89,"character":13},"end":{"line":89,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":90,"character":13},"end":{"line":90,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"}]}}Content-Length: 29708

{"jsonrpc":"2.0","id":8,"result":{"isIncomplete":true,"items":[{"label":"•String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"40010468String","filterText":"String","insertText":"String","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"String"}},{"label":"•StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"4009ebafStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"StringSumHelper"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"402a1048Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"Stream"}},{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"403c35b3setup","filterText":"setup","insertText":"setup","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"setup"}},{"label":" std","kind":9,"sortText":"4062ed6bstd","filterText":"std","insertText":"std","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"std"}},{"label":"•Serial","kind":6,"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"406616f4Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"Serial"}},{"label":" SENSORS_GRAVITY_STANDARD","kind":1,"documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"4070a89eSENSORS_GRAVITY_STANDARD","filterText":"SENSORS_GRAVITY_STANDARD","insertText":"SENSORS_GRAVITY_STANDARD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSORS_GRAVITY_STANDARD"}},{"label":" SENSORS_MAGFIELD_EARTH_MAX","kind":1,"documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"4070a89eSENSORS_MAGFIELD_EARTH_MAX","filterText":"SENSORS_MAGFIELD_EARTH_MAX","insertText":"SENSORS_MAGFIELD_EARTH_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSORS_MAGFIELD_EARTH_MAX"}},{"label":" SENSORS_MAGFIELD_EARTH_MIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"4070a89eSENSORS_MAGFIELD_EARTH_MIN","filterText":"SENSORS_MAGFIELD_EARTH_MIN","insertText":"SENSORS_MAGFIELD_EARTH_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSORS_MAGFIELD_EARTH_MIN"}},{"label":" SENSORS_RADS_TO_DPS","kind":1,"documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"4070a89eSENSORS_RADS_TO_DPS","filterText":"SENSORS_RADS_TO_DPS","insertText":"SENSORS_RADS_TO_DPS","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSORS_RADS_TO_DPS"}},{"label":" SERIAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eSERIAL","filterText":"SERIAL","insertText":"SERIAL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SERIAL"}},{"label":" sq(x)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89esq","filterText":"sq","insertText":"sq","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sq"}},{"label":" size_t","kind":8,"sortText":"40851dc4size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"size_t"}},{"label":" SERIAL_PORT_HARDWARE","kind":1,"sortText":"409f9b1fSERIAL_PORT_HARDWARE","filterText":"SERIAL_PORT_HARDWARE","insertText":"SERIAL_PORT_HARDWARE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SERIAL_PORT_HARDWARE"}},{"label":" SERIAL_PORT_MONITOR","kind":1,"sortText":"409f9b1fSERIAL_PORT_MONITOR","filterText":"SERIAL_PORT_MONITOR","insertText":"SERIAL_PORT_MONITOR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SERIAL_PORT_MONITOR"}},{"label":" short","kind":14,"sortText":"40a9a1f8short","filterText":"short","insertText":"short","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"40a9a1f8signed","filterText":"signed","insertText":"signed","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"40a9a1f8sizeof","filterText":"sizeof","insertText":"sizeof","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sizeof"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"40a9a1f8sizeof...","filterText":"sizeof...","insertText":"sizeof...","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sizeof..."}},{"label":" static","kind":14,"sortText":"40a9a1f8static","filterText":"static","insertText":"static","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"40a9a1f8static_assert","filterText":"static_assert","insertText":"static_assert","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"static_assert"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"40a9a1f8static_cast","filterText":"static_cast","insertText":"static_cast","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"static_cast"}},{"label":" struct","kind":14,"sortText":"40a9a1f8struct","filterText":"struct","insertText":"struct","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"struct"}},{"label":" sensors_type_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`  \nSensor types"},"sortText":"40ad4e86sensors_type_t","filterText":"sensors_type_t","insertText":"sensors_type_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sensors_type_t"}},{"label":" sensors_vec_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`  \nstruct sensors_vec_s is used to return a vector in a common format."},"sortText":"40ad4e86sensors_vec_t","filterText":"sensors_vec_t","insertText":"sensors_vec_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sensors_vec_t"}},{"label":" SoftwareSerial","kind":7,"sortText":"40c34bbdSoftwareSerial","filterText":"SoftwareSerial","insertText":"SoftwareSerial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SoftwareSerial"}},{"label":" sensor_t","kind":8,"sortText":"40c34bbdsensor_t","filterText":"sensor_t","insertText":"sensor_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sensor_t"}},{"label":" sensors_event_t","kind":8,"sortText":"40c34bbdsensors_event_t","filterText":"sensors_event_t","insertText":"sensors_event_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sensors_event_t"}},{"label":"•std::size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`  \nThis is normally declared in various headers that we do not have available, so just define it here. We could also use ::size_t below, but then anyone including \\\u003cnew\u003e can no longer assume std::size_t is available."},"sortText":"40cc4228size_t","filterText":"size_t","insertText":"std::size_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"std::size_t"}},{"label":" sqrt(double x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sqrt() function returns the non-negative square root of \\\\a \\_\\_x."},"sortText":"40dc525fsqrt","filterText":"sqrt","insertText":"sqrt","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sqrt"}},{"label":" SIG_ATOMIC_MAX","kind":1,"sortText":"40f2a950SIG_ATOMIC_MAX","filterText":"SIG_ATOMIC_MAX","insertText":"SIG_ATOMIC_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SIG_ATOMIC_MAX"}},{"label":" SIG_ATOMIC_MIN","kind":1,"sortText":"40f2a950SIG_ATOMIC_MIN","filterText":"SIG_ATOMIC_MIN","insertText":"SIG_ATOMIC_MIN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SIG_ATOMIC_MIN"}},{"label":" SIZE_MAX","kind":1,"sortText":"40f2a950SIZE_MAX","filterText":"SIZE_MAX","insertText":"SIZE_MAX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SIZE_MAX"}},{"label":" signbitf","kind":1,"sortText":"40f2a950signbitf","filterText":"signbitf","insertText":"signbitf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"signbitf"}},{"label":" sinf","kind":1,"sortText":"40f2a950sinf","filterText":"sinf","insertText":"sinf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sinf"}},{"label":" sinhf","kind":1,"sortText":"40f2a950sinhf","filterText":"sinhf","insertText":"sinhf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sinhf"}},{"label":" squaref","kind":1,"sortText":"40f2a950squaref","filterText":"squaref","insertText":"squaref","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"squaref"}},{"label":" shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ff72f2shiftIn","filterText":"shiftIn","insertText":"shiftIn","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"shiftIn"}},{"label":" shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ff72f2shiftOut","filterText":"shiftOut","insertText":"shiftOut","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"shiftOut"}},{"label":"•serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"410ce450serialEventRun","filterText":"serialEventRun","insertText":"serialEventRun","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"serialEventRun"}},{"label":" SE","kind":1,"sortText":"41138ff8SE","filterText":"SE","insertText":"SE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SE"}},{"label":" SELFPRGEN","kind":1,"sortText":"41138ff8SELFPRGEN","filterText":"SELFPRGEN","insertText":"SELFPRGEN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SELFPRGEN"}},{"label":" SIGNAL(vector)","kind":1,"sortText":"41138ff8SIGNAL","filterText":"SIGNAL","insertText":"SIGNAL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SIGNAL"}},{"label":" SIGNATURE_0","kind":1,"sortText":"41138ff8SIGNATURE_0","filterText":"SIGNATURE_0","insertText":"SIGNATURE_0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SIGNATURE_0"}},{"label":" SIGNATURE_1","kind":1,"sortText":"41138ff8SIGNATURE_1","filterText":"SIGNATURE_1","insertText":"SIGNATURE_1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SIGNATURE_1"}},{"label":" SIGNATURE_2","kind":1,"sortText":"41138ff8SIGNATURE_2","filterText":"SIGNATURE_2","insertText":"SIGNATURE_2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SIGNATURE_2"}},{"label":" SIGRD","kind":1,"sortText":"41138ff8SIGRD","filterText":"SIGRD","insertText":"SIGRD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SIGRD"}},{"label":" SLEEP_MODE_ADC","kind":1,"sortText":"41138ff8SLEEP_MODE_ADC","filterText":"SLEEP_MODE_ADC","insertText":"SLEEP_MODE_ADC","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SLEEP_MODE_ADC"}},{"label":" SLEEP_MODE_EXT_STANDBY","kind":1,"sortText":"41138ff8SLEEP_MODE_EXT_STANDBY","filterText":"SLEEP_MODE_EXT_STANDBY","insertText":"SLEEP_MODE_EXT_STANDBY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SLEEP_MODE_EXT_STANDBY"}},{"label":" SLEEP_MODE_IDLE","kind":1,"sortText":"41138ff8SLEEP_MODE_IDLE","filterText":"SLEEP_MODE_IDLE","insertText":"SLEEP_MODE_IDLE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SLEEP_MODE_IDLE"}},{"label":" SLEEP_MODE_PWR_DOWN","kind":1,"sortText":"41138ff8SLEEP_MODE_PWR_DOWN","filterText":"SLEEP_MODE_PWR_DOWN","insertText":"SLEEP_MODE_PWR_DOWN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SLEEP_MODE_PWR_DOWN"}},{"label":" SLEEP_MODE_PWR_SAVE","kind":1,"sortText":"41138ff8SLEEP_MODE_PWR_SAVE","filterText":"SLEEP_MODE_PWR_SAVE","insertText":"SLEEP_MODE_PWR_SAVE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SLEEP_MODE_PWR_SAVE"}},{"label":" SLEEP_MODE_STANDBY","kind":1,"sortText":"41138ff8SLEEP_MODE_STANDBY","filterText":"SLEEP_MODE_STANDBY","insertText":"SLEEP_MODE_STANDBY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SLEEP_MODE_STANDBY"}},{"label":" SM0","kind":1,"sortText":"41138ff8SM0","filterText":"SM0","insertText":"SM0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SM0"}},{"label":" SM1","kind":1,"sortText":"41138ff8SM1","filterText":"SM1","insertText":"SM1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SM1"}},{"label":" SM2","kind":1,"sortText":"41138ff8SM2","filterText":"SM2","insertText":"SM2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SM2"}},{"label":" SMCR","kind":1,"sortText":"41138ff8SMCR","filterText":"SMCR","insertText":"SMCR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SMCR"}},{"label":" SPCR","kind":1,"sortText":"41138ff8SPCR","filterText":"SPCR","insertText":"SPCR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPCR"}},{"label":" SPDR","kind":1,"sortText":"41138ff8SPDR","filterText":"SPDR","insertText":"SPDR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPDR"}},{"label":" SPDR0","kind":1,"sortText":"41138ff8SPDR0","filterText":"SPDR0","insertText":"SPDR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPDR0"}},{"label":" SPDR1","kind":1,"sortText":"41138ff8SPDR1","filterText":"SPDR1","insertText":"SPDR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPDR1"}},{"label":" SPDR2","kind":1,"sortText":"41138ff8SPDR2","filterText":"SPDR2","insertText":"SPDR2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPDR2"}},{"label":" SPDR3","kind":1,"sortText":"41138ff8SPDR3","filterText":"SPDR3","insertText":"SPDR3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPDR3"}},{"label":" SPDR4","kind":1,"sortText":"41138ff8SPDR4","filterText":"SPDR4","insertText":"SPDR4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPDR4"}},{"label":" SPDR5","kind":1,"sortText":"41138ff8SPDR5","filterText":"SPDR5","insertText":"SPDR5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPDR5"}},{"label":" SPDR6","kind":1,"sortText":"41138ff8SPDR6","filterText":"SPDR6","insertText":"SPDR6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPDR6"}},{"label":" SPDR7","kind":1,"sortText":"41138ff8SPDR7","filterText":"SPDR7","insertText":"SPDR7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPDR7"}},{"label":" SPE","kind":1,"sortText":"41138ff8SPE","filterText":"SPE","insertText":"SPE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPE"}},{"label":" SPI2X","kind":1,"sortText":"41138ff8SPI2X","filterText":"SPI2X","insertText":"SPI2X","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPI2X"}},{"label":" SPIE","kind":1,"sortText":"41138ff8SPIE","filterText":"SPIE","insertText":"SPIE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPIE"}},{"label":" SPIF","kind":1,"sortText":"41138ff8SPIF","filterText":"SPIF","insertText":"SPIF","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPIF"}},{"label":" SPI_STC_vect","kind":1,"sortText":"41138ff8SPI_STC_vect","filterText":"SPI_STC_vect","insertText":"SPI_STC_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPI_STC_vect"}},{"label":" SPI_STC_vect_num","kind":1,"sortText":"41138ff8SPI_STC_vect_num","filterText":"SPI_STC_vect_num","insertText":"SPI_STC_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPI_STC_vect_num"}},{"label":" SPMCSR","kind":1,"sortText":"41138ff8SPMCSR","filterText":"SPMCSR","insertText":"SPMCSR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPMCSR"}},{"label":" SPMEN","kind":1,"sortText":"41138ff8SPMEN","filterText":"SPMEN","insertText":"SPMEN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPMEN"}},{"label":" SPMIE","kind":1,"sortText":"41138ff8SPMIE","filterText":"SPMIE","insertText":"SPMIE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPMIE"}},{"label":" SPM_PAGESIZE","kind":1,"sortText":"41138ff8SPM_PAGESIZE","filterText":"SPM_PAGESIZE","insertText":"SPM_PAGESIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPM_PAGESIZE"}},{"label":" SPM_READY_vect","kind":1,"sortText":"41138ff8SPM_READY_vect","filterText":"SPM_READY_vect","insertText":"SPM_READY_vect","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPM_READY_vect"}},{"label":" SPM_READY_vect_num","kind":1,"sortText":"41138ff8SPM_READY_vect_num","filterText":"SPM_READY_vect_num","insertText":"SPM_READY_vect_num","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPM_READY_vect_num"}},{"label":" SPR0","kind":1,"sortText":"41138ff8SPR0","filterText":"SPR0","insertText":"SPR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPR0"}},{"label":" SPR1","kind":1,"sortText":"41138ff8SPR1","filterText":"SPR1","insertText":"SPR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPR1"}},{"label":" SPSR","kind":1,"sortText":"41138ff8SPSR","filterText":"SPSR","insertText":"SPSR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SPSR"}},{"label":" sei()","kind":1,"sortText":"41138ff8sei","filterText":"sei","insertText":"sei","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"sei"}},{"label":" SENSOR_TYPE_AMBIENT_TEMPERATURE","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_AMBIENT_TEMPERATURE","filterText":"SENSOR_TYPE_AMBIENT_TEMPERATURE","insertText":"SENSOR_TYPE_AMBIENT_TEMPERATURE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_AMBIENT_TEMPERATURE"}},{"label":" SENSOR_TYPE_COLOR","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_COLOR","filterText":"SENSOR_TYPE_COLOR","insertText":"SENSOR_TYPE_COLOR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_COLOR"}},{"label":" SENSOR_TYPE_CURRENT","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_CURRENT","filterText":"SENSOR_TYPE_CURRENT","insertText":"SENSOR_TYPE_CURRENT","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_CURRENT"}},{"label":" SENSOR_TYPE_ECO2","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_ECO2","filterText":"SENSOR_TYPE_ECO2","insertText":"SENSOR_TYPE_ECO2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_ECO2"}},{"label":" SENSOR_TYPE_GAS_RESISTANCE","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_GAS_RESISTANCE","filterText":"SENSOR_TYPE_GAS_RESISTANCE","insertText":"SENSOR_TYPE_GAS_RESISTANCE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_GAS_RESISTANCE"}},{"label":" SENSOR_TYPE_GYROSCOPE","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_GYROSCOPE","filterText":"SENSOR_TYPE_GYROSCOPE","insertText":"SENSOR_TYPE_GYROSCOPE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_GYROSCOPE"}},{"label":" SENSOR_TYPE_LIGHT","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_LIGHT","filterText":"SENSOR_TYPE_LIGHT","insertText":"SENSOR_TYPE_LIGHT","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_LIGHT"}},{"label":" SENSOR_TYPE_LINEAR_ACCELERATION","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_LINEAR_ACCELERATION","filterText":"SENSOR_TYPE_LINEAR_ACCELERATION","insertText":"SENSOR_TYPE_LINEAR_ACCELERATION","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_LINEAR_ACCELERATION"}},{"label":" SENSOR_TYPE_NOX_INDEX","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_NOX_INDEX","filterText":"SENSOR_TYPE_NOX_INDEX","insertText":"SENSOR_TYPE_NOX_INDEX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_NOX_INDEX"}},{"label":" SENSOR_TYPE_OBJECT_TEMPERATURE","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_OBJECT_TEMPERATURE","filterText":"SENSOR_TYPE_OBJECT_TEMPERATURE","insertText":"SENSOR_TYPE_OBJECT_TEMPERATURE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_OBJECT_TEMPERATURE"}},{"label":" SENSOR_TYPE_ORIENTATION","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_ORIENTATION","filterText":"SENSOR_TYPE_ORIENTATION","insertText":"SENSOR_TYPE_ORIENTATION","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_ORIENTATION"}},{"label":" SENSOR_TYPE_PM10_ENV","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_PM10_ENV","filterText":"SENSOR_TYPE_PM10_ENV","insertText":"SENSOR_TYPE_PM10_ENV","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_PM10_ENV"}},{"label":" SENSOR_TYPE_PM25_ENV","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_PM25_ENV","filterText":"SENSOR_TYPE_PM25_ENV","insertText":"SENSOR_TYPE_PM25_ENV","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_PM25_ENV"}},{"label":" SENSOR_TYPE_PM25_STD","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_PM25_STD","filterText":"SENSOR_TYPE_PM25_STD","insertText":"SENSOR_TYPE_PM25_STD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_PM25_STD"}},{"label":" SENSOR_TYPE_PRESSURE","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_PRESSURE","filterText":"SENSOR_TYPE_PRESSURE","insertText":"SENSOR_TYPE_PRESSURE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_PRESSURE"}},{"label":" SENSOR_TYPE_PROXIMITY","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_PROXIMITY","filterText":"SENSOR_TYPE_PROXIMITY","insertText":"SENSOR_TYPE_PROXIMITY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_PROXIMITY"}},{"label":" SENSOR_TYPE_RELATIVE_HUMIDITY","kind":20,"detail":"sensors_type_t","documentation":{"kind":"markdown","value":"From `\"Adafruit_Sensor.h\"`"},"sortText":"41449cefSENSOR_TYPE_RELATIVE_HUMIDITY","filterText":"SENSOR_TYPE_RELATIVE_HUMIDITY","insertText":"SENSOR_TYPE_RELATIVE_HUMIDITY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":5}},"newText":"SENSOR_TYPE_RELATIVE_HUMIDITY"}}]}}
<<<
Content-Length: 280

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":26},"contentChanges":[{"text":"er","rangeLength":0,"range":{"start":{"character":5,"line":65},"end":{"character":5,"line":65}}}]},"method":"textDocument\/didChange"}Content-Length: 215

{"jsonrpc":"2.0","id":9,"params":{"position":{"character":7,"line":65},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"context":{"triggerKind":3}},"method":"textDocument\/completion"}
>>>
Content-Length: 12245

{"jsonrpc":"2.0","id":9,"result":{"isIncomplete":false,"items":[{"label":"•Serial","kind":6,"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"406616f4Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"Serial"}},{"label":"•HardwareSerial","kind":7,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"408c99b1HardwareSerial","filterText":"HardwareSerial","insertText":"HardwareSerial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"HardwareSerial"}},{"label":" SERIAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40911907SERIAL","filterText":"SERIAL","insertText":"SERIAL","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL"}},{"label":" SoftwareSerial","kind":7,"documentation":{"kind":"markdown","value":"From `\"SoftwareSerial.h\"`"},"sortText":"409792a8SoftwareSerial","filterText":"SoftwareSerial","insertText":"SoftwareSerial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SoftwareSerial"}},{"label":"•SERIAL_5E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_5E1","filterText":"SERIAL_5E1","insertText":"SERIAL_5E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_5E1"}},{"label":"•SERIAL_5E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_5E2","filterText":"SERIAL_5E2","insertText":"SERIAL_5E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_5E2"}},{"label":"•SERIAL_5N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_5N1","filterText":"SERIAL_5N1","insertText":"SERIAL_5N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_5N1"}},{"label":"•SERIAL_5N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_5N2","filterText":"SERIAL_5N2","insertText":"SERIAL_5N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_5N2"}},{"label":"•SERIAL_5O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_5O1","filterText":"SERIAL_5O1","insertText":"SERIAL_5O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_5O1"}},{"label":"•SERIAL_5O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_5O2","filterText":"SERIAL_5O2","insertText":"SERIAL_5O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_5O2"}},{"label":"•SERIAL_6E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_6E1","filterText":"SERIAL_6E1","insertText":"SERIAL_6E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_6E1"}},{"label":"•SERIAL_6E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_6E2","filterText":"SERIAL_6E2","insertText":"SERIAL_6E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_6E2"}},{"label":"•SERIAL_6N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_6N1","filterText":"SERIAL_6N1","insertText":"SERIAL_6N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_6N1"}},{"label":"•SERIAL_6N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_6N2","filterText":"SERIAL_6N2","insertText":"SERIAL_6N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_6N2"}},{"label":"•SERIAL_6O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_6O1","filterText":"SERIAL_6O1","insertText":"SERIAL_6O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_6O1"}},{"label":"•SERIAL_6O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_6O2","filterText":"SERIAL_6O2","insertText":"SERIAL_6O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_6O2"}},{"label":"•SERIAL_7E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_7E1","filterText":"SERIAL_7E1","insertText":"SERIAL_7E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_7E1"}},{"label":"•SERIAL_7E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_7E2","filterText":"SERIAL_7E2","insertText":"SERIAL_7E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_7E2"}},{"label":"•SERIAL_7N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_7N1","filterText":"SERIAL_7N1","insertText":"SERIAL_7N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_7N1"}},{"label":"•SERIAL_7N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_7N2","filterText":"SERIAL_7N2","insertText":"SERIAL_7N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_7N2"}},{"label":"•SERIAL_7O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_7O1","filterText":"SERIAL_7O1","insertText":"SERIAL_7O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_7O1"}},{"label":"•SERIAL_7O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_7O2","filterText":"SERIAL_7O2","insertText":"SERIAL_7O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_7O2"}},{"label":"•SERIAL_8E1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_8E1","filterText":"SERIAL_8E1","insertText":"SERIAL_8E1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_8E1"}},{"label":"•SERIAL_8E2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_8E2","filterText":"SERIAL_8E2","insertText":"SERIAL_8E2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_8E2"}},{"label":"•SERIAL_8N1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_8N1","filterText":"SERIAL_8N1","insertText":"SERIAL_8N1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_8N1"}},{"label":"•SERIAL_8N2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_8N2","filterText":"SERIAL_8N2","insertText":"SERIAL_8N2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_8N2"}},{"label":"•SERIAL_8O1","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_8O1","filterText":"SERIAL_8O1","insertText":"SERIAL_8O1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_8O1"}},{"label":"•SERIAL_8O2","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_8O2","filterText":"SERIAL_8O2","insertText":"SERIAL_8O2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_8O2"}},{"label":"•SERIAL_RX_BUFFER_SIZE","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_RX_BUFFER_SIZE","filterText":"SERIAL_RX_BUFFER_SIZE","insertText":"SERIAL_RX_BUFFER_SIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_RX_BUFFER_SIZE"}},{"label":"•SERIAL_TX_BUFFER_SIZE","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ac665dSERIAL_TX_BUFFER_SIZE","filterText":"SERIAL_TX_BUFFER_SIZE","insertText":"SERIAL_TX_BUFFER_SIZE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_TX_BUFFER_SIZE"}},{"label":" mySerial","kind":6,"detail":"SoftwareSerial","documentation":{"kind":"markdown","value":"RX, TX"},"sortText":"40affa88mySerial","filterText":"mySerial","insertText":"mySerial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"mySerial"}},{"label":" SERIAL_PORT_HARDWARE","kind":1,"sortText":"40c50144SERIAL_PORT_HARDWARE","filterText":"SERIAL_PORT_HARDWARE","insertText":"SERIAL_PORT_HARDWARE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_PORT_HARDWARE"}},{"label":" SERIAL_PORT_MONITOR","kind":1,"sortText":"40c50144SERIAL_PORT_MONITOR","filterText":"SERIAL_PORT_MONITOR","insertText":"SERIAL_PORT_MONITOR","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SERIAL_PORT_MONITOR"}},{"label":" updateSerial()","kind":3,"detail":"void","sortText":"40e95a89updateSerial","filterText":"updateSerial","insertText":"updateSerial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"updateSerial"}},{"label":"•serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"410ce450serialEventRun","filterText":"serialEventRun","insertText":"serialEventRun","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"serialEventRun"}},{"label":" HardwareSerial(volatile uint8_t *ubrrh, volatile uint8_t *ubrrl, volatile uint8_t *ucsra, volatile uint8_t *ucsrb, volatile uint8_t *ucsrc, volatile uint8_t *udr)","kind":4,"sortText":"41df08f1HardwareSerial","filterText":"HardwareSerial","insertText":"HardwareSerial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"HardwareSerial"}},{"label":" SoftwareSerial(…)","kind":4,"detail":"[2 overloads]","sortText":"41df08f1SoftwareSerial","filterText":"SoftwareSerial","insertText":"SoftwareSerial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"newText":"SoftwareSerial"}}]}}Content-Length: 1073

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Ser'"},{"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":88,"character":12},"end":{"line":88,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":89,"character":13},"end":{"line":89,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":90,"character":13},"end":{"line":90,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"}]}}
<<<
Content-Length: 279

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":27},"contentChanges":[{"text":"i","rangeLength":0,"range":{"start":{"character":7,"line":65},"end":{"character":7,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 1074

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seri'"},{"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":88,"character":12},"end":{"line":88,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":89,"character":13},"end":{"line":89,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":90,"character":13},"end":{"line":90,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"}]}}
<<<
Content-Length: 279

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":28},"contentChanges":[{"text":"a","rangeLength":0,"range":{"start":{"character":8,"line":65},"end":{"character":8,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 850

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'Seria'; did you mean 'Serial'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/HardwareSerial.h","range":{"start":{"line":142,"character":24},"end":{"line":142,"character":30}}},"message":"'Serial' declared here"}]},{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}}
<<<
Content-Length: 279

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":29},"contentChanges":[{"text":"l","rangeLength":0,"range":{"start":{"character":9,"line":65},"end":{"character":9,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":30},"contentChanges":[{"text":".","rangeLength":0,"range":{"start":{"character":10,"line":65},"end":{"character":10,"line":65}}}]},"method":"textDocument\/didChange"}Content-Length: 240

{"jsonrpc":"2.0","id":10,"params":{"position":{"character":11,"line":65},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"context":{"triggerKind":2,"triggerCharacter":"."}},"method":"textDocument\/completion"}
>>>
Content-Length: 6390

{"jsonrpc":"2.0","id":10,"result":{"isIncomplete":false,"items":[{"label":" available()","kind":2,"detail":"int","sortText":"40902d60available","filterText":"available","insertText":"available","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"available"}},{"label":" availableForWrite()","kind":2,"detail":"int","sortText":"40902d60availableForWrite","filterText":"availableForWrite","insertText":"availableForWrite","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"availableForWrite"}},{"label":" begin(…)","kind":2,"detail":"[2 overloads]","sortText":"40902d60begin","filterText":"begin","insertText":"begin","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"begin"}},{"label":" end()","kind":2,"detail":"void","sortText":"40902d60end","filterText":"end","insertText":"end","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"end"}},{"label":" flush()","kind":2,"detail":"void","sortText":"40902d60flush","filterText":"flush","insertText":"flush","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"flush"}},{"label":" peek()","kind":2,"detail":"int","sortText":"40902d60peek","filterText":"peek","insertText":"peek","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"peek"}},{"label":" read()","kind":2,"detail":"int","sortText":"40902d60read","filterText":"read","insertText":"read","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"read"}},{"label":" write(…)","kind":2,"detail":"[3 overloads]","sortText":"40902d60write","filterText":"write","insertText":"write","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"write"}},{"label":" write(…)","kind":2,"detail":"[5 overloads]","sortText":"40902d60write","filterText":"write","insertText":"write","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"write"}},{"label":" clearWriteError()","kind":2,"detail":"void","sortText":"412843cdclearWriteError","filterText":"clearWriteError","insertText":"clearWriteError","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"clearWriteError"}},{"label":" find(…)","kind":2,"detail":"[5 overloads]","sortText":"412843cdfind","filterText":"find","insertText":"find","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"find"}},{"label":" findUntil(…)","kind":2,"detail":"[4 overloads]","sortText":"412843cdfindUntil","filterText":"findUntil","insertText":"findUntil","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"findUntil"}},{"label":" getTimeout()","kind":2,"detail":"unsigned long","sortText":"412843cdgetTimeout","filterText":"getTimeout","insertText":"getTimeout","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"getTimeout"}},{"label":" getWriteError()","kind":2,"detail":"int","sortText":"412843cdgetWriteError","filterText":"getWriteError","insertText":"getWriteError","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"getWriteError"}},{"label":" parseFloat(LookaheadMode lookahead = SKIP_ALL, char ignore = NO_IGNORE_CHAR)","kind":2,"detail":"float","sortText":"412843cdparseFloat","filterText":"parseFloat","insertText":"parseFloat","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"parseFloat"}},{"label":" parseInt(LookaheadMode lookahead = SKIP_ALL, char ignore = NO_IGNORE_CHAR)","kind":2,"detail":"long","sortText":"412843cdparseInt","filterText":"parseInt","insertText":"parseInt","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"parseInt"}},{"label":" print(…)","kind":2,"detail":"[11 overloads]","sortText":"412843cdprint","filterText":"print","insertText":"print","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"print"}},{"label":" println(…)","kind":2,"detail":"[12 overloads]","sortText":"412843cdprintln","filterText":"println","insertText":"println","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"println"}},{"label":" readBytes(…)","kind":2,"detail":"[2 overloads]","sortText":"412843cdreadBytes","filterText":"readBytes","insertText":"readBytes","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"readBytes"}},{"label":" readBytesUntil(…)","kind":2,"detail":"[2 overloads]","sortText":"412843cdreadBytesUntil","filterText":"readBytesUntil","insertText":"readBytesUntil","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"readBytesUntil"}},{"label":" readString()","kind":2,"detail":"String","sortText":"412843cdreadString","filterText":"readString","insertText":"readString","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"readString"}},{"label":" readStringUntil(char terminator)","kind":2,"detail":"String","sortText":"412843cdreadStringUntil","filterText":"readStringUntil","insertText":"readStringUntil","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"readStringUntil"}},{"label":" setTimeout(unsigned long timeout)","kind":2,"detail":"void","sortText":"412843cdsetTimeout","filterText":"setTimeout","insertText":"setTimeout","insertTextFormat":1,"textEdit":{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"newText":"setTimeout"}}]}}Content-Length: 1067

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":88,"character":12},"end":{"line":88,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":89,"character":13},"end":{"line":89,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"},{"range":{"start":{"line":90,"character":13},"end":{"line":90,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'event'"}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":31},"contentChanges":[{"text":"p","rangeLength":0,"range":{"start":{"character":11,"line":65},"end":{"character":11,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 523

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":12}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'p' in 'HardwareSerial'"},{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":32},"contentChanges":[{"text":"r","rangeLength":0,"range":{"start":{"character":12,"line":65},"end":{"character":12,"line":65}}}]},"method":"textDocument\/didChange"}Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":33},"contentChanges":[{"text":"i","rangeLength":0,"range":{"start":{"character":13,"line":65},"end":{"character":13,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 524

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":13}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'pr' in 'HardwareSerial'"},{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":34},"contentChanges":[{"text":"n","rangeLength":0,"range":{"start":{"character":14,"line":65},"end":{"character":14,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 525

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":14}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'pri' in 'HardwareSerial'"},{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]}}Content-Length: 526

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":15}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'prin' in 'HardwareSerial'"}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":35},"contentChanges":[{"text":"t","rangeLength":0,"range":{"start":{"character":15,"line":65},"end":{"character":15,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 3245

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":16}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called","relatedInformation":[{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":64,"character":11},"end":{"line":64,"character":16}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":65,"character":11},"end":{"line":65,"character":16}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":66,"character":11},"end":{"line":66,"character":16}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":67,"character":11},"end":{"line":67,"character":16}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":68,"character":11},"end":{"line":68,"character":16}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":69,"character":11},"end":{"line":69,"character":16}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":70,"character":11},"end":{"line":70,"character":16}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":71,"character":11},"end":{"line":71,"character":16}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":72,"character":11},"end":{"line":72,"character":16}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":73,"character":11},"end":{"line":73,"character":16}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":74,"character":11},"end":{"line":74,"character":16}}},"message":"Possible target for call"}]}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":36},"contentChanges":[{"text":"l","rangeLength":0,"range":{"start":{"character":16,"line":65},"end":{"character":16,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 528

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":17}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'printl' in 'HardwareSerial'"}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":37},"contentChanges":[{"text":"n","rangeLength":0,"range":{"start":{"character":17,"line":65},"end":{"character":17,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 3548

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":18}},"severity":1,"code":"bound_member_function","source":"clang","message":"Reference to non-static member function must be called; did you mean to call it with no arguments? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":76,"character":11},"end":{"line":76,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":77,"character":11},"end":{"line":77,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":78,"character":11},"end":{"line":78,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":79,"character":11},"end":{"line":79,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":80,"character":11},"end":{"line":80,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":81,"character":11},"end":{"line":81,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":82,"character":11},"end":{"line":82,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":83,"character":11},"end":{"line":83,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":84,"character":11},"end":{"line":84,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":85,"character":11},"end":{"line":85,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":86,"character":11},"end":{"line":86,"character":18}}},"message":"Possible target for call"},{"location":{"uri":"file:///C:/Users/woodc/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.6/cores/arduino/Print.h","range":{"start":{"line":87,"character":11},"end":{"line":87,"character":18}}},"message":"Possible target for call"}]}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":38},"contentChanges":[{"text":"(","rangeLength":0,"range":{"start":{"character":18,"line":65},"end":{"character":18,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 870

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":9}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":107,"character":12},"end":{"line":107,"character":13}},"severity":1,"code":"function_definition_not_allowed","source":"clang","message":"Function definition is not allowed here"},{"range":{"start":{"line":153,"character":0},"end":{"line":153,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'","relatedInformation":[{"location":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","range":{"start":{"line":57,"character":13},"end":{"line":57,"character":14}}},"message":"To match this '{'"}]}]}}
<<<
Content-Length: 282

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":39},"contentChanges":[{"text":"\"","rangeLength":0,"range":{"start":{"character":19,"line":65},"end":{"character":19,"line":65}}}]},"method":"textDocument\/didChange"}Content-Length: 241

{"jsonrpc":"2.0","id":11,"params":{"position":{"character":20,"line":65},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"context":{"triggerKind":2,"triggerCharacter":"\""}},"method":"textDocument\/completion"}
>>>
Content-Length: 70

{"jsonrpc":"2.0","id":11,"result":{"isIncomplete":false,"items":null}}Content-Length: 872

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":19},"end":{"line":65,"character":20}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":107,"character":12},"end":{"line":107,"character":13}},"severity":1,"code":"function_definition_not_allowed","source":"clang","message":"Function definition is not allowed here"},{"range":{"start":{"line":153,"character":0},"end":{"line":153,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'","relatedInformation":[{"location":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","range":{"start":{"line":57,"character":13},"end":{"line":57,"character":14}}},"message":"To match this '{'"}]}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":40},"contentChanges":[{"text":"M","rangeLength":0,"range":{"start":{"character":20,"line":65},"end":{"character":20,"line":65}}}]},"method":"textDocument\/didChange"}Content-Length: 217

{"jsonrpc":"2.0","id":12,"params":{"position":{"character":21,"line":65},"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino"},"context":{"triggerKind":1}},"method":"textDocument\/completion"}
>>>
Content-Length: 70

{"jsonrpc":"2.0","id":12,"result":{"isIncomplete":false,"items":null}}Content-Length: 872

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":19},"end":{"line":65,"character":21}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":107,"character":12},"end":{"line":107,"character":13}},"severity":1,"code":"function_definition_not_allowed","source":"clang","message":"Function definition is not allowed here"},{"range":{"start":{"line":153,"character":0},"end":{"line":153,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'","relatedInformation":[{"location":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","range":{"start":{"line":57,"character":13},"end":{"line":57,"character":14}}},"message":"To match this '{'"}]}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":41},"contentChanges":[{"text":"s","rangeLength":0,"range":{"start":{"character":21,"line":65},"end":{"character":21,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 872

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":19},"end":{"line":65,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":107,"character":12},"end":{"line":107,"character":13}},"severity":1,"code":"function_definition_not_allowed","source":"clang","message":"Function definition is not allowed here"},{"range":{"start":{"line":153,"character":0},"end":{"line":153,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'","relatedInformation":[{"location":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","range":{"start":{"line":57,"character":13},"end":{"line":57,"character":14}}},"message":"To match this '{'"}]}]}}
<<<
Content-Length: 281

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":42},"contentChanges":[{"text":"g","rangeLength":0,"range":{"start":{"character":22,"line":65},"end":{"character":22,"line":65}}}]},"method":"textDocument\/didChange"}
>>>
Content-Length: 872

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","diagnostics":[{"range":{"start":{"line":65,"character":19},"end":{"line":65,"character":23}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":107,"character":12},"end":{"line":107,"character":13}},"severity":1,"code":"function_definition_not_allowed","source":"clang","message":"Function definition is not allowed here"},{"range":{"start":{"line":153,"character":0},"end":{"line":153,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'","relatedInformation":[{"location":{"uri":"file:///C:/Users/woodc/TrshProto/TrshProto.ino","range":{"start":{"line":57,"character":13},"end":{"line":57,"character":14}}},"message":"To match this '{'"}]}]}}Content-Length: 118

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","result":null,"id":"7"}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 289

{"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/C:\/Users\/woodc\/TrshProto\/TrshProto.ino","version":43},"contentChanges":[{"text":" sent\");","rangeLength":0,"range":{"start":{"character":23,"line":65},"end":{"character":23,"line":65}}}]},"method":"textDocument\/didChange"}